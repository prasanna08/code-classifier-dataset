{"0": {"top_similar": [[0, 1.0], [313, 0.8181818181818182], [164, 0.6428571428571429]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n  \tprint num", "fingerprint": [[19201, 12], [41720, 21], [23495, 6], [25976, 4], [11590, 23], [42344, 15], [11483, 8], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11590, 65969, 52605, 89100], "class": "3"}, "1": {"top_similar": [[1, 1.0], [223, 0.2], [344, 0.16666666666666666]], "tokens": ["UNK", "V", "\n", "UNK", "V", ":", "\n", "  ", "V", ".", "V", "(", ")", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n\nimport os\n\nwhile True:\n  os.fork()", "fingerprint": [[11519, 6], [54930, 5], [12104, 2], [38442, 9]], "k_gram_hashes": [89060, 89368, 12104, 89082, 90320, 54930, 11519, 62748, 89954, 38442, 89651, 24795], "class": "2"}, "2": {"top_similar": [[2, 1.0], [31, 0.19298245614035087], [88, 0.18]], "tokens": ["V", "=", "0", "\n", "V", "=", "10", "\n", "for", "V", "in", "V", "(", "(", "V", "-", "1", ")", "/", "3", ")", ":", "\n", "\t", "print", "(", "V", "+", "1", ")", "*", "3", "\n", "V", "+=", "(", "V", "+", "1", ")", "*", "3", "\n", "", "for", "V", "in", "V", "(", "(", "V", "-", "1", ")", "/", "5", ")", ":", "\n", "\t", "print", "(", "V", "+", "1", ")", "*", "5", "\n", "if", "V", "%", "3", "UNK", "0", ":", "\n", "\t\t", "V", "+=", "(", "V", "+", "1", ")", "*", "5", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# print\n#\n#     a\n#     b\nsum = 0\nmax = 10\nfor num in range((max-1)/3):\n\tprint (num+1)*3\n\tsum += (num+1)*3\n\nfor num in range((max-1)/5):\n\tprint (num+1)*5\n\tif x % 3 > 0:\n\t\tsum += (num+1)*5\n\nprint sum", "fingerprint": [[26293, 25], [16167, 46], [11860, 22], [12146, 32], [494, 43], [68846, 77], [11654, 76], [27191, 27], [58370, 5], [26295, 13], [27191, 63], [31241, 51], [31241, 15], [25, 88], [18189, 69], [10529, 68], [22928, 65], [10125, 87], [27191, 82], [22928, 84], [12133, 3], [23495, 20], [24884, 12], [23495, 56], [22926, 39], [10619, 7], [23063, 53], [16167, 10], [41720, 74], [22926, 29], [40769, 2], [27191, 37], [10135, 42], [11860, 58], [26295, 49], [26293, 61], [26293, 35], [19213, 71], [26293, 80], [23061, 17], [24884, 48]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90397, 58370, 75160, 10619, 22237, 89459, 16167, 89652, 24884, 26295, 89794, 31241, 38987, 23061, 35381, 43047, 23495, 54938, 11860, 78087, 51209, 26293, 89704, 27191, 38984, 22926, 29300, 42794, 12146, 90957, 83609, 26293, 89704, 27191, 38984, 22926, 29300, 42750, 10135, 494, 22237, 89459, 16167, 89652, 24884, 26295, 89794, 31241, 38987, 23063, 35471, 47097, 23495, 54938, 11860, 78087, 51209, 26293, 89704, 27191, 38984, 22928, 29390, 46808, 10529, 18189, 89526, 19213, 44480, 88002, 41720, 54933, 11654, 68846, 90957, 83609, 26293, 89704, 27191, 38984, 22928, 29390, 46800, 10125, 25, 1169], "class": "6"}, "3": {"top_similar": [[3, 1.0], [43, 0.6], [105, 0.6]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \n\tprint x\n  \n  ", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11860, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11860, 78119, 52610, 89325], "class": "1"}, "4": {"top_similar": [[4, 1.0], [433, 0.75], [436, 0.75]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "5", "\n", "print", "V", "%", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a = 5\n#     b = 3\n\nfor num in range(10):\n  print x % 5\n  print x % 3", "fingerprint": [[19265, 12], [11294, 14], [23495, 6], [52614, 10], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89528, 19265, 46825, 11294, 52614, 89526, 19170], "class": "1"}, "5": {"top_similar": [[5, 1.0], [286, 0.5641025641025641], [82, 0.4878048780487805]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "*", "UNK", "+", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsuma=0\nfor num in range(100) :\n  if num % 3==0 or num % 5 == 0 : \n    suma = suma + num\n\nsum=0\nfor num in range(1000) :\n  if num % 3==0 or num % 5 == 0 : \n    sum = sum + num\n  \nprint suma*10000+sum", "fingerprint": [[41720, 62], [19291, 59], [26201, 45], [19291, 22], [23495, 47], [1169, 73], [19201, 16], [11483, 12], [28310, 69], [2008, 36], [11483, 49], [8083, 65], [30298, 76], [44, 35], [10304, 27], [10304, 64], [8083, 28], [40735, 39], [16167, 6], [23495, 10], [41720, 25], [16167, 43], [25, 72], [10619, 3], [58693, 67], [58693, 30], [19201, 53], [42344, 56], [10125, 34], [26246, 8], [18189, 14], [42344, 19], [10125, 71], [40735, 2], [18189, 51], [10619, 40], [28310, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52619, 89773, 30298, 87704], "class": "3"}, "6": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "UNK", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print '%'\n  ", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61918, 52565, 87300], "class": "1"}, "7": {"top_similar": [[7, 1.0], [78, 0.8461538461538461], [119, 0.8461538461538461]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\nfor num in range(1000):\n  if (num%3 ==0):\n  \tsum=sum+num\n  if (num%5 ==0): \n  \tsum=sum+num\nprint sum\n", "fingerprint": [[19201, 17], [16784, 14], [11609, 41], [25, 49], [41022, 38], [372, 31], [11483, 12], [23495, 39], [19291, 35], [16784, 32], [28310, 28], [58693, 44], [23495, 21], [23495, 10], [16167, 6], [10125, 48], [28310, 46], [10133, 30], [58693, 26], [26201, 8], [10619, 3], [11609, 23], [41022, 20], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "8": {"top_similar": [[8, 1.0], [384, 0.875], [96, 0.7222222222222222]], "tokens": ["print", "V", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nprint num\nfor num in range(10):\n  if (num % 5 == 0):\n\tnum = num + num\n\t\n\t\nprint num \n  ", "fingerprint": [[23495, 20], [25, 30], [25976, 7], [28310, 27], [10125, 29], [19291, 16], [58693, 25], [16167, 5], [11483, 11], [41022, 19], [10619, 2], [16784, 13], [11879, 22], [23495, 9]], "k_gram_hashes": [52610, 89335, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "9": {"top_similar": [[9, 1.0], [78, 0.92], [119, 0.92]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nn=0\nfor num in range(10):\n  if (num%3 == 0):\n\tn=n+num\n  if (num%5 == 0):\n\tn=n+num\n\nprint n", "fingerprint": [[19201, 17], [16784, 14], [19291, 35], [25, 49], [41022, 38], [372, 31], [11483, 12], [23495, 39], [11879, 23], [16784, 32], [28310, 28], [58693, 44], [23495, 21], [23495, 10], [16167, 6], [10125, 48], [28310, 46], [10133, 30], [58693, 26], [10619, 3], [11879, 41], [25976, 8], [41022, 20], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "7"}, "10": {"top_similar": [[10, 1.0], [53, 1.0], [208, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "%", "3", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n\nfor num in range(10):\n  num % 3\n  print num", "fingerprint": [[11519, 8], [23495, 6], [25976, 4], [16167, 2], [19175, 11], [11294, 13]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62739, 89526, 19175, 42775, 11294, 52605], "class": "1"}, "11": {"top_similar": [[11, 1.0], [52, 0.9411764705882353], [62, 0.9411764705882353]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "(", "V", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\tsum += num\n\t\nprint(sum)\n  ", "fingerprint": [[1137, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1137, 51209, 26291, 89600], "class": "6"}, "12": {"top_similar": [[12, 1.0], [169, 1.0], [52, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\nfor num in range(10):\n  if num % 3 == 0 or num%5 == 0:\n\ttotal += num\nprint total\n", "fingerprint": [[25976, 8], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "13": {"top_similar": [[13, 1.0], [19, 0.4], [85, 0.4]], "tokens": ["for", "V", "in", "V", "(", "3", ",", "5", ")", ":", "print", "3", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     3\n#     5\n\nfor num in range(3, 5): print 3\n \n  \n  ", "fingerprint": [[23515, 8], [25261, 4], [16167, 2], [33446, 6]], "k_gram_hashes": [22237, 89459, 16167, 89661, 25261, 43268, 33446, 47097, 23515, 55821, 51575], "class": "1"}, "14": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ns=0\nfor num in range(1000):\n  if (num % 3 ==0) or (num % 5 ==0):\n\ts=s+num\nprint s", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "15": {"top_similar": [[15, 1.0], [398, 0.5833333333333334], [231, 0.5666666666666667]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "UNK", "0", ":", "V", "+=", "V", "\n", "", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", "and", "V", "%", "3", "UNK", "0", ":", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if num%3 == 0 and num%5 != 0: sum += num\nfor num in range(1000):\n  if num%5 == 0 and num%3 != 0: sum += num\nprint sum", "fingerprint": [[494, 31], [19291, 44], [19213, 50], [11483, 40], [56696, 54], [10150, 58], [10135, 30], [4014, 48], [85010, 56], [19201, 16], [11483, 12], [41759, 25], [19303, 22], [41759, 53], [23495, 38], [23495, 10], [26201, 36], [16167, 6], [85010, 28], [40589, 19], [26201, 8], [10619, 3], [16167, 34], [18189, 14], [40589, 47], [56696, 26], [40735, 2], [4014, 20], [18189, 42]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19303, 48530, 88002, 41759, 56696, 90989, 85010, 89325, 10135, 494, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63676, 40589, 4014, 89526, 19213, 44480, 88002, 41759, 56696, 90989, 85010, 89325, 10150, 1169], "class": "4"}, "16": {"top_similar": [[16, 1.0], [10, 0.75], [53, 0.75]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "3", "%", "3", "\n", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10): \n  x=3%3\n  print x\n  \n  ", "fingerprint": [[11519, 8], [42951, 12], [23495, 6], [19175, 13], [25976, 4], [57654, 11], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90381, 57654, 42951, 19175, 42775, 11294, 52610, 89325], "class": "1"}, "17": {"top_similar": [[17, 1.0], [113, 0.9130434782608695], [46, 0.8333333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx=0\nfor num in range(1000):\n   if num % 3 == 0:\n\tx = x + num\n   if num % 5 == 0:\t\n\tx = x + num\nprint x", "fingerprint": [[19291, 32], [10133, 28], [28310, 26], [58693, 24], [404, 29], [18189, 30], [41720, 19], [19201, 16], [58693, 40], [11888, 12], [10125, 44], [23495, 10], [16167, 6], [25, 45], [11879, 37], [26201, 8], [28310, 42], [10619, 3], [11879, 21], [18189, 14], [41720, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "18": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num\n  \t", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "19": {"top_similar": [[19, 1.0], [85, 0.5], [294, 0.5]], "tokens": ["for", "V", "in", "V", "(", "7", ")", ":", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints: x\n#\n#     a\n#     b\n\nfor num in range(7):print x", "fingerprint": [[25391, 4], [23515, 6], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89664, 25391, 49122, 23515, 55844], "class": "1"}, "20": {"top_similar": [[20, 1.0], [52, 0.7777777777777778], [62, 0.7777777777777778]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "7", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ns = 0;\nfor num in range(1000):\n  if num%7 == 0 or num%5 == 0:\n\ts +=x\nprint s", "fingerprint": [[25, 34], [19291, 23], [85010, 31], [10125, 33], [41720, 26], [41675, 2], [18189, 15], [16167, 7], [11483, 13], [11879, 28], [10619, 4], [19336, 17], [23495, 11], [42344, 20], [26201, 9], [78971, 29]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89529, 19336, 50015, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "21": {"top_similar": [[21, 1.0], [311, 1.0], [26, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "10", "%", "1000", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  \n  x=10%1000\n  print x", "fingerprint": [[11519, 8], [26201, 4], [58374, 11], [23495, 6], [20120, 13], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90397, 58374, 75372, 20120, 85300, 11294, 52605], "class": "1"}, "22": {"top_similar": [[22, 1.0], [6, 0.5], [18, 0.5]], "tokens": ["for", "V", "in", "V", "(", "UNK", ",", "UNK", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range('x = 1000 % 3', 'y % 7'):\n  print x", "fingerprint": [[23495, 8], [34346, 6], [26251, 4], [16167, 2], [11500, 10]], "k_gram_hashes": [22237, 89459, 16167, 89683, 26251, 87838, 34346, 87597, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "23": {"top_similar": [[23, 1.0], [361, 0.6666666666666666], [221, 0.5806451612903226]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "2", ",", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "+", "V", "\n", "if", "(", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", ",", "UNK", ",", "V", ",", "UNK", ",", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nttl = 0\nfor num in range(2, 1000):\n  msg = \"Num is: \" + num\n  if ((num % 3) == 0) or ((num % 5) == 0):\n\tttl = ttl + num\n\tprint msg, \" Using: \", num, \"Totle = \", ttl\n\nprint ttl", "fingerprint": [[10497, 21], [24884, 23], [34351, 53], [25, 62], [24087, 31], [34351, 57], [58648, 17], [28310, 19], [16752, 22], [11879, 43], [34396, 55], [19271, 36], [23690, 38], [10619, 3], [11519, 14], [23495, 12], [24884, 33], [16167, 6], [34301, 10], [28310, 48], [10125, 61], [23690, 28], [58693, 46], [34385, 59], [19181, 26], [25306, 8], [40735, 2], [11294, 50], [23495, 41]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89662, 25306, 45312, 34301, 85572, 23495, 54930, 11519, 62758, 90403, 58648, 87704, 28310, 89333, 10497, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52621, 89863, 34351, 87839, 34396, 89863, 34351, 87839, 34385, 89325, 10125, 25, 1169], "class": "4"}, "24": {"top_similar": [[24, 1.0], [253, 0.9166666666666666], [237, 0.8333333333333334]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsuma = 0\n#print 'contador inicial suma: ', suma\nnum = 0\nfor num in range(1000):\n#  print 'numero: ', num\n  if num%3==0:\n#\tprint num, 'es multiplo de 3'\n\tsuma=suma+num\n  elif num%5==0:\n#\tprint num, 'es multiplo de 5'\n\tsuma=suma+num\n#  print 'suma parcial: ', suma\nprint suma\n", "fingerprint": [[40735, 6], [10127, 32], [23495, 14], [41720, 23], [58693, 28], [19201, 20], [10125, 48], [19291, 36], [58693, 44], [12133, 3], [25, 49], [134, 33], [26201, 12], [28310, 46], [10619, 7], [6039, 34], [16167, 10], [11879, 41], [40769, 2], [41720, 39], [11879, 25], [11483, 16], [18189, 18], [28310, 30]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "25": {"top_similar": [[25, 1.0], [372, 0.6666666666666666], [6, 0.5]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "    ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n    print num", "fingerprint": [[23495, 6], [7244, 9], [10285, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54903, 10285, 7244, 52605], "class": "1"}, "26": {"top_similar": [[26, 1.0], [420, 1.0], [21, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "%", "1000", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  \n  x=9.5%1000\n  print  x", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [58644, 11], [20120, 13], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58644, 87522, 20120, 85300, 11294, 52605], "class": "1"}, "27": {"top_similar": [[27, 1.0], [144, 1.0], [103, 0.8421052631578947]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\neulersum = 0\n\nfor num in range(1000):\n  if (num % 3 == 0 or num % 5 == 0):\n  \teulersum += num\n  \nprint eulersum\n  ", "fingerprint": [[66821, 30], [19291, 23], [41022, 26], [10125, 34], [40735, 2], [11609, 29], [25, 35], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [23495, 10], [16784, 14], [26201, 8], [85010, 32], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "28": {"top_similar": [[28, 1.0], [211, 0.9047619047619048], [202, 0.9]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nres=0\nfor num in range(10):\n  if (num % 3 == 0) or (num % 5 == 0):\n\tres += num\nprint res\n", "fingerprint": [[78971, 32], [25976, 8], [40735, 2], [85010, 34], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [41022, 28], [10125, 36], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [23495, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "29": {"top_similar": [[29, 1.0], [451, 0.7222222222222222], [156, 0.631578947368421]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "   ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nz=0\nfor num in range(10):\n   if num%3==0:\n\t  z=num+z\nprint z\n\n\n\t\n\t\n ", "fingerprint": [[25, 29], [41720, 19], [25976, 8], [40735, 2], [18189, 14], [16167, 6], [28310, 26], [58693, 24], [19201, 16], [10125, 28], [10439, 21], [23495, 10], [14158, 22], [10619, 3], [11888, 12]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54939, 11888, 79379, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "30": {"top_similar": [[30, 1.0], [313, 0.75], [379, 0.7142857142857143]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "(", "V", ")", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\t\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint(num)", "fingerprint": [[11860, 23], [26201, 4], [19201, 12], [41720, 21], [23495, 6], [26291, 26], [42344, 15], [11483, 8], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78087, 51209, 26291, 89595, 22275], "class": "4"}, "31": {"top_similar": [[31, 1.0], [389, 0.5806451612903226], [46, 0.53125]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "   ", "V", "=", "V", "+", "V", "\n", "", "", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "V", "%", "5", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx=0\n\nfor num in range(10):\n  if num % 3 == 0:\n   x=x+num\nfor num in range(10):\n\tif num%5 == 0: \n\t\tx=x+num\n\nprint x\n\n  ", "fingerprint": [[10125, 55], [16167, 33], [28310, 26], [58693, 24], [18189, 41], [58693, 51], [41720, 19], [11924, 21], [19201, 16], [11483, 12], [11654, 48], [41720, 46], [19291, 43], [11843, 39], [25, 56], [23495, 10], [16167, 6], [10125, 28], [10619, 3], [28310, 53], [25976, 8], [494, 30], [18189, 14], [25976, 35], [23495, 37], [40735, 2], [10, 29]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54939, 11924, 80983, 90404, 58693, 89729, 28310, 89325, 10125, 10, 494, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77354, 18189, 89528, 19291, 47990, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "32": {"top_similar": [[32, 1.0], [77, 0.4], [281, 0.32142857142857145]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "*", "3", "\n", "", "print", "V", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "*", "5", "\n", "", "print", "V", "\n", "print", "V", "+", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na = 0\nfor num in range(334):\n  a = a + num * 3\n\nprint a\n\nb = 0\nfor num in range(201):\n  b = b + num * 5\n\nprint b\n\nprint a + b\n\n  \n  ", "fingerprint": [[11519, 38], [23495, 36], [12133, 25], [58693, 15], [29390, 45], [11294, 51], [28319, 43], [16167, 32], [10150, 21], [29300, 19], [23495, 10], [58693, 41], [16167, 6], [28319, 17], [1169, 22], [10619, 3], [40735, 28], [11519, 12], [26246, 8], [26246, 34], [40735, 2], [1169, 48], [10150, 47], [10619, 29]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28319, 89751, 29300, 42750, 10150, 1169, 52610, 89369, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28319, 89753, 29390, 46800, 10150, 1169, 52610, 89350, 11294, 52618, 89729, 28310], "class": "4"}, "33": {"top_similar": [[33, 1.0], [89, 0.5384615384615384], [164, 0.4666666666666667]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "if", "V", "%", "3", "==", "0", ":", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(10):\n if num % 3 == 0 : print num", "fingerprint": [[25976, 8], [40735, 2], [18189, 14], [16167, 6], [41740, 19], [19201, 16], [12068, 12], [23495, 10], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12068, 87479, 18189, 89526, 19201, 43940, 63702, 41740, 55844, 52605], "class": "7"}, "34": {"top_similar": [[34, 1.0], [202, 0.85], [329, 0.85]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\nfor num in range(1000):\n  if (num%3==0) or (num%5==0):\n\t sum += num\nprint sum", "fingerprint": [[10125, 36], [40735, 2], [85010, 34], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [12104, 31], [41022, 28], [24087, 21], [41035, 20], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54943, 12104, 89096, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "35": {"top_similar": [[35, 1.0], [248, 0.7142857142857143], [240, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "%", "5", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n##         print letter\n# 0 : 1000\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  num % 5\n  print num", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [11294, 13], [19265, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62739, 89528, 19265, 46825, 11294, 52605], "class": "1"}, "36": {"top_similar": [[36, 1.0], [242, 0.4166666666666667], [382, 0.4166666666666667]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "7", "==", "0", ")", ":", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if ( x % 7 == 0 ) : print x", "fingerprint": [[19336, 13], [16784, 10], [26201, 4], [23495, 6], [23515, 17], [41022, 16], [11483, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89529, 19336, 50015, 63686, 41022, 23515, 55844, 52605], "class": "7"}, "37": {"top_similar": [[37, 1.0], [118, 0.6666666666666666], [80, 0.4074074074074074]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "\n", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "(", "V", "==", "0", "or", "V", "==", "0", ")", ":", "\n", "   ", "print", "V", "\n", "", "", ""], "source": "for num in range(10): \n  x = num\n  var = x % 3\n  var2 = x % 5\n  if (var == 0 or var2 == 0):\n   print x\n\n", "fingerprint": [[23495, 35], [58689, 21], [52610, 39], [11519, 8], [10497, 25], [19265, 23], [11905, 37], [26311, 27], [23495, 6], [41022, 34], [12133, 13], [58685, 11], [42344, 30], [12133, 19], [16784, 26], [58689, 15], [19175, 17], [25976, 4], [63686, 33], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58685, 89369, 12133, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10497, 16784, 26311, 90515, 63715, 42344, 83011, 90515, 63686, 41022, 23495, 54939, 11905, 80144, 52610, 89325, 10125], "class": "3"}, "38": {"top_similar": [[38, 1.0], [91, 0.6521739130434783], [428, 0.5416666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", "and", "V", "<", "1000", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal =0\nfor num in range(100):  \n  if ((num%3==0 or num%5==0) and num<1000):\n  \ttotal=total+num\nprint total", "fingerprint": [[4034, 29], [25, 43], [40735, 2], [23495, 33], [19291, 24], [42344, 21], [16167, 6], [22364, 28], [11483, 12], [40996, 27], [19201, 18], [58693, 38], [28310, 40], [23495, 10], [60626, 31], [16752, 14], [24884, 15], [11609, 35], [10125, 42], [10619, 3], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 40996, 22364, 4034, 90447, 60626, 85572, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "39": {"top_similar": [[39, 1.0], [211, 0.8260869565217391], [14, 0.8181818181818182]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", "or", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nnum = 0\ntotal = 0\nfor num in range(10):\n  if (num % 5 == 0) or (num % 3 == 0):\n\ttotal = total + num\n\t\n\t\nprint total \n  ", "fingerprint": [[40769, 2], [11879, 35], [40735, 6], [26289, 27], [41022, 32], [19291, 21], [58693, 38], [23495, 33], [23495, 14], [11483, 16], [10619, 7], [25, 43], [28310, 40], [16167, 10], [25976, 12], [41035, 24], [19201, 29], [24087, 25], [10125, 42], [16784, 18], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41035, 24087, 81584, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "40": {"top_similar": [[40, 1.0], [293, 0.56], [79, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  sum = 0\n  if num % 3 == 0: \n  \tsum += num\n  elif num % 5 == 0:\n\tsum += num\n  \n  print sum\n  ", "fingerprint": [[11879, 35], [11519, 8], [11609, 21], [10127, 26], [41720, 19], [10150, 40], [19201, 16], [40733, 12], [85010, 38], [19291, 30], [66821, 22], [16167, 2], [1169, 41], [57605, 11], [85010, 24], [41720, 33], [78971, 36], [26201, 4], [18189, 14], [10529, 13], [23495, 6], [6039, 28], [134, 27]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10529, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66821, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10150, 1169, 52610, 89325], "class": "4"}, "41": {"top_similar": [[41, 1.0], [220, 0.34782608695652173], [159, 0.325]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "*", "3", "\n", "if", "V", "*", "3", "<", "1000", ":", "\n", "  \t", "V", "=", "V", "+", "V", "*", "3", "\n", "", "if", "V", "*", "5", "<", "1000", "UNK", "V", "*", "5", "UNK", "V", ":", "\n", "\t", "V", "=", "V", "+", "V", "*", "5", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\nfor num in range(1000):\n  sum3=num*3\n  if num*3<1000:\n  \tsum=sum+num*3\n  if num*5<1000 & num*5!=sum3:\n\tsum=sum+num*5\n  \nprint sum\n\n  ", "fingerprint": [[29390, 58], [11519, 12], [87029, 43], [47922, 41], [28319, 32], [29428, 46], [54932, 26], [29300, 34], [10125, 60], [10619, 3], [11879, 51], [18194, 38], [28319, 56], [18194, 20], [43872, 23], [54938, 50], [23495, 10], [25, 61], [16167, 6], [11609, 27], [58693, 54], [26201, 8], [29324, 22], [60658, 42], [58693, 30], [48554, 47], [29414, 40], [58694, 15], [10133, 36], [10529, 19], [40735, 2], [404, 37], [29300, 17]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58694, 89751, 29300, 42758, 10529, 18194, 89751, 29324, 43872, 60642, 86270, 54932, 11609, 66808, 90404, 58693, 89729, 28319, 89751, 29300, 42750, 10133, 404, 18194, 89753, 29414, 47922, 60658, 87029, 89069, 89753, 29428, 48554, 89082, 90320, 54938, 11879, 78958, 90404, 58693, 89729, 28319, 89753, 29390, 46800, 10125, 25, 1169, 52610], "class": "4"}, "42": {"top_similar": [[42, 1.0], [44, 0.5862068965517241], [418, 0.5517241379310345]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "(", "V", "%", "3", ")", "==", "0", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ")", "and", "(", "V", "UNK", "3", ")", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nres=0\nfor num in range(1000): \n  if (((num%3) == 0 or ((num%5) ==0)) and (num>=3)): \n\tres+=num \nprint res", "fingerprint": [[78971, 44], [23690, 21], [11879, 43], [25, 49], [24884, 16], [23690, 30], [24884, 25], [11483, 12], [22797, 40], [19181, 19], [22771, 33], [43031, 39], [23495, 10], [42312, 23], [16167, 6], [85010, 46], [10125, 48], [2609, 35], [26201, 8], [10619, 3], [26323, 36], [22332, 34], [40735, 2], [19271, 28], [16752, 14], [24852, 15]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24852, 24884, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41006, 22771, 22332, 2609, 26323, 91056, 88031, 43031, 22797, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "43": {"top_similar": [[43, 1.0], [105, 1.0], [298, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num\n\t ", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "44": {"top_similar": [[44, 1.0], [221, 0.6666666666666666], [255, 0.6521739130434783]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "5", ")", "==", "0", ")", "or", "(", "(", "V", "%", "3", ")", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na=0;\nfor num in range(1000):\n  if ((num % 5)==0) or ((num%3)==0):\n\ta += num\n\t\nprint a", "fingerprint": [[23690, 31], [24884, 26], [85010, 39], [41675, 2], [10125, 41], [16167, 7], [25, 42], [11483, 13], [11879, 36], [19271, 19], [23690, 21], [10619, 4], [19181, 29], [16752, 15], [78971, 37], [23495, 11], [24087, 24], [26201, 9], [23495, 34], [24884, 16]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "45": {"top_similar": [[45, 1.0], [91, 0.6842105263157895], [397, 0.6190476190476191]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "\t", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsuma = 0\nfor num in range(999):\n\tif (num % 3 == 0):\n\t\tsuma = suma + num\t\nprint suma", "fingerprint": [[58693, 26], [23495, 21], [11843, 12], [40735, 2], [25, 31], [41022, 20], [16167, 6], [19201, 17], [11654, 23], [23495, 10], [28310, 28], [10125, 30], [16784, 14], [10619, 3], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54938, 11843, 77322, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "46": {"top_similar": [[46, 1.0], [113, 0.9130434782608695], [17, 0.8333333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0:\n  \tsum = sum + num\n  if num % 5 == 0:\n\tsum = sum + num\t\n  \nprint sum", "fingerprint": [[19291, 32], [10133, 28], [28310, 26], [58693, 24], [404, 29], [18189, 30], [11609, 21], [41720, 19], [19201, 16], [11483, 12], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [25, 45], [11879, 37], [26201, 8], [28310, 42], [10619, 3], [18189, 14], [41720, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "47": {"top_similar": [[47, 1.0], [136, 0.8888888888888888], [426, 0.8]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(1000):\n  if (num % 5 == 0 or num % 3 == 0):\n\tsum=sum+1\n\n\nprint sum", "fingerprint": [[27185, 34], [41022, 26], [40735, 2], [19201, 23], [23495, 27], [16167, 6], [11483, 12], [42344, 20], [58693, 32], [10125, 36], [19291, 17], [23495, 10], [25, 37], [16784, 14], [26201, 8], [11879, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38700, 10125, 25, 1169], "class": "4"}, "48": {"top_similar": [[48, 1.0], [46, 0.7096774193548387], [286, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "UNK", "==", "0", ":", "\n", "    ", "V", "=", "V", "-", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0:\n  \tsum = sum + num\n  if num % 5 == 0:\n\tsum = sum + num\n  if num %  15 == 0:\n    sum = sum - num\t\n  \nprint sum", "fingerprint": [[19291, 32], [18189, 46], [10133, 28], [28310, 26], [20191, 48], [58693, 24], [404, 29], [18189, 30], [11609, 21], [26201, 8], [25, 61], [41720, 19], [19201, 16], [11483, 12], [10125, 60], [32360, 58], [8083, 54], [58693, 40], [41720, 51], [10304, 53], [23495, 10], [16167, 6], [58695, 56], [11879, 37], [10133, 44], [28310, 42], [10619, 3], [404, 45], [18189, 14], [41720, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89548, 20191, 88490, 63702, 41720, 54903, 10304, 8083, 90404, 58695, 89819, 32360, 89325, 10125, 25, 1169], "class": "6"}, "49": {"top_similar": [[49, 1.0], [241, 0.8823529411764706], [430, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nans = 0\nfor num in range(10):\n  if num % 5 == 0 or num % 3 == 0:\n  \tans += num\n\t\nprint ans ", "fingerprint": [[41720, 25], [25976, 8], [19201, 22], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [19291, 16], [42344, 19], [11609, 27], [25, 33], [23495, 10], [66821, 28], [85010, 30], [10619, 3], [10125, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "50": {"top_similar": [[50, 1.0], [149, 0.5], [189, 0.5]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t\t", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n#\tif(num % 3 == 0 || num % 5 == 0):\n\t\tsum += num\nprint sum", "fingerprint": [[40735, 2], [85010, 15], [16167, 6], [68846, 13], [23495, 10], [10150, 17], [11654, 12], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54933, 11654, 68846, 90989, 85010, 89325, 10150, 1169], "class": "4"}, "51": {"top_similar": [[51, 1.0], [23, 0.5121951219512195], [361, 0.5]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "2", ",", "1000", ")", ":", "\n", "  ", "print", "UNK", "\n", "V", "=", "UNK", "+", "V", "\n", "if", "(", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "V", "=", "V", "+", "UNK", "+", "V", "+", "UNK", "+", "V", "\n", "", "print", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nttl = 0\nfor num in range(2, 1000):\n  print \".\"\n  msg = \"Num is: \" + num\n  if ((num % 3) == 0) or ((num % 5) == 0):\n\tttl = ttl + num\n\tmsg = msg + \" Using: \" + num + \"Totle = \" + ttl\n  print msg\n  \nprint ttl", "fingerprint": [[28318, 59], [28273, 61], [12133, 18], [11879, 46], [19181, 29], [16752, 25], [11500, 14], [23495, 44], [19271, 39], [28310, 51], [24884, 36], [28310, 63], [10150, 65], [10150, 69], [23690, 31], [24884, 26], [10497, 24], [23495, 12], [16167, 6], [34301, 10], [24087, 34], [12133, 53], [52565, 16], [10619, 3], [23690, 41], [58648, 20], [58693, 55], [28310, 22], [58693, 49], [1169, 66], [25306, 8], [40735, 2], [28273, 57]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89662, 25306, 45312, 34301, 85572, 23495, 54930, 11500, 61918, 52565, 87344, 12133, 90403, 58648, 87704, 28310, 89333, 10497, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89369, 12133, 90404, 58693, 89728, 28273, 87704, 28318, 89728, 28273, 87704, 28310, 89325, 10150, 1169, 52610, 89325, 10150, 1169], "class": "4"}, "52": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "sum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "53": {"top_similar": [[10, 1.0], [53, 1.0], [208, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "%", "3", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  num % 3\n  print num", "fingerprint": [[11519, 8], [23495, 6], [25976, 4], [16167, 2], [19175, 11], [11294, 13]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62739, 89526, 19175, 42775, 11294, 52605], "class": "1"}, "54": {"top_similar": [[54, 1.0], [258, 0.5909090909090909], [12, 0.5789473684210527]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(10):\n    if num % 3 == 0:\n\t    x += num\nprint num\n    ", "fingerprint": [[41720, 19], [25976, 8], [40735, 2], [18189, 14], [85010, 24], [16167, 6], [12104, 21], [19201, 16], [6479, 13], [23495, 10], [10268, 12], [25, 27], [10619, 3], [10125, 26]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63702, 41720, 54943, 12104, 89096, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "7"}, "55": {"top_similar": [[55, 1.0], [354, 0.6666666666666666], [10, 0.5555555555555556]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "%", "3", "and", "V", "%", "5", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  x % 3 and x % 5\n  print x", "fingerprint": [[11519, 8], [23495, 6], [19171, 11], [4014, 13], [25976, 4], [11294, 17], [19265, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62739, 89526, 19171, 42614, 4014, 89528, 19265, 46825, 11294, 52605], "class": "1"}, "56": {"top_similar": [[56, 1.0], [113, 0.9090909090909091], [17, 0.8260869565217391]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#if \n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  if num%3==0: \n\tsum=sum+num\n\t\n  if num%5==0: \n\tsum=sum+num\n\t\n\t\nprint sum", "fingerprint": [[28310, 38], [58693, 36], [404, 25], [26201, 4], [19201, 12], [28310, 22], [19291, 28], [23495, 6], [11879, 33], [18189, 26], [41720, 15], [58693, 20], [10133, 24], [10125, 40], [11879, 17], [11483, 8], [41720, 31], [18189, 10], [25, 41], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "57": {"top_similar": [[57, 1.0], [101, 0.7777777777777778], [167, 0.6111111111111112]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n if (num%3==0) or (num%5==0):\n  \tnum=num+num\n\t\n\tprint num\n  \n  \n#  add all in range(10) that x%3==0, x%5==0", "fingerprint": [[41035, 16], [58693, 30], [26289, 19], [16784, 10], [12068, 8], [19201, 13], [23495, 6], [24087, 17], [28310, 32], [25976, 4], [11609, 27], [19291, 21], [11294, 34], [23495, 25], [41022, 24], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12068, 87447, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "58": {"top_similar": [[58, 1.0], [221, 0.3225806451612903], [177, 0.3181818181818182]], "tokens": ["for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "+", "V", "*", "3", "\n", "V", "=", "V", "*", "5", "\n", "if", "(", "(", "V", "%", "3", ")", "UNK", "0", ")", ":", "\n", "\t", "V", "=", "+", "V", "\n", "", "", "print", "V", ""], "source": "for x in range(334):\n  a =+ x*3\n  t = x*5\n  if( (t%3)!=0 ):\n\tb =+ t\n\n\nprint a", "fingerprint": [[26246, 4], [58694, 18], [11519, 8], [24230, 29], [12133, 16], [24884, 24], [23495, 6], [57329, 11], [16752, 23], [19181, 27], [28319, 12], [23495, 32], [25, 41], [10497, 22], [11879, 34], [28310, 38], [29390, 20], [57329, 37], [10125, 40], [29300, 14], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90373, 57329, 28319, 89751, 29300, 42794, 12133, 90404, 58694, 89753, 29390, 46808, 10497, 16752, 24884, 26289, 89526, 19181, 43063, 24230, 87986, 41022, 23495, 54938, 11879, 78958, 90373, 57329, 28310, 89325, 10125, 25, 1169], "class": "7"}, "59": {"top_similar": [[59, 1.0], [207, 0.4634146341463415], [399, 0.4523809523809524]], "tokens": ["V", "=", "3", "\n", "V", "=", "5", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1", ",", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "%", "V", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "UNK", ":", "\n", "  \t", "V", "=", "V", "%", "V", "\n", "if", "V", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "", "print", "(", "V", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 3\nb = 5\n\nsum = 0\n\nfor num in range(1,1001):\n  c = num % a\n  if c == 0:\n\tsum = sum + num\n  else:\n  \td = num % b\n  \tif d == 0:\n\t\tsum = sum + num\nprint (sum)\n\t  ", "fingerprint": [[11879, 35], [1962, 43], [20210, 27], [11519, 22], [20210, 51], [28310, 40], [10125, 66], [46844, 6], [42794, 2], [18211, 54], [25171, 16], [58689, 49], [28310, 64], [41720, 33], [10529, 29], [12133, 3], [58693, 62], [10529, 53], [12133, 7], [34346, 18], [11654, 59], [0, 67], [40735, 10], [23495, 20], [1137, 69], [16167, 14], [58689, 25], [25, 68], [18211, 30], [41720, 57], [58693, 38], [11609, 46], [10619, 11], [10168, 42]], "k_gram_hashes": [90381, 57650, 42794, 12133, 90383, 57740, 46844, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89659, 25171, 39238, 34346, 87597, 23495, 54930, 11519, 62758, 90404, 58689, 89549, 20210, 89333, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10168, 1962, 88295, 54932, 11609, 66808, 90404, 58689, 89549, 20210, 89333, 10529, 18211, 90515, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 0, 25, 1137, 51209, 26291, 89600], "class": "3"}, "60": {"top_similar": [[60, 1.0], [198, 1.0], [74, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num%3 ==0:\n\tsum +=num\n  if num%5==0:\n\tsum +=num\nprint sum", "fingerprint": [[11879, 35], [19291, 30], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [404, 27], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [78971, 36], [26201, 8], [25, 41], [11879, 21], [18189, 14], [78971, 22], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "61": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\ta = a+num\n\t\nprint a", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "62": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "63": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(1000):\n  if num%3 == 0 or num%5 == 0: \n\tx += num\nprint x", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "64": {"top_similar": [[64, 1.0], [428, 0.875], [75, 0.8666666666666667]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n  \tx=x+num\nprint x", "fingerprint": [[26201, 4], [19201, 12], [25, 31], [41720, 21], [23495, 6], [10125, 30], [58693, 26], [42344, 15], [11483, 8], [28310, 28], [18189, 10], [19291, 18], [16167, 2], [11609, 23]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "65": {"top_similar": [[65, 1.0], [85, 0.6666666666666666], [102, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "UNK", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): 'print x'", "fingerprint": [[26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23533], "class": "1"}, "66": {"top_similar": [[66, 1.0], [6, 0.8], [18, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "[", "V", "]", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print sum[num]", "fingerprint": [[23495, 6], [11500, 8], [52640, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52640, 90719, 72891, 90720], "class": "1"}, "67": {"top_similar": [[67, 1.0], [155, 0.7777777777777778], [78, 0.6551724137931034]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "    ", "V", "+=", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\nfor num in range(1000):\n  if (num % 3 == 0):\n    total += num\n\t\n  if (num % 5 == 0):\n\ttotal += num\n\nprint total", "fingerprint": [[10133, 28], [11879, 39], [85010, 26], [16784, 14], [10304, 23], [11483, 12], [85010, 42], [10125, 44], [23495, 21], [23495, 10], [16784, 30], [16167, 6], [8096, 24], [19201, 17], [25, 45], [41022, 36], [26201, 8], [10619, 3], [19291, 33], [41022, 20], [372, 29], [23495, 37], [40735, 2], [78971, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54903, 10304, 8096, 90989, 85010, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "68": {"top_similar": [[68, 1.0], [329, 0.64], [215, 0.6206896551724138]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "3", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnum = 0\nfor num in range(10):\n  sum = 0\n  if (num % 3 == 0) or (num % 5 == 0):\n  \tsum += 3\n\t\nprint sum", "fingerprint": [[19201, 21], [10497, 17], [11519, 12], [66821, 36], [10619, 3], [10125, 40], [26289, 27], [16784, 18], [24087, 25], [23495, 10], [16167, 6], [57605, 15], [41035, 24], [25, 41], [40733, 16], [19291, 29], [25976, 8], [41022, 32], [23495, 33], [40735, 2], [11609, 35], [42750, 39]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10497, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90966, 83975, 42750, 10125, 25, 1169], "class": "3"}, "69": {"top_similar": [[69, 1.0], [219, 0.875], [277, 0.8666666666666667]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ns = 0\nfor num in range(1000):\n  if num % 3 == 0:\n      s = s + num\n\t\nprint s", "fingerprint": [[25, 29], [41720, 19], [40735, 2], [18189, 14], [12104, 21], [16167, 6], [28310, 26], [11483, 12], [58693, 24], [19201, 16], [10125, 28], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "70": {"top_similar": [[70, 1.0], [422, 0.3888888888888889], [121, 0.38461538461538464]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "V", "+=", "V", ";", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n# prints:\n#\n#     a\n#     b\n\nsum = 0;\nfor num in range(1000):\n   sum += num;\nprint sum", "fingerprint": [[11924, 13], [10150, 19], [41675, 2], [16167, 7], [80996, 14], [85031, 16], [10619, 4], [23495, 11], [52875, 18], [26201, 9]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11924, 80996, 90989, 85031, 90275, 52875, 10150, 1169], "class": "4"}, "71": {"top_similar": [[71, 1.0], [72, 1.0], [6, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "10", "%", "5", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print 10 % 5", "fingerprint": [[23495, 6], [11500, 8], [52299, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61912, 52299, 75353, 19260], "class": "1"}, "72": {"top_similar": [[71, 1.0], [72, 1.0], [6, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "10", "%", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print 10 % 3", "fingerprint": [[23495, 6], [11500, 8], [52299, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61912, 52299, 75351, 19170], "class": "1"}, "73": {"top_similar": [[73, 1.0], [228, 0.5789473684210527], [357, 0.5217391304347826]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "print", "V", "\n", "", "elif", "V", "%", "5", ":", "\n", "    ", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num%3 == 0:\n\tprint num\n  elif num%5:\n    print num", "fingerprint": [[52610, 19], [26201, 4], [19201, 12], [11860, 17], [23495, 6], [10127, 21], [6039, 23], [41720, 15], [7244, 29], [10285, 28], [134, 22], [11483, 8], [18189, 10], [16167, 2], [19287, 25]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11860, 78119, 52610, 89325, 10127, 134, 6039, 89528, 19287, 47795, 54903, 10285, 7244, 52605, 89100], "class": "4"}, "74": {"top_similar": [[74, 1.0], [60, 0.9130434782608695], [198, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ncount = 0\nfor num in range(100):\n  if num % 3 == 0:\n\tcount += num\n  if num % 5 == 0:\n\tcount += num\nprint count\n  ", "fingerprint": [[11879, 35], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [19291, 30], [41720, 33], [404, 27], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [78971, 36], [25, 41], [11879, 21], [26246, 8], [18189, 14], [78971, 22], [40735, 2], [10125, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "4"}, "75": {"top_similar": [[75, 1.0], [64, 0.8666666666666667], [156, 0.7647058823529411]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n  \tsum = sum + num\n\nprint sum", "fingerprint": [[19201, 12], [25, 31], [41720, 21], [23495, 6], [25976, 4], [10125, 30], [58693, 26], [42344, 15], [11483, 8], [28310, 28], [18189, 10], [19291, 18], [16167, 2], [11609, 23]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "76": {"top_similar": [[76, 1.0], [210, 0.6666666666666666], [6, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "10", ")", ":", "\n", "  ", "print", "UNK", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1,10):\n\n  print 23\n   \n  \n", "fingerprint": [[23495, 8], [25171, 4], [34076, 6], [16167, 2], [11500, 10]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39232, 34076, 75447, 23495, 54930, 11500, 61918, 52565, 87300], "class": "1"}, "77": {"top_similar": [[77, 1.0], [177, 0.46153846153846156], [185, 0.4375]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "*", "3", "\n", "print", "V", ",", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na = 0\nfor num in range(333):\n  a = a + num * 3\n  print num, a\n  \n  ", "fingerprint": [[40735, 2], [11294, 21], [29300, 19], [16167, 6], [28319, 17], [11519, 12], [34385, 24], [58693, 15], [23495, 10], [10619, 3], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28319, 89751, 29300, 42775, 11294, 52621, 89864, 34385, 89325], "class": "4"}, "78": {"top_similar": [[78, 1.0], [119, 1.0], [9, 0.92]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\nfor num in range(1000):\n  if (num % 3 == 0):\n\tsum=sum+num\n  if (num % 5 == 0):\n\tsum=sum+num\nprint sum", "fingerprint": [[19201, 17], [16784, 14], [19291, 35], [25, 49], [41022, 38], [372, 31], [11483, 12], [23495, 39], [11879, 23], [16784, 32], [28310, 28], [58693, 44], [23495, 21], [23495, 10], [16167, 6], [10125, 48], [28310, 46], [10133, 30], [58693, 26], [26201, 8], [10619, 3], [11879, 41], [41022, 20], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "79": {"top_similar": [[79, 1.0], [230, 1.0], [369, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 5 == 0:\n\tsum += num\n  elif num % 3 == 0:\n\tsum += num\n\nprint sum", "fingerprint": [[11879, 35], [10127, 26], [41720, 19], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [78971, 36], [26201, 8], [25, 41], [11879, 21], [18189, 14], [19291, 16], [6039, 28], [40735, 2], [134, 27], [19201, 30]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "80": {"top_similar": [[80, 1.0], [281, 0.55], [118, 0.5357142857142857]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "(", "V", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "print", "V", "", ""], "source": "#!/usr/bin/python\n# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nm=0\nfor num in range(10):\n  n = num%3\n  \n  if(n==0):\n  \tm=m+n\n  print m", "fingerprint": [[58693, 30], [28310, 32], [10150, 34], [25976, 8], [40735, 2], [11609, 27], [16167, 6], [16784, 20], [58689, 15], [11519, 12], [26311, 21], [10497, 19], [1169, 35], [23495, 10], [19175, 17], [23495, 25], [10619, 3], [41022, 24]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10497, 16784, 26311, 90515, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52605], "class": "7"}, "81": {"top_similar": [[81, 1.0], [411, 0.7857142857142857], [313, 0.6923076923076923]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "UNK", "0", "and", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num!=0 and num%3==0 or num%5==0:\n\tprint num", "fingerprint": [[11860, 27], [40589, 13], [23495, 6], [18223, 10], [25976, 4], [41720, 25], [42344, 19], [19291, 22], [4014, 14], [11483, 8], [19201, 16], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18223, 91055, 87976, 40589, 4014, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "3"}, "82": {"top_similar": [[82, 1.0], [286, 0.7142857142857143], [253, 0.7037037037037037]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\n\nfor num in range(10):\n  if num % 5 == 0:\n    a = a + num\n  elif num % 3 == 0:\n    a = a + num\n\t\nprint a\n\t  ", "fingerprint": [[28310, 26], [58693, 24], [8083, 22], [19291, 16], [41720, 19], [134, 29], [11483, 12], [19201, 32], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [6039, 30], [25, 45], [28310, 42], [10619, 3], [25976, 8], [10304, 21], [8083, 38], [18189, 14], [10127, 28], [41720, 35], [10304, 37], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "83": {"top_similar": [[83, 1.0], [35, 0.5], [248, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "(", "3", "*", "V", ")", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  a = (3*num)+a\n  print a", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [22904, 16], [30341, 14], [11294, 19], [25259, 12], [16167, 2], [57261, 11]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90372, 57261, 25259, 43199, 30341, 89608, 22904, 28310, 89350, 11294, 52605], "class": "1"}, "84": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": [""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n#\tfor num in range(1000):\n#\t\tprint x", "fingerprint": [], "k_gram_hashes": [], "class": "1"}, "85": {"top_similar": [[85, 1.0], [65, 0.6666666666666666], [319, 0.6]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "print", "V", "%", "3", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): print x % 3 ", "fingerprint": [[23515, 6], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23515, 55844, 52614, 89526], "class": "1"}, "86": {"top_similar": [[86, 1.0], [238, 0.625], [370, 0.5]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "print", "V", "%", "5", "+", "V", "%", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n print num % 5 + num % 3\n\t\n\n", "fingerprint": [[28314, 14], [23495, 6], [52614, 10], [12085, 8], [25976, 4], [19175, 16], [16167, 2], [19273, 12]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12085, 88244, 52614, 89528, 19273, 47204, 28314, 89526, 19175, 42750], "class": "1"}, "87": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\t\n  print num\n  ", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "88": {"top_similar": [[88, 1.0], [61, 0.7894736842105263], [288, 0.7894736842105263]], "tokens": ["V", "=", "0", "\n", "V", "=", "V", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "(", "V", ")", ""], "source": "x = 0\nnum = int\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tx = x + num\n\t\n\t\nprint(x)", "fingerprint": [[40769, 2], [10125, 38], [23495, 14], [41720, 29], [42344, 23], [28310, 36], [19291, 26], [26201, 12], [25, 39], [11483, 16], [10619, 7], [18189, 18], [11879, 31], [16167, 10], [58693, 34], [58685, 5], [19201, 20], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90404, 58685, 89335, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1137, 51209, 26291], "class": "6"}, "89": {"top_similar": [[89, 1.0], [401, 0.8461538461538461], [313, 0.6153846153846154]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal=0\nfor num in range(10):\n  if num%3==0: \n\tprint total\n\t\n ", "fingerprint": [[41720, 19], [25976, 8], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [19201, 16], [52610, 23], [11860, 21], [23495, 10], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11860, 78119, 52610, 89325, 10125], "class": "7"}, "90": {"top_similar": [[90, 1.0], [228, 0.7647058823529411], [357, 0.5217391304347826]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "UNK", "print", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "UNK", "print", "V", "", "", ""], "source": "for num in range(10):\n  if num % 3 == 0:\n     print num\n  elif num % 5 == 0:\n\t print num", "fingerprint": [[19291, 25], [52610, 19], [19201, 12], [41720, 28], [23495, 6], [10127, 21], [6039, 23], [41720, 15], [25976, 4], [12085, 30], [134, 22], [11483, 8], [12085, 17], [18189, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54943, 12085, 88244, 52610, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54943, 12085, 88244, 52605, 89100], "class": "3"}, "91": {"top_similar": [[91, 1.0], [264, 0.75], [104, 0.7142857142857143]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nmultiplesum = 0\n\nfor num in range(100):\n  if (num % 3==0 or num % 5==0):\n  \tmultiplesum = multiplesum + num\n  \n\t\nprint multiplesum\n  ", "fingerprint": [[19291, 23], [41022, 26], [40735, 2], [11609, 29], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [58693, 32], [10125, 36], [28310, 34], [23495, 10], [25, 37], [16784, 14], [10619, 3], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "92": {"top_similar": [[92, 1.0], [185, 0.6], [205, 0.5652173913043478]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "V", "=", "V", "+", "V", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\nb = 0\nc = 0\n\nfor num in range(10):\n  a = num % 3\n  b = num % 5\n  c = a + b + c\n  \n  print c", "fingerprint": [[40769, 2], [16167, 14], [25976, 16], [28318, 37], [58689, 23], [12133, 33], [11294, 41], [12133, 7], [28310, 39], [23495, 18], [19175, 25], [40769, 6], [10619, 11], [58693, 35], [12133, 27], [11519, 20], [58689, 29], [19265, 31], [40735, 10], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46844, 12133, 90404, 58693, 89729, 28318, 89729, 28310, 89350, 11294, 52605], "class": "1"}, "93": {"top_similar": [[93, 1.0], [295, 0.2222222222222222], [444, 0.19444444444444445]], "tokens": ["V", "=", "V", "(", "V", "(", "0", ",", "10", ",", "5", ")", ")", "\n", "V", "=", "V", "(", "V", "(", "0", ",", "10", ",", "3", ")", ")", "\n", "V", "=", "V", ".", "V", "(", "V", ")", "\n", "print", "V", "\n", "print", "V", "\n", "print", "V", "\n", "print", "V", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na=set(range(0,10,5))\nb=set(range(0,10,3))\nc=a.union(b)\n\nprint a\nprint b\nprint c\nprint sum(a)", "fingerprint": [[22775, 11], [34081, 7], [22775, 25], [34081, 21], [33446, 9], [26292, 3], [58692, 15], [11294, 42], [22525, 35], [58698, 29], [26292, 17], [25216, 5], [22544, 26], [12133, 27], [11294, 39], [33356, 23], [22544, 12], [38442, 31], [25216, 19], [12133, 13], [11294, 36], [26291, 33], [58692, 1], [11294, 45]], "k_gram_hashes": [90404, 58692, 89684, 26292, 89660, 25216, 41257, 34081, 75668, 33446, 47081, 22775, 22544, 12133, 90404, 58692, 89684, 26292, 89660, 25216, 41257, 34081, 75666, 33356, 43031, 22775, 22544, 12133, 90404, 58698, 89954, 38442, 89684, 26291, 89600, 22525, 11294, 52610, 89350, 11294, 52610, 89350, 11294, 52610, 89350, 11294, 52617, 89684, 26291], "class": "7"}, "94": {"top_similar": [[94, 1.0], [61, 0.7368421052631579], [288, 0.7368421052631579]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "print", "V", "\n", "print", "UNK", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 5 == 0:\n\tsum = sum + num\n\tprint num\n\tprint sum\n\tprint \" \"\nprint sum", "fingerprint": [[41720, 19], [11879, 21], [40735, 2], [18189, 14], [25, 38], [16167, 6], [28310, 26], [11483, 12], [10125, 37], [58693, 24], [19291, 16], [11294, 28], [11294, 31], [23495, 10], [11293, 34], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89350, 11294, 52610, 89350, 11293, 52565, 87300, 10125, 25, 1169], "class": "4"}, "95": {"top_similar": [[95, 1.0], [12, 0.7368421052631579], [153, 0.7368421052631579]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "1", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(10):\n  if num % 3 == 0 and num % 5 == 0:\n\tsum += 1\n\nprint sum", "fingerprint": [[25976, 8], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [38700, 31], [10125, 32], [23495, 10], [40589, 19], [4014, 20], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90964, 83885, 38700, 10125, 25, 1169], "class": "3"}, "96": {"top_similar": [[96, 1.0], [151, 0.8421052631578947], [14, 0.8]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "UNK", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ns = 0\n\nfor num in range(1000):\n  if(num % 3 == 0 | num % 5 == 0):\n\ts = s+num\n\t\nprint s", "fingerprint": [[19291, 23], [41022, 26], [40735, 2], [42479, 20], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [58693, 32], [10125, 36], [28310, 34], [23495, 10], [25, 37], [16784, 14], [26201, 8], [11879, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63718, 42479, 89064, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "97": {"top_similar": [[97, 1.0], [225, 0.7083333333333334], [264, 0.5833333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "and", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "print", "V", ",", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nn=0\nfor num in range(1,1000):\n  if (num % 3== 0) and (num%5==0):\n\tn=n+1\n\tprint num,n", "fingerprint": [[25171, 8], [58693, 36], [16784, 16], [27185, 38], [19291, 27], [11483, 14], [11879, 33], [23495, 12], [16167, 6], [34380, 43], [34301, 10], [11294, 40], [22332, 23], [2609, 24], [19201, 19], [40996, 22], [40735, 2], [41022, 30], [10619, 3], [23495, 31]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 40996, 22332, 2609, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38725, 11294, 52621, 89864, 34380, 89100], "class": "4"}, "98": {"top_similar": [[98, 1.0], [374, 0.5882352941176471], [152, 0.2647058823529412]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "UNK", "3", "\n", "V", "=", "UNK", "UNK", "5", "\n", "V", "=", "UNK", "UNK", "UNK", "\n", "V", "=", "(", "3", "+", "UNK", ")", "*", "V", "/", "2", "+", "(", "5", ")", "*", "V", "/", "2", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  x = 9//3\n  y = 9//5\n  z = 9//15\n  a = (3+9)*x/2+(5)*y/2\n  print a", "fingerprint": [[11519, 8], [30347, 35], [42794, 14], [22949, 42], [30347, 43], [28271, 32], [12133, 15], [46844, 20], [12133, 21], [22949, 34], [16167, 2], [25258, 30], [11294, 47], [35428, 37], [12133, 27], [35420, 45], [58678, 23], [26201, 4], [25346, 40], [23495, 6], [87344, 26], [26888, 39], [58678, 11], [58678, 17]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58678, 89031, 88025, 42794, 12133, 90403, 58678, 89033, 88115, 46844, 12133, 90403, 58678, 89053, 89015, 87344, 12133, 90372, 57261, 25258, 43153, 28271, 87584, 22949, 30347, 89887, 35428, 45147, 26888, 25346, 47084, 22949, 30347, 89887, 35420, 44800, 11294, 52605], "class": "1"}, "99": {"top_similar": [[99, 1.0], [394, 0.9047619047619048], [39, 0.5769230769230769]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "    ", "UNK", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "", "print", "(", "V", "(", "V", ")", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(10):\n  if (num%3 == 0):\n    global sum\n    sum = sum + num\nprint(str(sum))\n\t", "fingerprint": [[10125, 33], [25976, 8], [1137, 35], [40735, 2], [41022, 20], [16167, 6], [11483, 12], [19201, 17], [58693, 29], [26292, 37], [26291, 39], [23495, 21], [10303, 23], [23495, 10], [12133, 27], [25, 34], [16784, 14], [28310, 31], [10619, 3], [8054, 24]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54903, 10303, 8054, 89060, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1137, 51209, 26292, 89684, 26291, 89606, 22775], "class": "7"}, "100": {"top_similar": [[100, 1.0], [163, 1.0], [109, 0.7272727272727273]], "tokens": ["print", "V", "(", "[", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", "]", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n\nprint sum([x for x in range(1000) if x%3==0 or x%5==0])", "fingerprint": [[18189, 12], [19291, 20], [22679, 11], [19201, 14], [16167, 7], [22237, 5], [25919, 2], [42344, 17], [26201, 9]], "k_gram_hashes": [52617, 89675, 25919, 72865, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63711, 42131], "class": "6"}, "101": {"top_similar": [[101, 1.0], [57, 0.7777777777777778], [167, 0.6111111111111112]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n if (num%3==0) or (num%5==0):\n  \tnum+=num\n\t\n\tprint num\n  \n  \n#  add all in range(10) that x%3==0, x%5==0", "fingerprint": [[41035, 16], [26289, 19], [16784, 10], [12068, 8], [19201, 13], [23495, 6], [24087, 17], [25976, 4], [85010, 30], [11609, 27], [19291, 21], [66821, 28], [23495, 25], [41022, 24], [16167, 2], [11294, 32]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12068, 87447, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "102": {"top_similar": [[102, 1.0], [291, 1.0], [65, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "UNK", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):15\n  ", "fingerprint": [[23533, 6], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23533, 56615], "class": "1"}, "103": {"top_similar": [[103, 1.0], [27, 0.8421052631578947], [144, 0.8421052631578947]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "print", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nans = 0\n\nfor num in range(10):\n  if (num%3==0 or num%5==0):\n  \tans += ans\n\tprint ans\n\t\nprint ans", "fingerprint": [[66821, 30], [19291, 23], [25976, 8], [40735, 2], [11609, 29], [23495, 27], [16167, 6], [11294, 34], [11483, 12], [19201, 17], [42344, 20], [25, 38], [41022, 26], [23495, 10], [10125, 37], [16784, 14], [85010, 32], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89350, 11294, 52610, 89325, 10125, 25, 1169], "class": "3"}, "104": {"top_similar": [[104, 1.0], [14, 0.9], [141, 0.9]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\nfor num in range(1000):\n  if (num % 3 == 0) or (num % 5 == 0): \n  \ttotal = total + num\nprint total\t\n", "fingerprint": [[10125, 38], [40735, 2], [11609, 31], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [28310, 36], [41022, 28], [24087, 21], [41035, 20], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "105": {"top_similar": [[43, 1.0], [105, 1.0], [298, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \n  print a\n\t", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "106": {"top_similar": [[106, 1.0], [386, 1.0], [26, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "%", "UNK", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \n  x = 30 % 111\n  print x", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [20165, 13], [58644, 11], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58644, 87523, 20165, 87325, 11294, 52605], "class": "1"}, "107": {"top_similar": [[107, 1.0], [30, 0.5], [64, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "UNK", "0", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "print", "V", "\n", "", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num>0:\n    if num % 3 == 0 or num % 5 == 0:\n\t  print num\n\t", "fingerprint": [[10125, 34], [26201, 4], [41720, 28], [42344, 22], [23495, 6], [19291, 25], [10420, 30], [18223, 10], [18189, 17], [10268, 15], [19201, 19], [41720, 13], [13319, 31], [11483, 8], [6479, 16], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18223, 91055, 88002, 41720, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54906, 10420, 13319, 52610, 89325, 10125, 0], "class": "4"}, "108": {"top_similar": [[108, 1.0], [379, 0.8461538461538461], [405, 0.5882352941176471]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "print", "(", "V", ")", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1,1000):\n  if num % 3 == 0:\n\tprint (num)\n  ", "fingerprint": [[34301, 6], [18189, 12], [26291, 22], [41720, 17], [19201, 14], [25171, 4], [11483, 10], [11860, 19], [22500, 24], [23495, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11860, 78087, 51209, 26291, 89600, 22500, 10125], "class": "4"}, "109": {"top_similar": [[109, 1.0], [100, 0.7272727272727273], [163, 0.7272727272727273]], "tokens": ["print", "(", "V", "(", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nprint (sum (i for i in range (1000) if i % 3 == 0 or i % 5 == 0))", "fingerprint": [[18189, 12], [26290, 3], [22679, 11], [26292, 1], [16167, 7], [22237, 5], [42344, 17], [19291, 20], [26201, 9], [19201, 14]], "k_gram_hashes": [51209, 26292, 89684, 26290, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41006], "class": "6"}, "110": {"top_similar": [[110, 1.0], [295, 0.3333333333333333], [344, 0.25]], "tokens": ["UNK", "V", "\n", "print", "V", ".", "V", "(", "UNK", ")", "\n", "print", "V", "(", "UNK", ")", ".", "V", "(", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nimport os\nprint os.listdir(\"/include\")\n\nprint open(\"/index.html\").read()", "fingerprint": [[38442, 5], [26246, 7], [22525, 9], [11294, 2], [11294, 10], [26246, 13], [23129, 15]], "k_gram_hashes": [89060, 89350, 11294, 52623, 89954, 38442, 89683, 26246, 87575, 22525, 11294, 52617, 89683, 26246, 87588, 23129, 38442, 89651], "class": "1"}, "111": {"top_similar": [[111, 1.0], [88, 0.6818181818181818], [415, 0.65]], "tokens": ["V", "=", "V", "\n", "V", "=", "V", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "(", "V", ",", "V", ")", "\n", "", "", "print", "V", ""], "source": "x = int\nnum = int\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum(x,num)\n\nprint x", "fingerprint": [[34391, 36], [23495, 14], [41720, 29], [22500, 38], [42344, 23], [10619, 7], [10125, 39], [19291, 26], [26201, 12], [11483, 16], [58685, 1], [26296, 34], [18189, 18], [11879, 31], [16167, 10], [25, 40], [58685, 5], [19201, 20], [12133, 3]], "k_gram_hashes": [90404, 58685, 89369, 12133, 90404, 58685, 89335, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78942, 89684, 26296, 89864, 34391, 89600, 22500, 10125, 25, 1169], "class": "4"}, "112": {"top_similar": [[112, 1.0], [441, 0.23529411764705882], [281, 0.23333333333333334]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "(", "V", "-", "(", "V", "%", "3", ")", ")", "+", "(", "V", "-", "(", "V", "%", "5", ")", ")", "-", "(", "V", "-", "(", "V", "%", "UNK", ")", ")", ";", "\n", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nd = 0;\nfor num in range(9):\n  d =d+(num-(num%3))+ (num-(num%5))-(num-(num%15));\nprint d;", "fingerprint": [[26295, 19], [26246, 9], [26289, 42], [26295, 39], [26909, 18], [19181, 24], [26289, 32], [16167, 7], [22785, 36], [10619, 4], [20171, 44], [19271, 34], [1169, 50], [41675, 2], [23495, 11], [10150, 49], [22796, 46], [22962, 37], [26295, 29], [22783, 26], [11519, 13], [26289, 22], [22872, 27], [58693, 16]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89697, 26909, 26295, 89787, 30959, 26289, 89526, 19181, 43031, 22783, 22872, 26909, 26295, 89787, 30959, 26289, 89528, 19271, 47081, 22785, 22962, 30959, 26295, 89787, 30959, 26289, 89548, 20171, 87581, 22796, 23450, 52875, 10150, 1169, 52631], "class": "7"}, "113": {"top_similar": [[113, 1.0], [17, 0.9130434782608695], [46, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\n\nfor num in range(1000):\n  if num % 3 == 0:\n\ttotal = total + num\n\n  if num % 5 == 0:\n\ttotal = total + num\n#end\n\nprint total", "fingerprint": [[19291, 32], [10133, 28], [28310, 26], [58693, 24], [404, 29], [18189, 30], [41720, 19], [19201, 16], [11483, 12], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [25, 45], [11879, 37], [26201, 8], [28310, 42], [10619, 3], [11879, 21], [18189, 14], [41720, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "114": {"top_similar": [[114, 1.0], [334, 0.6666666666666666], [6, 0.5]], "tokens": ["for", "V", "in", "V", "(", "3", "%", "1000", ",", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(3 % 1000,):\n  print num", "fingerprint": [[25254, 4], [11500, 11], [20131, 6], [16167, 2], [23495, 9]], "k_gram_hashes": [22237, 89459, 16167, 89661, 25254, 42972, 20131, 85781, 32922, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "115": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num\n  \n", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "116": {"top_similar": [[116, 1.0], [231, 0.5], [418, 0.42857142857142855]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", ":", "V", "+=", "V", "\n", "if", "(", "V", "%", "5", ")", "==", "0", ":", "V", "+=", "V", "\n", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if (num % 3)==0: sum += num\n  if (num % 5)==0: sum += num\nprint sum\n", "fingerprint": [[19271, 30], [1169, 40], [10150, 39], [40735, 2], [23690, 32], [10497, 26], [23690, 19], [16167, 6], [11483, 12], [16784, 27], [85010, 37], [56696, 35], [19181, 17], [85010, 24], [23495, 10], [56696, 22], [41759, 34], [16784, 14], [26201, 8], [41759, 21], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63702, 41759, 56696, 90989, 85010, 89333, 10497, 16784, 26289, 89528, 19271, 47101, 23690, 63702, 41759, 56696, 90989, 85010, 89325, 10150, 1169, 52610], "class": "4"}, "117": {"top_similar": [[117, 1.0], [43, 0.3333333333333333], [105, 0.3333333333333333]], "tokens": ["for", "V", "in", "[", "UNK", "]", ":", "\n", "  ", "print", "V", "\n", "", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "1000", "%", "UNK", "", ""], "source": "for letter in ['x']:\n  print letter\n\nfor num in range(1000):\n  print 1000%6", "fingerprint": [[11500, 21], [16167, 15], [52610, 9], [23495, 19], [10135, 11], [11500, 7], [15793, 2], [494, 12], [54930, 6], [72846, 3], [52524, 23], [26201, 17]], "k_gram_hashes": [22237, 89450, 15793, 72846, 88722, 74120, 54930, 11500, 61919, 52610, 89325, 10135, 494, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61917, 52524, 85498, 20160], "class": "1"}, "118": {"top_similar": [[118, 1.0], [37, 0.6666666666666666], [80, 0.5357142857142857]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "\n", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "(", "V", "==", "0", "or", "V", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "print", "V", "\n", "", "", ""], "source": "var3 = 0\nfor num in range(10): \n  x = num\n  var = x % 3\n  var2 = x % 5\n  if (var == 0 or var2 == 0):\n\tvar3 =  var3 + x\n\tprint x\n\tprint var3\n\n", "fingerprint": [[42344, 34], [11519, 12], [58689, 19], [26311, 31], [11294, 51], [10497, 29], [41022, 38], [12133, 17], [19265, 27], [23495, 39], [11294, 48], [58685, 15], [58693, 44], [23495, 10], [16784, 30], [16167, 6], [28310, 46], [19175, 21], [10619, 3], [11879, 41], [25976, 8], [58689, 25], [40735, 2], [12133, 23], [63686, 37]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58685, 89369, 12133, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10497, 16784, 26311, 90515, 63715, 42344, 83011, 90515, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "119": {"top_similar": [[78, 1.0], [119, 1.0], [9, 0.92]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nssum = 0\n\nfor num in range(1000):\n  if (num % 3 == 0):\n\tssum = ssum + num\n\n  if (num % 5 == 0):\n\tssum = ssum + num\n  \n\t\nprint ssum", "fingerprint": [[19201, 17], [16784, 14], [19291, 35], [25, 49], [41022, 38], [372, 31], [11483, 12], [23495, 39], [11879, 23], [16784, 32], [28310, 28], [58693, 44], [23495, 21], [23495, 10], [16167, 6], [10125, 48], [28310, 46], [10133, 30], [58693, 26], [26201, 8], [10619, 3], [11879, 41], [41022, 20], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "120": {"top_similar": [[120, 1.0], [126, 0.9583333333333334], [266, 0.88]], "tokens": ["V", "=", "[", "3", ",", "5", "]", "\n", "V", "=", "10", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", ":", "\n", "    ", "for", "V", "in", "V", "(", "1", ",", "V", ")", ":", "\n", "        ", "if", "V", "*", "V", "<", "V", ":", "\n", "UNK", "V", "+=", "V", "*", "V", "\n", "", "", "", "print", "V", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "V", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "        ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnums = [3, 5]\nmax = 10\n\nresult = 0\nfor num in nums:\n    for i in range(1,max):\n        if num*i < max:\n            result += num*i\nprint result\n\n\nresult = 0\nfor i in range(0,max):\n    if i%3 == 0 or i%5 == 0:\n        result += i\n\nprint result", "fingerprint": [[30359, 37], [85010, 88], [34391, 29], [12104, 42], [0, 50], [16182, 18], [8504, 34], [60732, 39], [85019, 45], [12133, 55], [42344, 77], [58370, 9], [12133, 11], [6569, 22], [25171, 27], [34391, 66], [16167, 25], [19291, 80], [10125, 49], [16167, 62], [10349, 85], [25, 51], [18194, 35], [10125, 90], [12133, 7], [10121, 86], [30335, 47], [25, 91], [6479, 71], [18189, 72], [58296, 1], [10619, 59], [25216, 64], [40735, 58], [41720, 83], [10313, 33], [10270, 21], [54943, 41], [33471, 4], [10619, 15], [40735, 14], [1169, 52], [23495, 68], [43268, 3], [19201, 74], [10268, 70], [23495, 31]], "k_gram_hashes": [90395, 58296, 71836, 43268, 33471, 48200, 73169, 12133, 90397, 58370, 75194, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16182, 90320, 54903, 10270, 6569, 22237, 89459, 16167, 89659, 25171, 39239, 34391, 89622, 23495, 54904, 10313, 8504, 18194, 89774, 30359, 90449, 60732, 90320, 54943, 12104, 89096, 90989, 85019, 89774, 30335, 89325, 10125, 0, 25, 1169, 52610, 89369, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41264, 34391, 89622, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54904, 10349, 10121, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "121": {"top_similar": [[121, 1.0], [3, 0.5], [300, 0.4444444444444444]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "print", "V", "%", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na = 0;\n\nfor num in range(1000):\n\tprint num%3\n\t", "fingerprint": [[11860, 13], [41675, 2], [16167, 7], [10619, 4], [19175, 17], [23495, 11], [52614, 15], [26201, 9]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11860, 78119, 52614, 89526, 19175, 42750], "class": "1"}, "122": {"top_similar": [[122, 1.0], [234, 0.8], [0, 0.3333333333333333]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "    ", "if", "not", "V", "%", "3", "==", "0", "or", "not", "V", "%", "5", "==", "0", ":", "\n", "        ", "UNK", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor x in xrange(10):\n    if not x % 3 == 0 or not x % 5 == 0:\n        continue\n    print x", "fingerprint": [[6469, 9], [17774, 10], [19291, 20], [41720, 23], [19201, 13], [23495, 6], [10348, 25], [10040, 26], [10268, 8], [42334, 16], [70839, 18], [1169, 29], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54903, 10268, 6469, 17774, 70839, 89526, 19201, 43940, 63715, 42334, 82574, 70839, 89528, 19291, 47990, 63702, 41720, 54904, 10348, 10040, 87300, 10150, 1169, 52605], "class": "7"}, "123": {"top_similar": [[123, 1.0], [61, 0.8333333333333334], [219, 0.8333333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nresult = 0\nfor num in range(1000):\n  if x % 3 == 0 or x % 5 == 0:\n    result = result + x\n\nprint result", "fingerprint": [[58693, 30], [10304, 27], [8083, 28], [40735, 2], [18189, 14], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [10125, 34], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "124": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": ["2", "+", "2", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n2+2", "fingerprint": [], "k_gram_hashes": [45157], "class": "1"}, "125": {"top_similar": [[125, 1.0], [195, 0.8611111111111112], [299, 0.6231884057971014]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "1", "\n", "if", "V", "==", "3", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "V", "=", "V", "+", "1", "\n", "if", "V", "==", "5", ":", "\n", "\t  ", "V", "=", "V", "\n", "V", "=", "V", "-", "V", "\n", "V", "=", "0", "\n", "", "", "if", "V", "==", "5", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "", "", "print", "V", "+", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nx=0\ny=0\nt1=0\nt2=0\na=0\nb=0\nz=0\nab=0\nfor num in range(999):\n  x=x+1\n  y=y+1\n  if x==3:\n\ta=num+1\n\tt1=t1+a\n\tx=0\n\tz=z+1\n\tif z==5:\n\t  ab=t1\n\t  t1=t1-ab\n\t  z=0\n  if y==5:\n\tb=num+1\n\tt2=t2+b\n\ty=0\nprint t1+t2\n  \n", "fingerprint": [[27185, 51], [1169, 130], [28310, 70], [12133, 76], [27185, 116], [10125, 103], [404, 105], [25, 129], [47795, 109], [27185, 45], [40735, 30], [40769, 75], [12133, 66], [12133, 124], [12133, 99], [26246, 36], [11519, 40], [43745, 57], [18211, 54], [12133, 11], [32360, 97], [18211, 106], [10439, 88], [58693, 120], [40769, 18], [12133, 15], [18211, 83], [10619, 31], [27185, 64], [12133, 72], [12133, 3], [58693, 62], [10529, 53], [58693, 68], [40725, 127], [40769, 26], [11879, 59], [23495, 38], [12133, 7], [12133, 118], [10529, 82], [40725, 102], [58693, 114], [12133, 47], [40769, 6], [58695, 95], [12133, 27], [40769, 22], [12133, 93], [16167, 34], [40769, 2], [11879, 111], [58693, 43], [58693, 49], [14158, 89], [28310, 122], [40769, 14], [12133, 19], [58693, 78], [8, 104], [47795, 86], [40769, 10], [27185, 80], [12133, 23], [10125, 128], [58685, 91]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89704, 27185, 38708, 10529, 18211, 90516, 63747, 43745, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40769, 12133, 90404, 58693, 89704, 27185, 38708, 10529, 18211, 90518, 63837, 47795, 54906, 10439, 14158, 90404, 58685, 89369, 12133, 90404, 58695, 89819, 32360, 89369, 12133, 90380, 57605, 40725, 10125, 8, 404, 18211, 90518, 63837, 47795, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40725, 10125, 25, 1169, 52618, 89729, 28310], "class": "7"}, "126": {"top_similar": [[126, 1.0], [120, 0.9583333333333334], [266, 0.88]], "tokens": ["V", "=", "[", "3", ",", "5", "]", "\n", "V", "=", "1000", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", ":", "\n", "    ", "for", "V", "in", "V", "(", "1", ",", "V", ")", ":", "\n", "        ", "if", "V", "*", "V", "<", "V", ":", "\n", "UNK", "V", "+=", "V", "*", "V", "\n", "", "", "", "print", "V", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "V", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "        ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#   for num in range(10):\n  \nnums = [3, 5]\nmax = 1000\n\nresult = 0\nfor num in nums:\n    for i in range(1,max):\n        if num*i < max:\n            result += num*i\nprint result\n\n\nresult = 0\nfor i in range(0,max):\n    if i%3 == 0 or i%5 == 0:\n        result += i\n\nprint result", "fingerprint": [[30359, 37], [85010, 88], [34391, 29], [12104, 42], [0, 50], [16182, 18], [8504, 34], [60732, 39], [85019, 45], [12133, 55], [42344, 77], [12133, 11], [6569, 22], [25171, 27], [34391, 66], [16167, 25], [19291, 80], [10125, 49], [16167, 62], [58595, 9], [10349, 85], [25, 51], [18194, 35], [10125, 90], [12133, 7], [10121, 86], [30335, 47], [25, 91], [6479, 71], [18189, 72], [58296, 1], [10619, 59], [25216, 64], [40735, 58], [41720, 83], [10313, 33], [10270, 21], [54943, 41], [33471, 4], [10619, 15], [40735, 14], [1169, 52], [23495, 68], [43268, 3], [19201, 74], [10268, 70], [23495, 31]], "k_gram_hashes": [90395, 58296, 71836, 43268, 33471, 48200, 73169, 12133, 90402, 58595, 85319, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16182, 90320, 54903, 10270, 6569, 22237, 89459, 16167, 89659, 25171, 39239, 34391, 89622, 23495, 54904, 10313, 8504, 18194, 89774, 30359, 90449, 60732, 90320, 54943, 12104, 89096, 90989, 85019, 89774, 30335, 89325, 10125, 0, 25, 1169, 52610, 89369, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41264, 34391, 89622, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54904, 10349, 10121, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "127": {"top_similar": [[127, 1.0], [6, 0.8], [18, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "3", "%", "10", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print 3 % 10", "fingerprint": [[42967, 11], [23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61896, 51579, 42967, 19890], "class": "1"}, "128": {"top_similar": [[128, 1.0], [217, 0.4782608695652174], [123, 0.47619047619047616]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "not", "V", "%", "3", ")", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if ( not num % 3  ):\n    x=x+num\nprint x", "fingerprint": [[28310, 23], [8083, 19], [26201, 4], [19181, 14], [10125, 25], [23495, 6], [16774, 10], [10304, 18], [25, 26], [23495, 16], [58693, 21], [11483, 8], [25874, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16774, 25874, 70839, 89526, 19181, 43047, 23495, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "129": {"top_similar": [[129, 1.0], [61, 0.7777777777777778], [288, 0.7777777777777778]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nresul=0;\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\tresul=resul+num;\nprint resul;", "fingerprint": [[19291, 23], [58693, 31], [19201, 17], [41720, 26], [25, 37], [41675, 2], [18189, 15], [16167, 7], [11483, 13], [10125, 36], [28331, 33], [10619, 4], [11879, 28], [23495, 11], [42344, 20], [26201, 9]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28331, 90275, 52875, 10125, 25, 1169, 52631], "class": "6"}, "130": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": [""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#\tfor num in range(1000):\n#\t\tprint range", "fingerprint": [], "k_gram_hashes": [], "class": "1"}, "131": {"top_similar": [[131, 1.0], [78, 0.3684210526315789], [119, 0.3684210526315789]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "3", "*", "V", ")", "<", "1000", ":", "\n", "\t", "V", "=", "V", "+", "3", "*", "V", "\n", "", "if", "(", "5", "*", "V", ")", "<", "1000", ":", "\n", "\t", "V", "=", "V", "+", "5", "*", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\t\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if (3 * num) < 1000:\n\tsum = sum + 3 * num\n  if (5 * num) < 1000:\n\tsum = sum + 5 * num\n\t\nprint sum", "fingerprint": [[30341, 37], [372, 33], [58693, 46], [11879, 43], [25259, 15], [16763, 34], [11879, 23], [23622, 19], [30335, 50], [11483, 12], [16761, 14], [25, 53], [25349, 35], [23622, 39], [23495, 10], [30341, 17], [16167, 6], [58693, 26], [54938, 42], [26201, 8], [10619, 3], [27374, 48], [10133, 32], [54938, 22], [27284, 28], [10125, 52], [40735, 2], [30335, 30]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16761, 25259, 43199, 30341, 89624, 23622, 60642, 86270, 54938, 11879, 78958, 90404, 58693, 89706, 27284, 43199, 30335, 89325, 10133, 372, 16763, 25349, 47249, 30341, 89624, 23622, 60642, 86270, 54938, 11879, 78958, 90404, 58693, 89708, 27374, 47249, 30335, 89325, 10125, 25, 1169], "class": "4"}, "132": {"top_similar": [[132, 1.0], [253, 0.7037037037037037], [24, 0.6551724137931034]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsumtotal = 0\nfor num in range(1000):\n   if num % 5 == 0:\n\t  sumtotal =  sumtotal + num\n   elif num % 3 == 0:\n\t  sumtotal =  sumtotal + num\nprint sumtotal\n\t  \n\t  ", "fingerprint": [[28310, 26], [58693, 24], [19291, 16], [41720, 19], [134, 29], [19201, 32], [58693, 40], [11888, 12], [10125, 44], [10439, 21], [23495, 10], [16167, 6], [6039, 30], [25, 45], [26201, 8], [28310, 42], [10619, 3], [14158, 22], [18189, 14], [14158, 38], [10127, 28], [41720, 35], [10439, 37], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "133": {"top_similar": [[133, 1.0], [282, 1.0], [52, 0.875]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntot =0\nfor num in range(1000):\n  if num%3==0:\n\ttot+=num\nprint num", "fingerprint": [[41720, 19], [11879, 21], [40735, 2], [18189, 14], [85010, 24], [16167, 6], [11483, 12], [19201, 16], [25, 27], [23495, 10], [26201, 8], [10619, 3], [78971, 22], [10125, 26]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "134": {"top_similar": [[134, 1.0], [235, 0.76], [258, 0.6538461538461539]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(1000):\n\tif num % 3 == 0:\n\t  sum += num\n\telif num % 5 == 0:\n\t  sum += num\n\nprint sum\n\n\n", "fingerprint": [[10127, 26], [19291, 30], [10439, 35], [41720, 19], [11843, 12], [19201, 16], [10619, 3], [85010, 38], [14171, 22], [10125, 40], [41720, 33], [10439, 21], [23495, 10], [85010, 24], [16167, 6], [26201, 8], [25, 41], [18189, 14], [6039, 28], [14171, 36], [40735, 2], [134, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14171, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14171, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "135": {"top_similar": [[135, 1.0], [418, 0.8421052631578947], [171, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "+=", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ns = 0\nfor num in range(1000):\n  if (num % 3) == 0 or (num % 5) == 0:\n\ts += num", "fingerprint": [[78971, 32], [41720, 29], [40735, 2], [23690, 19], [16167, 6], [11483, 12], [42312, 21], [19181, 17], [23690, 27], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [19271, 25], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78971, 90989, 85005, 89100], "class": "6"}, "136": {"top_similar": [[136, 1.0], [47, 0.8888888888888888], [96, 0.7894736842105263]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", ";", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx= 0\nfor num in range(1000):\n  \n  if(num%3 == 0 or num%5 == 0):\n\tx = x + num\t;\n\n\nprint x\n\t\n\t\n\t\n\t", "fingerprint": [[19291, 23], [41022, 26], [40735, 2], [28331, 34], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [58693, 32], [25, 38], [23495, 10], [10125, 37], [16784, 14], [26201, 8], [11879, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28331, 90275, 52875, 10125, 25, 1169, 52610], "class": "6"}, "137": {"top_similar": [[137, 1.0], [310, 0.5483870967741935], [134, 0.5333333333333333]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  \t", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "elif", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  \tif (num % 3 == 0):\n\t  sum += num\n\telif (num % 5 == 0):\n\t  sum += num\n\t  \nprint sum\n\t  \n\t\n\t", "fingerprint": [[102, 29], [14171, 24], [19201, 17], [85010, 26], [14171, 40], [16784, 14], [11573, 12], [10439, 39], [85010, 42], [10125, 44], [23495, 21], [23495, 10], [16167, 6], [25, 45], [4634, 30], [41022, 36], [26201, 8], [10619, 3], [19291, 33], [41022, 20], [10127, 28], [23495, 37], [40735, 2], [10439, 23]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54932, 11573, 65172, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54906, 10439, 14171, 90989, 85010, 89325, 10127, 102, 4634, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54906, 10439, 14171, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "138": {"top_similar": [[138, 1.0], [178, 0.3076923076923077], [242, 0.2727272727272727]], "tokens": ["UNK", "V", "(", ")", ":", "\n", "  ", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "not", "V", "%", "3", "or", "not", "V", "%", "5", ":", "\n", "\t  ", "print", "V", "(", "V", "(", ")", ")", "", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef susu():\n  for num in range(1000):\n\tif not number % 3 or not number % 5:\n\t  print sum(susu())", "fingerprint": [[23495, 3], [17774, 17], [26201, 11], [22770, 35], [11843, 15], [22275, 36], [23495, 13], [10420, 28], [70839, 23], [26292, 32], [24822, 2], [22237, 7], [19210, 20], [24806, 34], [19287, 25], [13319, 29], [11485, 5], [44359, 21], [16167, 9]], "k_gram_hashes": [89067, 89651, 24822, 23495, 54930, 11485, 61244, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77344, 17774, 70839, 89526, 19210, 44359, 82574, 70839, 89528, 19287, 47795, 54906, 10420, 13319, 52617, 89684, 26292, 89651, 24806, 22770, 22275, 0], "class": "2"}, "139": {"top_similar": [[139, 1.0], [237, 0.8095238095238095], [253, 0.7391304347826086]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 5 == 0: \n\tx = x + num\n  elif num % 3 == 0:\n\tx = x + num", "fingerprint": [[58693, 36], [10127, 24], [19201, 28], [26201, 4], [28310, 22], [23495, 6], [11879, 33], [19291, 12], [134, 25], [41720, 15], [58693, 20], [41720, 31], [6039, 26], [11879, 17], [11483, 8], [28305, 38], [18189, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28305, 89100], "class": "4"}, "140": {"top_similar": [[140, 1.0], [243, 0.7647058823529411], [175, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n    sum += num\nprint sum", "fingerprint": [[25, 29], [26201, 4], [19201, 12], [41720, 21], [23495, 6], [8096, 24], [85010, 26], [10125, 28], [42344, 15], [11483, 8], [10304, 23], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8096, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "141": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsoma = 0\nfor num in range(1000):\n  if (num%3==0) or (num%5==0):\n\tsoma = soma + num\nprint soma\n  ", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "142": {"top_similar": [[142, 1.0], [207, 0.46153846153846156], [7, 0.4473684210526316]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "(", "V", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "elif", "(", "V", "==", "0", ")", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "#!/usr/bin/python\n# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nm=0\nfor num in range(1000):\n  n = num%3\n  s = num%5  \n  if(n==0):\n  \tm = m+num\n  elif (s==0):\n\t  m=m+num\n\nprint m", "fingerprint": [[102, 41], [19265, 23], [26311, 27], [4634, 42], [11519, 12], [58693, 52], [23495, 31], [41022, 30], [23495, 47], [10497, 25], [41022, 46], [25, 57], [10439, 49], [11609, 33], [28310, 38], [26311, 43], [58689, 21], [23495, 10], [16167, 6], [14158, 50], [58689, 15], [16784, 26], [19175, 17], [26201, 8], [10619, 3], [58693, 36], [10125, 56], [12133, 19], [28310, 54], [10127, 40], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10497, 16784, 26311, 90515, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10127, 102, 4634, 26311, 90515, 63686, 41022, 23495, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "143": {"top_similar": [[143, 1.0], [213, 0.9047619047619048], [217, 0.625]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ")", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if ((num % 3 == 0) or (num % 5 == 0)):\n    result = result + num\nprint result", "fingerprint": [[41035, 17], [16752, 10], [26201, 4], [22797, 26], [23495, 6], [19201, 14], [8083, 30], [24884, 11], [58693, 32], [10125, 36], [28310, 34], [24087, 18], [19291, 22], [25, 37], [11483, 8], [10304, 29], [41006, 25], [16167, 2], [26289, 20]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41006, 22797, 23495, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "144": {"top_similar": [[27, 1.0], [144, 1.0], [103, 0.8421052631578947]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nholder = 0\nfor num in range(1000):\n  if (num % 3 == 0 or num % 5 == 0):\n  \tholder += num\n\nprint holder", "fingerprint": [[66821, 30], [19291, 23], [41022, 26], [10125, 34], [40735, 2], [11609, 29], [25, 35], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [23495, 10], [16784, 14], [26201, 8], [85010, 32], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "145": {"top_similar": [[145, 1.0], [192, 0.75], [65, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "1000", "/", "3", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):1000/3", "fingerprint": [[26201, 4], [16167, 2], [23532, 6]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23532, 56582, 85836], "class": "1"}, "146": {"top_similar": [[146, 1.0], [415, 0.875], [111, 0.5909090909090909]], "tokens": ["V", "=", "V", "\n", "V", "=", "V", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "+", "V", "", "", ""], "source": "x = int\nnum = int\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint x+num", "fingerprint": [[23495, 14], [41720, 29], [52618, 33], [42344, 23], [10619, 7], [11860, 31], [19291, 26], [26201, 12], [11483, 16], [58685, 1], [28305, 35], [18189, 18], [16167, 10], [58685, 5], [19201, 20], [12133, 3]], "k_gram_hashes": [90404, 58685, 89369, 12133, 90404, 58685, 89335, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52618, 89729, 28305, 89100], "class": "4"}, "147": {"top_similar": [[147, 1.0], [156, 0.7777777777777778], [448, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "+", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "x = 0\nfor num in range(10):\n  if num%3 + num%5 == 0:\n\tx = x + num\nprint x\n", "fingerprint": [[25976, 8], [19291, 20], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [41720, 23], [11879, 25], [25, 33], [23495, 10], [58693, 28], [28310, 30], [19183, 16], [10619, 3], [10125, 32], [28314, 18]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19183, 43154, 28314, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "7"}, "148": {"top_similar": [[148, 1.0], [153, 0.75], [133, 0.7333333333333333]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "1", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0:\n\tsum += 1\n\t\nprint sum", "fingerprint": [[38700, 21], [10125, 22], [26201, 4], [19201, 12], [23495, 6], [41720, 15], [11879, 17], [11483, 8], [18189, 10], [78971, 18], [16167, 2], [25, 23]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90964, 83885, 38700, 10125, 25, 1169], "class": "4"}, "149": {"top_similar": [[149, 1.0], [189, 1.0], [43, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\n\nfor num in range(1000):\n  print x", "fingerprint": [[40735, 2], [16167, 6], [11500, 12], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "150": {"top_similar": [[150, 1.0], [390, 0.6829268292682927], [46, 0.5263157894736842]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "UNK", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num%3==0 and num%5==0:\n\tsum = sum + num\n  else:\n\tif num%3 == 0:\n\t  sum = sum + num\n\tif num%5 == 0:\n\t  sum = sum + num\nprint sum", "fingerprint": [[404, 55], [14158, 48], [10133, 54], [10125, 70], [28310, 68], [41720, 45], [10168, 34], [19201, 42], [1962, 35], [19291, 22], [10439, 47], [19291, 58], [11879, 27], [19201, 16], [11483, 12], [18189, 40], [28310, 52], [23495, 10], [16167, 6], [58693, 50], [0, 71], [41720, 25], [11843, 38], [40589, 19], [26201, 8], [10619, 3], [58693, 30], [41720, 61], [18189, 56], [18189, 14], [10439, 63], [40735, 2], [4014, 20], [58693, 66], [28310, 32], [14158, 64]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10168, 1962, 88295, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 0, 25, 1169], "class": "6"}, "151": {"top_similar": [[151, 1.0], [96, 0.8421052631578947], [14, 0.7619047619047619]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "and", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if (num%3 == 0 and num%5 == 0) : \n\tsum = sum + num\n\t\nprint sum", "fingerprint": [[4014, 21], [41022, 26], [40735, 2], [19291, 23], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [58693, 32], [10125, 36], [28310, 34], [23495, 10], [25, 37], [16784, 14], [26201, 8], [11879, 29], [10619, 3], [40589, 20]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "152": {"top_similar": [[152, 1.0], [205, 0.4], [92, 0.39285714285714285]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "3", "\n", "V", "=", "5", "\n", "V", "=", "2", "*", "V", "\n", "V", "=", "2", "*", "V", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b \n\nfor num in range(10):\n  a = 3\n  b = 5\n  x = 2 * a\n  y = 2 * b\n  z = X+y\n  print x\n  print y\n ", "fingerprint": [[30335, 21], [11519, 8], [12133, 13], [11294, 35], [12133, 17], [23495, 6], [46844, 16], [42794, 12], [25976, 4], [30335, 27], [58693, 31], [12133, 29], [12133, 23], [28310, 33], [45224, 20], [57650, 11], [45224, 26], [16167, 2], [11294, 38]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90381, 57650, 42794, 12133, 90383, 57740, 46844, 12133, 90382, 57704, 45224, 30335, 89369, 12133, 90382, 57704, 45224, 30335, 89369, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89350, 11294, 52610, 89325], "class": "1"}, "153": {"top_similar": [[153, 1.0], [52, 0.8823529411764706], [62, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "1", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ncount = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tcount += 1\nprint count\t", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [38700, 31], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90964, 83885, 38700, 10125, 25, 1169], "class": "3"}, "154": {"top_similar": [[154, 1.0], [418, 0.625], [135, 0.5652173913043478]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "  \t", "V", "+=", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0;\nfor num in range(1000):\n  if (num % 3) == 0 or (num % 5) == 0:\n  \tsum += num;\nprint sum;", "fingerprint": [[23690, 28], [41720, 30], [11609, 32], [19271, 26], [85031, 35], [10125, 38], [42312, 22], [41675, 2], [52875, 37], [16167, 7], [11483, 13], [19181, 18], [26289, 24], [10619, 4], [23690, 20], [16784, 15], [66821, 33], [23495, 11], [25, 39], [26201, 9]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54932, 11609, 66821, 90989, 85031, 90275, 52875, 10125, 25, 1169, 52631], "class": "6"}, "155": {"top_similar": [[155, 1.0], [67, 0.7777777777777778], [9, 0.7142857142857143]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(10):\n  if (num % 3 == 0):\n\tsum += num\n  if (num % 5 == 0):\n\tsum += num\n\nprint sum", "fingerprint": [[10133, 28], [11879, 39], [85010, 26], [16784, 14], [11879, 23], [78971, 24], [11483, 12], [85010, 42], [10125, 44], [23495, 21], [23495, 10], [16784, 30], [16167, 6], [19201, 17], [25, 45], [19291, 33], [41022, 36], [10619, 3], [25976, 8], [41022, 20], [372, 29], [23495, 37], [40735, 2], [78971, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "7"}, "156": {"top_similar": [[156, 1.0], [448, 1.0], [61, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsumma = 0\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0: \n\tsumma = summa + num\nprint summa\n    \n\n", "fingerprint": [[58693, 30], [25976, 8], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "157": {"top_similar": [[157, 1.0], [43, 0.8], [105, 0.8]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "<", "7", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num <7", "fingerprint": [[23495, 6], [52634, 10], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52634, 90429, 59805], "class": "4"}, "158": {"top_similar": [[158, 1.0], [6, 0.6666666666666666], [18, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "/", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num/3\n  ", "fingerprint": [[35375, 12], [52622, 10], [23495, 6], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52622, 89886, 35375, 42750], "class": "1"}, "159": {"top_similar": [[159, 1.0], [179, 0.5909090909090909], [14, 0.56]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "*", "3", "<", "1000", ")", "or", "(", "V", "*", "5", "<", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntot = 0\nfor num in range(1000):\n  if (num * 3 < 1000) or (num * 5 < 1000):\n\ttot = tot + num\nprint num\n\t", "fingerprint": [[26294, 23], [40735, 2], [26294, 15], [16167, 6], [25, 39], [11483, 12], [43872, 18], [47922, 26], [10125, 38], [28310, 36], [29414, 25], [24087, 21], [29324, 17], [11879, 31], [23495, 10], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26294, 89751, 29324, 43872, 60626, 85585, 24087, 81584, 26294, 89753, 29414, 47922, 60626, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "160": {"top_similar": [[160, 1.0], [341, 0.8636363636363636], [445, 0.64]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "    ", "V", "=", "V", "+", "V", ";", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0;\nfor num in range(10):\n  if ((num%3)==0 or (num%5)==0):\n    sum=sum+num;\nprint sum", "fingerprint": [[25976, 9], [28331, 39], [25, 43], [23495, 32], [58693, 37], [42312, 23], [19271, 27], [41675, 2], [16167, 7], [8083, 35], [11483, 13], [23690, 21], [10619, 4], [26289, 25], [16752, 15], [19181, 19], [23495, 11], [23690, 29], [10125, 42], [10304, 34], [24884, 16]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54903, 10304, 8083, 90404, 58693, 89729, 28331, 90275, 52875, 10125, 25, 1169], "class": "3"}, "161": {"top_similar": [[161, 1.0], [294, 0.3333333333333333], [6, 0.2857142857142857]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "3", ",", "5", "\n", "print", "1", "%", "5", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10): 3,5 \n  \nprint 1 % 5 ", "fingerprint": [[33440, 9], [23511, 6], [11269, 11], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23511, 55636, 43268, 33440, 46825, 11269, 51489, 38903], "class": "1"}, "162": {"top_similar": [[162, 1.0], [231, 0.5714285714285714], [52, 0.4090909090909091]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  \t", "if", "V", "%", "5", "==", "0", ":", "V", "+=", "V", "\n", "elif", "V", "%", "3", "==", "0", ":", "V", "+=", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nout = 0\nfor num in range(1000):\n  \tif num%5==0: out += num\n\telif num%3==0: out += num", "fingerprint": [[10259, 24], [85010, 22], [40735, 2], [18189, 14], [41759, 19], [16167, 6], [19201, 27], [10619, 3], [19291, 16], [41759, 30], [23495, 10], [26201, 8], [6039, 25], [11573, 12], [56696, 20]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54932, 11573, 65204, 18189, 89528, 19291, 47990, 63702, 41759, 56696, 90989, 85010, 89327, 10259, 6039, 89526, 19201, 43940, 63702, 41759, 56696, 90989, 85005], "class": "6"}, "163": {"top_similar": [[100, 1.0], [163, 1.0], [109, 0.7272727272727273]], "tokens": ["V", "(", "[", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", "]", ")", ""], "source": "sum([x for x in range(1000) if x%3 == 0 or x%5 == 0])", "fingerprint": [[42344, 16], [22679, 10], [19201, 13], [16167, 6], [19291, 19], [26201, 8], [25919, 1], [22237, 4], [18189, 11]], "k_gram_hashes": [89675, 25919, 72865, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63711, 42131], "class": "6"}, "164": {"top_similar": [[164, 1.0], [12, 0.8125], [169, 0.8125]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ncount = 0\n\nfor num in range(10):\n  if num % 5 == 0 or num % 3 == 0:\n\tcount += num", "fingerprint": [[41720, 25], [25976, 8], [19201, 22], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19291, 16], [42344, 19], [23495, 10], [78971, 28], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85005, 89100], "class": "6"}, "165": {"top_similar": [[165, 1.0], [39, 0.5833333333333334], [167, 0.5789473684210527]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ns = 0\n\nfor num in range(10):\n\tif (num%3 == 0) or (num%5 == 0):\n\t\ts = s+num", "fingerprint": [[25976, 8], [11843, 12], [40735, 2], [16167, 6], [19291, 25], [11654, 31], [19201, 17], [41022, 28], [24087, 21], [41035, 20], [23495, 10], [26289, 23], [16784, 14], [23495, 29], [58693, 34], [10619, 3], [28305, 36]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77322, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54933, 11654, 68833, 90404, 58693, 89729, 28305, 89100], "class": "3"}, "166": {"top_similar": [[166, 1.0], [57, 0.5652173913043478], [68, 0.5555555555555556]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "(", "V", "%", "5", "==", "0", ")", "or", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\n\nfor num in range(10):\n  a = 0\n  if (num%5==0)or(num%3==0):\n \ta = a + num\n  print a", "fingerprint": [[11519, 8], [19201, 25], [57605, 11], [10497, 13], [23495, 6], [10150, 38], [12104, 31], [25976, 4], [28310, 36], [41022, 28], [40733, 12], [19291, 17], [41035, 20], [24087, 21], [26289, 23], [16784, 14], [23495, 29], [58693, 34], [1169, 39], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10497, 16784, 26289, 89528, 19291, 47990, 63686, 41035, 24087, 81584, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52605], "class": "3"}, "167": {"top_similar": [[167, 1.0], [233, 0.8], [57, 0.6111111111111112]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if (num%3 == 0) or (num%5 == 0):\n  \tprint num", "fingerprint": [[41035, 16], [26289, 19], [16784, 10], [24087, 17], [19201, 13], [23495, 6], [19291, 21], [25976, 4], [11590, 27], [11483, 8], [23495, 25], [41022, 24], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11590, 65969, 52605, 89100], "class": "3"}, "168": {"top_similar": [[168, 1.0], [167, 0.5625], [233, 0.5294117647058824]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "UNK", "==", "0", ")", ":", "\n", "  \t", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\t\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if (num%3==0 or num%6==0):\n  \tprint num\n  ", "fingerprint": [[16784, 10], [19201, 13], [23495, 6], [25976, 4], [11590, 25], [20191, 19], [11483, 8], [42344, 16], [52610, 27], [41022, 22], [16167, 2], [23495, 23]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89548, 20191, 88490, 63686, 41022, 23495, 54932, 11590, 65969, 52610, 89325, 10125], "class": "3"}, "169": {"top_similar": [[12, 1.0], [169, 1.0], [52, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\n\nprint sum\n\n  ", "fingerprint": [[25976, 8], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "170": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ni = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\ti += num\nprint i", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "171": {"top_similar": [[171, 1.0], [332, 1.0], [261, 0.7619047619047619]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntally=0\nfor num in range(10):\n  if (num % 3)==0 or (num % 5)==0:\n\ttally = tally + num\nprint tally", "fingerprint": [[25976, 8], [41720, 29], [40735, 2], [28310, 36], [23690, 19], [16167, 6], [25, 39], [11483, 12], [42312, 21], [10125, 38], [19181, 17], [23690, 27], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [19271, 25], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "172": {"top_similar": [[172, 1.0], [253, 0.8076923076923077], [24, 0.75]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "UNK", ":", "\n", "\t", "UNK", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(10):\n  if x % 3 == 0:\n\tx = x + num\n  elif x % 5 == 0:\n\tx = x + num\n  else:\n\tcontinue\n\t\nprint x\n  ", "fingerprint": [[19291, 32], [28310, 26], [58693, 24], [41720, 19], [134, 29], [19201, 16], [11483, 12], [10168, 44], [1962, 45], [58693, 40], [23495, 10], [16167, 6], [6039, 30], [11879, 21], [25, 52], [28310, 42], [10619, 3], [25976, 8], [18189, 14], [10127, 28], [41720, 35], [11879, 37], [40735, 2], [10125, 51], [11878, 48]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10168, 1962, 88295, 54938, 11878, 78890, 87300, 10125, 25, 1169, 52610], "class": "3"}, "173": {"top_similar": [[173, 1.0], [111, 0.2549019607843137], [247, 0.22641509433962265]], "tokens": ["UNK", "V", "(", "V", ",", "V", ")", ":", "\n", "  ", "V", "=", "[", "]", "\n", "print", "V", "\n", "print", "V", "\n", "for", "V", "in", "V", ":", "\n", "  \t", "V", "=", "V", "%", "V", "\n", "print", "V", "\n", "if", "V", "==", "0", ":", "\n", "\t  ", "UNK", "V", "\n", "", "", "UNK", "V", "\n", "", "V", "=", "(", ")", "\n", "V", "=", "(", "3", ",", "5", ")", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "(", "V", ",", "V", ")", ":", "\n", "\t", "V", ".", "V", "(", "V", ")", "\n", "", "", "print", "V", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\ndef is_divisible(num, divisors):\n  ar = []\n  print num\n  print divisors\n  for d in divisors:\n  \tv = num%d\n\tprint v\n\tif v==0:\n\t  return True\n  return False\n\nnums = ()\ndivisors = (3,5)\nfor num in range(1000):\n  if is_divisible(num, divisors): \n\tnums.add(num)\n\t\nprint sum(nums)", "fingerprint": [[11879, 84], [10169, 51], [11519, 8], [25, 93], [10125, 46], [10529, 36], [33446, 62], [26296, 78], [10125, 92], [41720, 40], [58311, 11], [20210, 31], [10619, 20], [18211, 37], [11609, 26], [11294, 33], [16182, 23], [1169, 94], [22500, 91], [12133, 57], [11483, 74], [22510, 64], [38442, 87], [18192, 76], [34391, 4], [34391, 80], [11294, 14], [10438, 42], [23495, 82], [16167, 68], [25261, 60], [58689, 29], [24800, 55], [10619, 65], [23495, 6], [14129, 43], [26201, 70], [1979, 48], [11294, 17], [26291, 89], [26296, 2], [43, 47], [22544, 56], [23495, 72], [2008, 52]], "k_gram_hashes": [89067, 89684, 26296, 89864, 34391, 89622, 23495, 54930, 11519, 62758, 90395, 58311, 72500, 73150, 11294, 52610, 89350, 11294, 52610, 89335, 10619, 22237, 89459, 16182, 90320, 54932, 11609, 66808, 90404, 58689, 89549, 20210, 89350, 11294, 52610, 89333, 10529, 18211, 90515, 63702, 41720, 54906, 10438, 14129, 89060, 89325, 10125, 43, 1979, 89060, 89325, 10169, 2008, 90372, 57251, 24800, 22544, 12133, 90372, 57261, 25261, 43268, 33446, 47075, 22510, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18192, 89684, 26296, 89864, 34391, 89622, 23495, 54938, 11879, 78948, 89954, 38442, 89684, 26291, 89600, 22500, 10125, 25, 1169, 52617, 89684, 26291], "class": "4"}, "174": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", "or", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na=0\nfor num in range(1000):\n  if (num % 5 == 0) or (num % 3 == 0):\n\ta=a+num\n\nprint a", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [11483, 12], [11879, 31], [25, 39], [10125, 38], [41022, 28], [19291, 17], [41035, 20], [24087, 21], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3], [19201, 25]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41035, 24087, 81584, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "175": {"top_similar": [[175, 1.0], [140, 0.75], [368, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "+=", "V", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n    sum += num\n  print sum", "fingerprint": [[1169, 29], [26201, 4], [19201, 12], [41720, 21], [23495, 6], [8096, 24], [85010, 26], [42344, 15], [10150, 28], [11483, 8], [10304, 23], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8096, 90989, 85010, 89325, 10150, 1169, 52605], "class": "6"}, "176": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n\n  print num", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "177": {"top_similar": [[177, 1.0], [77, 0.46153846153846156], [272, 0.36363636363636365]], "tokens": ["for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "+", "V", "*", "3", "\n", "", "print", "V", ""], "source": "for x in range(334):\n  a =+ x*3\n\nprint a", "fingerprint": [[26246, 4], [11519, 8], [23495, 6], [57329, 11], [10150, 16], [28319, 12], [29300, 14], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90373, 57329, 28319, 89751, 29300, 42750, 10150, 1169], "class": "4"}, "178": {"top_similar": [[178, 1.0], [331, 0.7], [339, 0.42857142857142855]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "not", "V", "%", "3", "or", "not", "V", "%", "5", ":", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nyht = 0\nfor num in range(1000):\n  if not num % 3 or not num % 5: yht += num\nprint yht", "fingerprint": [[19287, 22], [40735, 2], [19210, 17], [47834, 23], [10150, 28], [16167, 6], [11483, 12], [44359, 18], [85010, 26], [70839, 20], [56696, 24], [23495, 10], [17774, 14], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61144, 17774, 70839, 89526, 19210, 44359, 82574, 70839, 89528, 19287, 47834, 56696, 90989, 85010, 89325, 10150, 1169], "class": "6"}, "179": {"top_similar": [[179, 1.0], [96, 0.7777777777777778], [151, 0.7368421052631579]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "UNK", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\n\nfor num in range(1000):\n  if (num%5 is 0):\n\tsum=sum+num\nprint sum", "fingerprint": [[23495, 21], [40735, 2], [25, 31], [41022, 20], [16167, 6], [11483, 12], [11879, 23], [28310, 28], [58693, 26], [23495, 10], [19303, 17], [10125, 30], [16784, 14], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19303, 48530, 87986, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "180": {"top_similar": [[180, 1.0], [3, 0.4], [73, 0.3157894736842105]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "0", "==", "V", "%", "3", "or", "0", "==", "V", "%", "5", ":", "\n", "\t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if 0 == num % 3 or 0 == num % 5:\n\tprint num", "fingerprint": [[17131, 10], [26201, 4], [23495, 6], [41939, 17], [11860, 23], [19287, 20], [19210, 14], [11483, 8], [41939, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61130, 17131, 41939, 64764, 89526, 19210, 44345, 81931, 41939, 64764, 89528, 19287, 47795, 54938, 11860, 78119, 52605, 89100], "class": "4"}, "181": {"top_similar": [[181, 1.0], [201, 0.7222222222222222], [88, 0.4782608695652174]], "tokens": ["for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  \t", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t\t", "V", "=", "0", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(6):\n  \tif num % 3 == 0 or num % 5 == 0:\n\t\tn=0\n\t\tn=n+num\n\t\tprint n\t\t\n\t", "fingerprint": [[58693, 30], [26246, 4], [11294, 34], [19201, 12], [41720, 21], [23495, 6], [40769, 27], [11573, 8], [28310, 32], [11654, 23], [42344, 15], [57605, 26], [12133, 28], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89683, 26246, 87597, 23495, 54932, 11573, 65204, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54933, 11654, 68833, 90380, 57605, 40769, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "182": {"top_similar": [[182, 1.0], [6, 0.6], [18, 0.6]], "tokens": ["for", "V", "in", "V", "(", "0", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(0):\n  print num\n  \n  \n  \n    \n\n", "fingerprint": [[23495, 6], [25211, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89660, 25211, 41022, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "183": {"top_similar": [[183, 1.0], [24, 0.7333333333333333], [253, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nmultiple_of_three = 0\nmultiple_of_five = 0\nfor num in range(10):\n  if num % 3 == 0: \n\tmultiple_of_three = multiple_of_three + num\n  elif num % 5 == 0:\n\tmultiple_of_five = multiple_of_five + num\n#  if num % 3 = 0 multiple_of_three = multiple_of_three + num\n#  elif num % 5 = 0 multiple_of_five = multiple_of_five + num\n\ntotal = multiple_of_three + multiple_of_five\nprint total\n#print ('total is ' (multiple_of_three + multiple_of_five));\n  ", "fingerprint": [[40735, 6], [28310, 54], [10127, 32], [23495, 14], [58693, 52], [41720, 23], [58693, 28], [11294, 56], [19201, 20], [44, 49], [19291, 36], [58693, 44], [12133, 3], [2008, 50], [134, 33], [6039, 34], [28310, 46], [10619, 7], [10125, 48], [16167, 10], [25976, 12], [11879, 41], [40769, 2], [41720, 39], [11879, 25], [11483, 16], [18189, 18], [28310, 30]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90404, 58693, 89729, 28310, 89350, 11294, 52610], "class": "6"}, "184": {"top_similar": [[184, 1.0], [241, 0.875], [430, 0.875]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0:\n  \tsum += num\n\nprint sum", "fingerprint": [[41720, 19], [40735, 2], [18189, 14], [85010, 24], [16167, 6], [11483, 12], [19201, 16], [25, 27], [23495, 10], [66821, 22], [11609, 21], [26201, 8], [10619, 3], [10125, 26]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "185": {"top_similar": [[185, 1.0], [259, 0.7142857142857143], [281, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx=0\nfor num in range(10):  \n  s= num % 3\n  x=x+s\n  print x", "fingerprint": [[25976, 8], [28310, 23], [40735, 2], [16167, 6], [58689, 15], [11519, 12], [58693, 21], [23495, 10], [19175, 17], [11294, 25], [12133, 19], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52605], "class": "7"}, "186": {"top_similar": [[186, 1.0], [442, 0.8333333333333334], [78, 0.3902439024390244]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "\n", "V", "=", "3", "*", "V", "\n", "V", "=", "5", "*", "V", "\n", "if", "(", "V", "<", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "<", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "V", "+", "V", "\n", "print", "V", ""], "source": "for num in range(1000):\n  print num\n  x = 3*num\n  y = 5*num\n  \n  if (x<1000):\n\txs = xs+x\n\t\n  if (y<1000):\n\tys = ys+y\n\t\n\t\nerg = xs+ys\n\nprint x", "fingerprint": [[10125, 55], [26309, 42], [12133, 12], [12133, 18], [28310, 37], [2008, 57], [30335, 22], [11879, 48], [60626, 28], [58693, 59], [10133, 39], [58693, 51], [23495, 30], [16784, 25], [16167, 2], [10497, 24], [60626, 44], [44, 56], [30335, 16], [52610, 10], [26309, 26], [372, 40], [28310, 53], [11500, 8], [23495, 46], [11879, 32], [26201, 4], [16784, 41], [23495, 6], [43199, 15], [47249, 21], [28310, 61], [58693, 35]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52610, 89369, 12133, 90381, 57659, 43199, 30335, 89369, 12133, 90383, 57749, 47249, 30335, 89333, 10497, 16784, 26309, 90447, 60626, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26309, 90447, 60626, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90404, 58693, 89729, 28310, 89350, 11294], "class": "4"}, "187": {"top_similar": [[187, 1.0], [52, 0.7777777777777778], [62, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "UNK", "0", "or", "V", "%", "5", "UNK", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num%3 is 0 or num%5 is 0:\n\tsum+=num\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19213, 16], [41720, 25], [42344, 19], [25, 33], [23495, 10], [19303, 22], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [10125, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19213, 44480, 88015, 42344, 82989, 89528, 19303, 48530, 88002, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "188": {"top_similar": [[188, 1.0], [52, 0.9411764705882353], [62, 0.9411764705882353]], "tokens": ["UNK", "V", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nimport math\nb = 0\nfor num in range(1000):\n  if num% 3 == 0 or num % 5 == 0:\n\tb+=num\nprint b", "fingerprint": [[26201, 11], [10125, 35], [25, 36], [41720, 28], [40735, 5], [19291, 25], [23495, 13], [10619, 6], [18189, 17], [11879, 30], [19201, 19], [85010, 33], [11483, 15], [78971, 31], [12133, 2], [42344, 22], [16167, 9]], "k_gram_hashes": [89060, 89369, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "189": {"top_similar": [[149, 1.0], [189, 1.0], [43, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  print num", "fingerprint": [[40735, 2], [16167, 6], [11500, 12], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52605], "class": "4"}, "190": {"top_similar": [[190, 1.0], [9, 0.6060606060606061], [7, 0.5588235294117647]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "print", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nssum = 0\n\nfor num in range(10):\n  if (num % 3 == 0):\n\tprint num\n\tssum = ssum + num\n\n  if (num % 5 == 0):\n\tprint num\n\tssum = num + num\n  print ssum\n\t\nprint ssum", "fingerprint": [[11860, 44], [16784, 35], [19201, 17], [1169, 55], [16784, 14], [10150, 58], [28310, 31], [11860, 23], [372, 34], [11483, 12], [19291, 38], [52610, 46], [28310, 52], [23495, 21], [40735, 2], [10133, 33], [16167, 6], [58693, 50], [23495, 10], [23495, 42], [12133, 27], [10619, 3], [25976, 8], [12133, 48], [41022, 20], [41022, 41], [52610, 25], [10150, 54], [58693, 29]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11860, 78119, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11860, 78119, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52610, 89325, 10150, 1169], "class": "7"}, "191": {"top_similar": [[191, 1.0], [69, 0.4583333333333333], [219, 0.4230769230769231]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "UNK", "if", "V", "%", "3", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "V", "<", "V", "\n", "V", "=", "V", "+", "1", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx=0\nsum=0\nfor num in range(1000):\n if x % 3 == 0: \n \tsum=sum+x\n sum<num\n x=x+1\n\nprint sum", "fingerprint": [[40769, 2], [12104, 25], [40735, 6], [12133, 37], [41720, 23], [10150, 43], [58693, 39], [23495, 14], [26201, 12], [12068, 16], [60710, 35], [10619, 7], [10169, 32], [18189, 18], [2009, 33], [16167, 10], [27185, 41], [58693, 28], [28310, 30], [19201, 20], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54943, 12068, 87479, 18189, 89526, 19201, 43940, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10169, 2009, 90449, 60710, 89369, 12133, 90404, 58693, 89704, 27185, 38700, 10150, 1169], "class": "4"}, "192": {"top_similar": [[192, 1.0], [145, 0.75], [65, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "1000", "%", "5", ";", "1000", "%", "3", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#prinx\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):1000%5;1000%3", "fingerprint": [[19286, 9], [26201, 4], [16167, 2], [23532, 6]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23532, 56574, 85478, 19286, 47787, 54549, 85476], "class": "1"}, "193": {"top_similar": [[193, 1.0], [277, 0.5789473684210527], [380, 0.5789473684210527]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n#\t  c\n\na=0\nc=0\nfor a in range(0, 1000):\n  if a%3:\n\tc=c+a\nprint c\n  ", "fingerprint": [[40769, 2], [40735, 6], [28310, 30], [11483, 18], [25216, 12], [19197, 22], [10619, 7], [23495, 16], [25, 33], [16167, 10], [34301, 14], [18189, 20], [11879, 25], [58693, 28], [10125, 32], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41262, 34301, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19197, 43745, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "194": {"top_similar": [[194, 1.0], [6, 0.5], [18, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", "%", "3", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor numx in range(1000%3):\n  print numx\n  ", "fingerprint": [[26199, 4], [19181, 6], [23495, 8], [16167, 2], [11500, 10]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26199, 85476, 19181, 43047, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "195": {"top_similar": [[195, 1.0], [125, 0.8611111111111112], [299, 0.5833333333333334]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "1", "\n", "if", "V", "==", "3", ":", "\n", "        ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "V", "=", "V", "+", "1", "\n", "print", "V", "\n", "if", "V", "==", "5", ":", "\n", "UNK", "V", "=", "V", "\n", "V", "=", "V", "-", "V", "\n", "V", "=", "0", "\n", "", "", "if", "V", "==", "5", ":", "\n", "        ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "", "", "print", "V", "+", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nx=0\ny=0\nt1=0\nt2=0\na=0\nb=0\nz=0\nab=0\nfor num in range(9):\n  x=x+1\n  y=y+1\n  if x==3:\n        a=num+1\n        t1=t1+a\n        x=0\n        z=z+1\n        print t1\n        if z==5:\n          ab=t1\n          t1=t1-ab\n          z=0\n  if y==5:\n        b=num+1\n        t2=t2+b\n        y=0\nprint t1+t2\n  \n", "fingerprint": [[27185, 51], [1169, 133], [28310, 70], [12133, 76], [404, 108], [47795, 89], [27185, 45], [40735, 30], [40769, 75], [12133, 66], [58693, 123], [26246, 36], [11519, 40], [43745, 57], [18211, 54], [12133, 11], [58685, 94], [8, 107], [10349, 59], [40769, 18], [12133, 102], [12133, 15], [58693, 117], [10108, 115], [28310, 125], [27185, 119], [12133, 121], [10619, 31], [10125, 106], [27185, 64], [12133, 72], [12133, 3], [58693, 62], [10529, 53], [58693, 68], [12133, 127], [10125, 131], [18211, 86], [18211, 109], [40769, 26], [40725, 130], [23495, 38], [12133, 7], [12133, 47], [40769, 6], [12133, 27], [40769, 22], [11294, 82], [12104, 91], [16167, 34], [40769, 2], [10529, 85], [47795, 112], [25, 132], [58693, 43], [58693, 49], [10108, 60], [40769, 14], [12133, 19], [58693, 78], [40725, 105], [10349, 114], [12133, 96], [40769, 10], [27185, 80], [12133, 23], [58695, 98], [32360, 100]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89704, 27185, 38708, 10529, 18211, 90516, 63747, 43745, 54904, 10349, 10108, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40769, 12133, 90404, 58693, 89704, 27185, 38725, 11294, 52610, 89333, 10529, 18211, 90518, 63837, 47795, 54943, 12104, 89083, 90404, 58685, 89369, 12133, 90404, 58695, 89819, 32360, 89369, 12133, 90380, 57605, 40725, 10125, 8, 404, 18211, 90518, 63837, 47795, 54904, 10349, 10108, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40725, 10125, 25, 1169, 52618, 89729, 28310], "class": "1"}, "196": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": ["UNK", "V", ""], "source": "import os", "fingerprint": [], "k_gram_hashes": [], "class": "1"}, "197": {"top_similar": [[197, 1.0], [10, 0.5714285714285714], [53, 0.5714285714285714]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "10", "%", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n 10 % 3 \n  \n \n  ", "fingerprint": [[19175, 11], [23495, 6], [12097, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12097, 88749, 75351, 19175, 42750], "class": "1"}, "198": {"top_similar": [[60, 1.0], [198, 1.0], [74, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if num % 3 == 0:\n\tsum += num\n  \n  if num % 5 == 0:\n\tsum += num\n\t\nprint sum\n", "fingerprint": [[11879, 35], [19291, 30], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [404, 27], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [78971, 36], [26201, 8], [25, 41], [11879, 21], [18189, 14], [78971, 22], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "4"}, "199": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000): \n  if (num%3==0) or (num%5==0):\n\tsum = sum + num \nprint sum ", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "200": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": [""], "source": "# In Python, the code\n#\n#     for letter in ['x % 3', 'x % 5']:\n#         print x\n#\n# prints:\n# for num in range(1000):\n  \n \n  ", "fingerprint": [], "k_gram_hashes": [], "class": "1"}, "201": {"top_similar": [[201, 1.0], [181, 0.7222222222222222], [257, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  \t", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nn=0\nfor num in range(6):\n  \tif num % 3 == 0 or num % 5 == 0:\n\t\tn=n+nu\n\t\tprint n\t\t\n\t", "fingerprint": [[58693, 30], [11294, 34], [40735, 2], [18189, 14], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [11654, 27], [11573, 12], [10619, 3], [19291, 22], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54932, 11573, 65204, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "202": {"top_similar": [[202, 1.0], [358, 1.0], [438, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal = 0\nfor num in range(1000):\n  if (num%3==0) or (num%5==0):\n\ttotal += num\n  \n  \nprint total\n  \t", "fingerprint": [[78971, 32], [10125, 36], [40735, 2], [85010, 34], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "203": {"top_similar": [[203, 1.0], [240, 0.5714285714285714], [267, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "5", "\n", "V", "=", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  a = 5\n  b = 3", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [12133, 13], [57740, 11], [46844, 12], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90383, 57740, 46844, 12133, 90381, 57645], "class": "4"}, "204": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if (num % 3 == 0) or (num % 5 == 0):\n\tsum = sum + num\nprint sum", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "205": {"top_similar": [[205, 1.0], [92, 0.5652173913043478], [185, 0.5555555555555556]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "print", "V", "\n", "print", "V", "\n", "print", "UNK", "\n", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  foo = num % 3\n  bar = num % 5\n  print foo\n  print bar\n  print \"----\"\n  foobar = bar + foo\n\nprint foobar", "fingerprint": [[19265, 19], [12133, 30], [28310, 34], [11519, 8], [11294, 21], [10150, 36], [23495, 6], [19175, 13], [58689, 17], [25976, 4], [12133, 15], [58693, 32], [58689, 11], [11294, 24], [16167, 2], [11293, 27]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46825, 11294, 52610, 89350, 11294, 52610, 89350, 11293, 52565, 87344, 12133, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "1"}, "206": {"top_similar": [[206, 1.0], [12, 0.65], [169, 0.65]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  sum = 0\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\n\nprint sum\n\n  ", "fingerprint": [[11519, 8], [57605, 11], [18189, 14], [10529, 13], [23495, 6], [42344, 19], [10125, 32], [25976, 4], [41720, 25], [40733, 12], [19291, 22], [11879, 27], [85010, 30], [78971, 28], [19201, 16], [16167, 2], [25, 33]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10529, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "207": {"top_similar": [[207, 1.0], [349, 0.6129032258064516], [24, 0.5625]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  tree = num%3\n  pip = num%5\n  if tree == 0:\n\tsum = sum + tree\n  elif pip == 0:\n\tsum = sum + pip\n\t\nprint sum", "fingerprint": [[134, 39], [58693, 48], [19265, 23], [11519, 12], [28310, 50], [6061, 40], [58693, 34], [26201, 8], [10529, 25], [11879, 31], [25, 53], [58689, 21], [41720, 29], [23495, 10], [16167, 6], [58689, 15], [10127, 38], [19175, 17], [41720, 43], [10619, 3], [11879, 45], [12133, 19], [28310, 36], [10125, 52], [40735, 2], [18211, 26]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6061, 90515, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "208": {"top_similar": [[10, 1.0], [53, 1.0], [208, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "%", "3", "\n", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10): \n  x%3\n  print x\n  \n  ", "fingerprint": [[11519, 8], [23495, 6], [25976, 4], [16167, 2], [19175, 11], [11294, 13]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62739, 89526, 19175, 42775, 11294, 52610, 89325], "class": "1"}, "209": {"top_similar": [[209, 1.0], [252, 0.18181818181818182], [304, 0.13043478260869565]], "tokens": ["V", "=", "0", "\n", "UNK", "V", "<", "UNK", ":", "\n", "\t", "print", "V", "\n", "V", "=", "V", "+", "1", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\n\nwhile x < 100:\n\tprint x\n\tx = x+1", "fingerprint": [[12104, 3], [52610, 11], [12133, 13], [54938, 8], [60687, 6], [58693, 15], [11860, 9], [40768, 2]], "k_gram_hashes": [90380, 57605, 40768, 12104, 89084, 90448, 60687, 88295, 54938, 11860, 78119, 52610, 89369, 12133, 90404, 58693, 89704, 27180], "class": "1"}, "210": {"top_similar": [[210, 1.0], [76, 0.6666666666666666], [6, 0.5]], "tokens": ["for", "V", "in", "V", "(", "5", ",", "10", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(5,10):\n  print num", "fingerprint": [[25351, 4], [11500, 10], [23495, 8], [34076, 6], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89663, 25351, 47332, 34076, 75447, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "211": {"top_similar": [[211, 1.0], [28, 0.9047619047619048], [39, 0.8260869565217391]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nnum = 0\nsoma = 0\nfor num in range(10):\n  if (num%3 == 0) or (num%5 == 0):\n\tsoma += num\n\t\nprint soma", "fingerprint": [[40769, 2], [19201, 21], [40735, 6], [26289, 27], [41022, 32], [23495, 33], [11879, 35], [23495, 14], [25, 41], [11483, 16], [10619, 7], [85010, 38], [78971, 36], [16167, 10], [25976, 12], [41035, 24], [24087, 25], [10125, 40], [16784, 18], [19291, 29], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "212": {"top_similar": [[212, 1.0], [52, 0.7222222222222222], [62, 0.7222222222222222]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\ts += num;\nprint s;", "fingerprint": [[25, 30], [26201, 4], [19201, 12], [78971, 24], [41720, 21], [23495, 6], [52875, 28], [11879, 23], [85031, 26], [42344, 15], [11483, 8], [18189, 10], [19291, 18], [16167, 2], [10125, 29]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85031, 90275, 52875, 10125, 25, 1169, 52631], "class": "6"}, "213": {"top_similar": [[213, 1.0], [143, 0.9047619047619048], [217, 0.7083333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ")", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nres = 0\nfor num in range(1000):\n  if ((num % 3 == 0) or (num % 5 == 0)):\n    res = res + num\nprint res", "fingerprint": [[10304, 33], [19291, 26], [58693, 36], [24884, 15], [40735, 2], [24087, 22], [16167, 6], [28310, 38], [11483, 12], [8083, 34], [25, 41], [19201, 18], [26289, 24], [23495, 10], [41035, 21], [22797, 30], [16752, 14], [26201, 8], [10125, 40], [10619, 3], [41006, 29]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41006, 22797, 23495, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "214": {"top_similar": [[214, 1.0], [134, 0.4857142857142857], [132, 0.42105263157894735]], "tokens": ["V", "=", "[", "]", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", ".", "V", "(", "V", ")", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", ".", "V", "(", "V", ")", "\n", "", "UNK", ":", "\n", "\t  ", "UNK", "\n", "", "", "print", "V", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nmultiples = []\n\nfor num in range(1000):\n\tif num % 3 == 0:\n\t  #print \"%d is divisible by 3\" % num\n\t  multiples.append(num)\n\t  \n\telif num % 5 == 0:\n\t  #print \"%d is divisible by 5\" % num\n\t  multiples.append(num)\n\t\n\telse:\n\t  #print \"Pass, %d\" % num\n\t  pass\n\nprint sum(multiples)", "fingerprint": [[10438, 51], [11843, 13], [26291, 27], [38442, 25], [16167, 7], [1169, 56], [6039, 32], [10439, 22], [10125, 54], [14148, 40], [10127, 30], [58311, 1], [41720, 37], [10439, 39], [10619, 4], [19291, 34], [26201, 9], [41720, 20], [22500, 29], [18189, 15], [22500, 46], [19201, 17], [10168, 47], [23495, 11], [38442, 42], [1962, 48], [134, 31], [14148, 23], [26291, 44], [25, 55]], "k_gram_hashes": [90395, 58311, 72500, 73135, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14148, 89954, 38442, 89684, 26291, 89600, 22500, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14148, 89954, 38442, 89684, 26291, 89600, 22500, 10168, 1962, 88295, 54906, 10438, 14090, 87300, 10125, 25, 1169, 52617, 89684, 26291], "class": "6"}, "215": {"top_similar": [[215, 1.0], [14, 0.6923076923076923], [141, 0.6923076923076923]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "V", "=", "V", "+", "1", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnum = 0\nfor num in range(1000):\n  mult_sum = 0\n  if (num%3 == 0) or (num%5 == 0):\n\tmult_sum = mult_sum + num \n\tnum = num + 1 \n\t\nprint mult_sum \n  \n \t", "fingerprint": [[19201, 21], [11879, 35], [10497, 17], [11519, 12], [28310, 40], [25, 49], [58693, 38], [16167, 6], [24087, 25], [23495, 10], [58693, 44], [10125, 48], [57605, 15], [41035, 24], [26201, 8], [10619, 3], [40733, 16], [19291, 29], [12133, 42], [41022, 32], [23495, 33], [16784, 18], [40735, 2], [26289, 27], [27185, 46]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10497, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89369, 12133, 90404, 58693, 89704, 27185, 38700, 10125, 25, 1169, 52610], "class": "6"}, "216": {"top_similar": [[216, 1.0], [419, 0.8], [3, 0.6]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "V", "%", "5", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n\tnum % 5", "fingerprint": [[23495, 6], [11879, 8], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11879, 78939, 89528, 19260], "class": "4"}, "217": {"top_similar": [[217, 1.0], [14, 0.8571428571428571], [104, 0.8571428571428571]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", "or", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n    \ns=0\nfor num in range(1000):\n  if (num%5==0) or (num%3==0):\n    s=s+num \nprint s\n", "fingerprint": [[10304, 31], [40735, 2], [28310, 36], [16167, 6], [11483, 12], [25, 39], [10125, 38], [41022, 28], [19291, 17], [41035, 20], [24087, 21], [23495, 10], [26289, 23], [8083, 32], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3], [19201, 25]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41035, 24087, 81584, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "218": {"top_similar": [[218, 1.0], [172, 0.3617021276595745], [253, 0.35555555555555557]], "tokens": ["V", "=", "V", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t\t", "if", "V", "==", "V", ":", "\n", "UNK", "V", "=", "V", "\n", "", "UNK", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "UNK", "if", "V", "==", "V", ":", "\n", "UNK", "V", "=", "V", "\n", "", "UNK", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nsum = None\n\nfor num in range(1000):\n\tif num % 3 == 0:\n\t\tif sum == None:\n\t  \t\tsum = num\n\t \telse:\n\t\t\tsum = sum + num\n\telif num % 5 == 0:\n\t  \tif sum == None:\n\t\t  \tsum = num\n\t\telse:\n\t\t  \tsum = num + sum\n\t\t\t\nprint sum", "fingerprint": [[58693, 73], [58685, 1], [2, 45], [12104, 61], [28310, 75], [41720, 19], [11843, 12], [19201, 16], [12068, 54], [19291, 49], [10168, 66], [12104, 70], [11618, 21], [58693, 40], [54943, 60], [10125, 44], [10125, 77], [0, 78], [16167, 6], [58685, 31], [6039, 47], [12104, 28], [1962, 67], [26201, 8], [28310, 42], [10619, 3], [41720, 52], [18211, 56], [18189, 14], [18211, 23], [64782, 25], [58685, 64], [54943, 27], [64782, 58], [23495, 10], [10168, 33], [134, 46], [12104, 37], [1962, 34]], "k_gram_hashes": [90404, 58685, 89335, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54933, 11618, 67229, 18211, 90539, 64782, 90320, 54943, 12104, 89083, 90404, 58685, 89325, 10168, 1962, 88295, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 2, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54943, 12068, 87479, 18211, 90539, 64782, 90320, 54943, 12104, 89083, 90404, 58685, 89325, 10168, 1962, 88295, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 0, 25, 1169], "class": "6"}, "219": {"top_similar": [[219, 1.0], [61, 0.8823529411764706], [256, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "answer=0\n\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n      answer = answer+num\n\nprint answer", "fingerprint": [[58693, 30], [25, 35], [10125, 34], [40735, 2], [18189, 14], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [12104, 27], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "220": {"top_similar": [[220, 1.0], [159, 0.4], [41, 0.34782608695652173]], "tokens": ["V", "=", "[", "]", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "*", "3", "<", "1000", ":", "\n", "\t", "V", ".", "V", "(", "V", "*", "3", ")", "\n", "", "if", "V", "*", "5", "<", "1000", ":", "\n", "\t", "V", ".", "V", "(", "V", "*", "5", ")", "\n", "", "", "print", "V", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nlessThan1000 = []\nfor num in range(1000):\n  if num * 3 < 1000:\n\tlessThan1000.append(num * 3)\n  if num * 5 < 1000: \n\tlessThan10000.append(num * 5)\n  \nprint sum(lessThan1000)", "fingerprint": [[58311, 1], [18194, 15], [22500, 50], [29306, 29], [38442, 25], [11483, 13], [54938, 40], [18194, 34], [16167, 7], [26294, 46], [29324, 17], [10619, 4], [11879, 22], [29396, 48], [26201, 9], [29414, 36], [54938, 21], [26294, 27], [1169, 53], [38442, 44], [25, 52], [23495, 11], [11879, 41], [10133, 32], [47922, 37], [404, 33], [43872, 18], [10125, 51], [22500, 31]], "k_gram_hashes": [90395, 58311, 72500, 73135, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18194, 89751, 29324, 43872, 60642, 86270, 54938, 11879, 78948, 89954, 38442, 89684, 26294, 89751, 29306, 43025, 22500, 10133, 404, 18194, 89753, 29414, 47922, 60642, 86270, 54938, 11879, 78948, 89954, 38442, 89684, 26294, 89753, 29396, 47075, 22500, 10125, 25, 1169, 52617, 89684, 26291], "class": "4"}, "221": {"top_similar": [[221, 1.0], [361, 0.8636363636363636], [273, 0.7391304347826086]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal = 0\nfor num in range(10):\n  if ((num % 3) == 0) or ((num % 5) == 0):\n\ttotal = total + num\nprint total  ", "fingerprint": [[11879, 35], [25976, 8], [24884, 25], [40735, 2], [23495, 33], [58693, 38], [16167, 6], [11483, 12], [24087, 23], [25, 43], [23690, 30], [19181, 18], [23690, 20], [23495, 10], [19271, 28], [16752, 14], [24884, 15], [10125, 42], [10619, 3], [28310, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "222": {"top_similar": [[222, 1.0], [263, 0.7419354838709677], [413, 0.7419354838709677]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "for n in range(10):\n  a=n%3\n  \n  if a==0 :\n\tn+=n\n \n  \n  \n\nfor k in range(10):\n  b=k%5\n  if b==0 :\n\tprint k", "fingerprint": [[11519, 8], [18211, 45], [10125, 26], [18211, 16], [58689, 40], [11860, 50], [494, 28], [41720, 19], [10529, 44], [11519, 37], [10529, 15], [10, 27], [25976, 33], [78971, 22], [16167, 31], [23495, 35], [85010, 24], [19175, 13], [19265, 42], [58689, 11], [11879, 21], [23495, 6], [41720, 48], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 10, 494, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "7"}, "223": {"top_similar": [[223, 1.0], [1, 0.2], [25, 0.18181818181818182]], "tokens": ["UNK", "V", "\n", "UNK", "V", "\n", "for", "V", "in", "V", ".", "V", ":", "\n", "    ", "print", "V", ".", "V", "(", "V", ")", "", ""], "source": "import sys\nimport os\nfor p in sys.path:\n    print os.listdir( p )", "fingerprint": [[38457, 10], [10285, 13], [38442, 17], [12104, 2], [26291, 19], [16173, 8], [10619, 5], [7244, 14]], "k_gram_hashes": [89060, 89368, 12104, 89060, 89335, 10619, 22237, 89459, 16173, 89954, 38457, 90320, 54903, 10285, 7244, 52623, 89954, 38442, 89684, 26291, 89595], "class": "1"}, "224": {"top_similar": [[224, 1.0], [235, 0.5555555555555556], [12, 0.5]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "if", "V", "%", "UNK", "UNK", "0", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nanswer = 0\n\nfor num in range(23):\n  if num % 3 == 0 or num % 5 == 0:\n\tif num % 15 != 0:\n\t  answer += num\nprint answer\n\t\n\t  \n", "fingerprint": [[10439, 36], [11843, 27], [85010, 39], [40735, 2], [41720, 34], [18189, 14], [20203, 31], [16167, 6], [11483, 12], [0, 42], [19201, 16], [41720, 25], [42344, 19], [18189, 29], [23495, 10], [14171, 37], [10125, 41], [10619, 3], [19291, 22], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11843, 77354, 18189, 89548, 20203, 89030, 88002, 41720, 54906, 10439, 14171, 90989, 85010, 89325, 10125, 0, 25, 1169, 52610], "class": "4"}, "225": {"top_similar": [[225, 1.0], [97, 0.7083333333333334], [447, 0.41379310344827586]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", "==", "0", ")", "and", "(", "V", "%", "5", "==", "0", ")", ")", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "print", "V", ",", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nn=0\nfor num in range(1,1000):\n  if ((num % 3== 0) and (num%5==0)):\n\tn=n+1\n\tprint num,n", "fingerprint": [[25171, 8], [11879, 35], [22797, 32], [16752, 16], [41006, 31], [11483, 14], [23495, 12], [19291, 28], [16167, 6], [34301, 10], [27185, 40], [58693, 38], [40996, 23], [11294, 42], [2609, 25], [40735, 2], [34380, 45], [24884, 17], [10619, 3], [19201, 20], [22332, 24]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19201, 43940, 63686, 40996, 22332, 2609, 26289, 89528, 19291, 47990, 63686, 41006, 22797, 23495, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38725, 11294, 52621, 89864, 34380, 89100], "class": "4"}, "226": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nval=0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\tval+=num\nprint val", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "227": {"top_similar": [[227, 1.0], [264, 0.6818181818181818], [314, 0.6]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "(", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1, 1000):\n  result = 0\n  if (num % 5 == 0 or num % 3 == 0):\n\tresult = result + num\nprint(result)", "fingerprint": [[34301, 6], [16784, 16], [19201, 25], [28310, 36], [42344, 22], [25171, 4], [57605, 13], [10497, 15], [10125, 38], [41022, 28], [16167, 2], [19291, 19], [40733, 14], [25, 39], [58693, 34], [23495, 29], [23495, 8], [11519, 10], [11879, 31]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10497, 16784, 26289, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1137, 51209, 26291], "class": "3"}, "228": {"top_similar": [[228, 1.0], [90, 0.7647058823529411], [357, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "print", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num  % 3 == 0:\n  \tprint num\n  elif num % 5 == 0:\n\tprint num", "fingerprint": [[19291, 25], [52610, 19], [19201, 12], [41720, 28], [23495, 6], [10127, 21], [6039, 23], [41720, 15], [25976, 4], [134, 22], [11483, 8], [11590, 17], [18189, 10], [16167, 2], [11860, 30]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11590, 65969, 52610, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "3"}, "229": {"top_similar": [[229, 1.0], [325, 1.0], [450, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "3", "==", "0", "UNK", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx=0\nfor num in range(1000):\n   if num % 3 == 0 | num % 5 == 0:\t\n\tx = x + num\nprint x", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [23495, 10], [42479, 19], [26201, 8], [25, 35], [10619, 3], [19291, 22], [11888, 12]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89526, 19201, 43940, 63718, 42479, 89064, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "230": {"top_similar": [[79, 1.0], [230, 1.0], [369, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0:\n\tsum += num\n  elif num % 5 == 0:\n\tsum += num\n\t\nprint sum", "fingerprint": [[11879, 35], [10127, 26], [19291, 30], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [78971, 36], [26201, 8], [25, 41], [11879, 21], [18189, 14], [6039, 28], [40735, 2], [134, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "231": {"top_similar": [[231, 1.0], [162, 0.5714285714285714], [15, 0.5666666666666667]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "V", "+=", "V", "\n", "if", "V", "%", "5", "==", "0", ":", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0: sum += num\n  if num % 5 == 0: sum += num\nprint sum", "fingerprint": [[10529, 24], [85010, 22], [40735, 2], [18189, 14], [41759, 19], [16167, 6], [11483, 12], [19201, 16], [10150, 35], [41759, 30], [85010, 33], [23495, 10], [18189, 25], [19291, 27], [26201, 8], [10619, 3], [56696, 31], [56696, 20]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41759, 56696, 90989, 85010, 89333, 10529, 18189, 89528, 19291, 47990, 63702, 41759, 56696, 90989, 85010, 89325, 10150, 1169], "class": "4"}, "232": {"top_similar": [[232, 1.0], [100, 0.7272727272727273], [163, 0.7272727272727273]], "tokens": ["print", "V", "(", "[", "V", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", "UNK", "0", "for", "V", "in", "V", "(", "1000", ")", "]", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nprint sum([num if num %3 == 0 or num % 5 == 0 else 0 for num in range(1000)])", "fingerprint": [[16167, 21], [42455, 16], [40994, 18], [22237, 19], [42344, 10], [19291, 13], [25919, 2], [19201, 7], [26201, 23], [18189, 5]], "k_gram_hashes": [52617, 89675, 25919, 72863, 89504, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63718, 42455, 87985, 40994, 22237, 89459, 16167, 89682, 26201, 85581, 23906], "class": "6"}, "233": {"top_similar": [[233, 1.0], [167, 0.8], [57, 0.5789473684210527]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if (num%3 == 0) or (num%5 == 0):\n\tprint num\n  ", "fingerprint": [[41035, 16], [52610, 29], [26289, 19], [16784, 10], [24087, 17], [19201, 13], [23495, 6], [19291, 21], [25976, 4], [11860, 27], [11483, 8], [23495, 25], [41022, 24], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11860, 78119, 52610, 89325, 10125], "class": "3"}, "234": {"top_similar": [[234, 1.0], [122, 0.8], [0, 0.4375]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "    ", "if", "not", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "        ", "UNK", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor x in xrange(10):\n    if not x % 3 == 0 or x % 5 == 0:\n        continue\n    print x", "fingerprint": [[6469, 9], [17774, 10], [1169, 28], [19201, 13], [23495, 6], [19291, 19], [10268, 8], [10040, 25], [10348, 24], [41720, 22], [25976, 4], [42344, 16], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54903, 10268, 6469, 17774, 70839, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54904, 10348, 10040, 87300, 10150, 1169, 52605], "class": "3"}, "235": {"top_similar": [[235, 1.0], [134, 0.76], [60, 0.6296296296296297]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(1000):\n\tif num % 3 == 0:\n\t  sum += num\n\tif num % 5 == 0:\n\t  sum += num\n\nprint sum\n\n\n", "fingerprint": [[14171, 22], [19291, 30], [10439, 35], [41720, 19], [11843, 12], [19201, 16], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [404, 27], [10439, 21], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [26201, 8], [25, 41], [18189, 14], [14171, 36], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14171, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14171, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "4"}, "236": {"top_similar": [[236, 1.0], [100, 0.2413793103448276], [163, 0.2413793103448276]], "tokens": ["UNK", "V", "\n", "V", "=", "V", ".", "V", "(", ")", "\n", "V", "=", "V", "(", "[", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", "]", ")", "\n", "V", "=", "V", ".", "V", "(", ")", "-", "V", "\n", "print", "V", "%", "V", "V", "in", "%", "V", "V", "UNK", ""], "source": "#!/usr/bin/python\n\nimport time\n\nstart = time.time()\n\ns = sum([i for i in range(1000) if (i % 3 == 0 or i % 5 == 0)])\n\nelapsed = time.time() - start\n\nprint result %s returned in %s seconds\" % (s, elapsed)\"", "fingerprint": [[22237, 17], [14624, 56], [58698, 4], [22544, 9], [25919, 14], [41031, 36], [26201, 21], [23906, 37], [16784, 24], [12133, 40], [22994, 47], [38442, 6], [38442, 44], [42344, 30], [24810, 46], [20249, 53], [24800, 8], [12133, 10], [58698, 42], [22647, 23], [16167, 19], [58692, 12], [12133, 2], [19291, 33], [19201, 27], [11294, 50], [22544, 39]], "k_gram_hashes": [89060, 89369, 12133, 90404, 58698, 89954, 38442, 89651, 24800, 22544, 12133, 90404, 58692, 89675, 25919, 72865, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22647, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41031, 23906, 73400, 22544, 12133, 90404, 58698, 89954, 38442, 89651, 24810, 22994, 32360, 89350, 11294, 52614, 89549, 20249, 91087, 89424, 14624, 20249, 91123], "class": "4"}, "237": {"top_similar": [[237, 1.0], [253, 0.9090909090909091], [24, 0.8333333333333334]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 5 == 0: \n\tx = x + num\n  elif num % 3 == 0:\n\tx = x + num\n\n\t\nprint x", "fingerprint": [[28310, 38], [58693, 36], [10127, 24], [19201, 28], [26201, 4], [28310, 22], [10125, 40], [23495, 6], [11879, 33], [19291, 12], [134, 25], [41720, 15], [58693, 20], [41720, 31], [6039, 26], [11879, 17], [11483, 8], [18189, 10], [25, 41], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "238": {"top_similar": [[238, 1.0], [434, 0.6666666666666666], [437, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "print", "V", "%", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  \t\tprint num%3", "fingerprint": [[23495, 6], [52614, 10], [12085, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12085, 88244, 52614, 89526, 19170], "class": "1"}, "239": {"top_similar": [[239, 1.0], [262, 0.75], [100, 0.6666666666666666]], "tokens": ["[", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "]", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n[x for num in range(1000) if num % 3 == 0]\n  \n\t", "fingerprint": [[22679, 8], [26201, 6], [16167, 4], [22237, 2], [18189, 9], [19201, 11]], "k_gram_hashes": [72865, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63711, 42125], "class": "4"}, "240": {"top_similar": [[240, 1.0], [267, 0.8], [427, 0.8]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "UNK", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  nbnbvnbvnbv\\", "fingerprint": [[23495, 6], [11519, 8], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62773, 91035], "class": "1"}, "241": {"top_similar": [[241, 1.0], [430, 1.0], [49, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n  \tsum += num\n\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [11609, 27], [10125, 32], [23495, 10], [66821, 28], [26201, 8], [85010, 30], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "242": {"top_similar": [[242, 1.0], [36, 0.4166666666666667], [45, 0.4117647058823529]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t  ", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n\tif (num % 3 == 0):\n\t  print num", "fingerprint": [[16784, 10], [26201, 4], [19201, 13], [23495, 6], [11843, 8], [41022, 16], [10420, 19], [23495, 17], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77322, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54906, 10420, 13319, 52605, 89100], "class": "4"}, "243": {"top_similar": [[243, 1.0], [12, 0.7777777777777778], [49, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n    sum += num\n\t\nprint sum", "fingerprint": [[10304, 27], [25976, 8], [40735, 2], [18189, 14], [25, 33], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [85010, 30], [10619, 3], [19291, 22], [8096, 28]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8096, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "244": {"top_similar": [[244, 1.0], [257, 0.5], [164, 0.47058823529411764]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "(", "V", ")", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num%3==0: \n\ta = sum(num)\n\tprint a\n ", "fingerprint": [[22525, 24], [19201, 12], [23495, 6], [41720, 15], [25976, 4], [26291, 22], [11879, 17], [11483, 8], [11294, 25], [58692, 20], [18189, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58692, 89684, 26291, 89600, 22525, 11294, 52610, 89325, 10125], "class": "7"}, "245": {"top_similar": [[245, 1.0], [27, 0.7894736842105263], [144, 0.7894736842105263]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "    ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if(num % 3 == 0 or num % 5 == 0):\n    sum += num\n\t\nprint sum", "fingerprint": [[19291, 23], [41022, 26], [10125, 34], [40735, 2], [85010, 32], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [23495, 10], [8096, 30], [16784, 14], [26201, 8], [25, 35], [10304, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54903, 10304, 8096, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "246": {"top_similar": [[246, 1.0], [6, 0.8], [18, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "*", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num*3", "fingerprint": [[23495, 6], [11500, 8], [52619, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52619, 89751, 29295], "class": "1"}, "247": {"top_similar": [[247, 1.0], [12, 0.5652173913043478], [156, 0.5652173913043478]], "tokens": ["V", "=", "[", "]", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", ".", "V", "(", "V", ")", "\n", "", "", "print", "(", "V", "(", "V", ")", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsummation = []\nfor num in range(10):\n  if num%3 == 0 or num%5 == 0:\n\tsummation.append(num)\nprint(sum(summation))", "fingerprint": [[25976, 9], [19291, 23], [38442, 31], [19201, 17], [58311, 1], [25, 37], [10125, 36], [18189, 15], [41720, 26], [16167, 7], [26291, 33], [11483, 13], [10619, 4], [22500, 35], [26292, 40], [11879, 28], [23495, 11], [26291, 42], [42344, 20], [1137, 38]], "k_gram_hashes": [90395, 58311, 72500, 73135, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78948, 89954, 38442, 89684, 26291, 89600, 22500, 10125, 25, 1137, 51209, 26292, 89684, 26291, 89606], "class": "3"}, "248": {"top_similar": [[248, 1.0], [35, 0.7142857142857143], [240, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  a=8\n  print a", "fingerprint": [[58640, 11], [11519, 8], [26201, 4], [23495, 6], [11294, 13], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58640, 87325, 11294, 52605], "class": "3"}, "249": {"top_similar": [[249, 1.0], [261, 0.65], [301, 0.6470588235294118]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "*", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if (num % 3 * num % 5) == 0:\n\tsum=sum+num\nprint sum", "fingerprint": [[30339, 15], [16784, 10], [26201, 4], [25, 31], [41720, 21], [23495, 6], [23690, 19], [10125, 30], [58693, 26], [19271, 17], [11483, 8], [28310, 28], [19184, 13], [11879, 23], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19184, 43199, 30339, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "250": {"top_similar": [[250, 1.0], [256, 0.5652173913043478], [257, 0.5217391304347826]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "print", "V", "+", "UNK", "+", "V", "\n", "", "print", "UNK", "+", "V", ""], "source": "total = 0\nfor num in range(10):\n\tif num % 3 == 0 or num % 5 == 0:\n  \t\ttotal = total + num\n  \tprint num + \" \" + total\nprint \"Sum: \" + num", "fingerprint": [[58693, 30], [1168, 43], [25976, 8], [11843, 12], [40735, 2], [18189, 14], [10150, 42], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [42344, 19], [10150, 34], [1169, 35], [23495, 10], [28273, 38], [12104, 27], [10619, 3], [19291, 22], [28310, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52618, 89728, 28273, 87704, 28310, 89325, 10150, 1168, 52573, 87704], "class": "3"}, "251": {"top_similar": [[251, 1.0], [28, 0.56], [165, 0.5416666666666666]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  \t", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t\t", "V", "+=", "V", ";", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal = 0;\nfor num in range(10):\n  \tif(num%3 == 0) or (num%5 == 0):\n\t\ttotal += num;\nprint total", "fingerprint": [[25976, 9], [85031, 35], [19291, 26], [68846, 33], [24087, 22], [10125, 38], [41675, 2], [52875, 37], [16167, 7], [41022, 29], [11654, 32], [19201, 18], [26289, 24], [23495, 30], [10619, 4], [16784, 15], [41035, 21], [23495, 11], [25, 39], [11573, 13]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54932, 11573, 65172, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54933, 11654, 68846, 90989, 85031, 90275, 52875, 10125, 25, 1169], "class": "3"}, "252": {"top_similar": [[252, 1.0], [156, 0.7894736842105263], [448, 0.7894736842105263]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\n\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint total\n\ttotal = total + num\n\t\nprint num", "fingerprint": [[28310, 35], [52610, 29], [25976, 8], [40735, 2], [18189, 14], [25, 38], [16167, 6], [11483, 12], [10125, 37], [19201, 16], [41720, 25], [42344, 19], [12133, 31], [11860, 27], [23495, 10], [58693, 33], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "253": {"top_similar": [[253, 1.0], [24, 0.9166666666666666], [237, 0.9090909090909091]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if num % 3 == 0:\n\tsum = sum + num\n  elif num % 5 == 0:\n\tsum = sum + num\n\t\nprint sum\n\t\n\t", "fingerprint": [[19291, 32], [28310, 26], [58693, 24], [41720, 19], [134, 29], [19201, 16], [11483, 12], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [6039, 30], [25, 45], [11879, 37], [26201, 8], [28310, 42], [10619, 3], [11879, 21], [18189, 14], [10127, 28], [41720, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "254": {"top_similar": [[254, 1.0], [334, 0.6666666666666666], [6, 0.5]], "tokens": ["for", "V", "in", "V", "(", "5", "%", "1000", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(5%1000):\n  print num", "fingerprint": [[11500, 10], [20126, 6], [23495, 8], [16167, 2], [25344, 4]], "k_gram_hashes": [22237, 89459, 16167, 89663, 25344, 47022, 20126, 85572, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "255": {"top_similar": [[255, 1.0], [44, 0.6521739130434783], [221, 0.52]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "5", ")", "==", "0", ")", "or", "(", "(", "V", "%", "3", ")", "==", "0", ")", ":", "\n", "  \t", "print", "V", "\n", "V", "+=", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na=0;\nfor num in range(1000):\n  if ((num % 5)==0) or ((num%3)==0):\n  \tprint num\n\ta += num", "fingerprint": [[23690, 31], [24884, 26], [52610, 38], [11590, 36], [41675, 2], [16167, 7], [11483, 13], [19271, 19], [23690, 21], [10619, 4], [19181, 29], [16752, 15], [12146, 40], [23495, 11], [24087, 24], [26201, 9], [23495, 34], [24884, 16]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41022, 23495, 54932, 11590, 65969, 52610, 89369, 12146, 90989, 85005, 89100], "class": "4"}, "256": {"top_similar": [[256, 1.0], [219, 0.8823529411764706], [302, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "total = 0\nfor num in range(1000):\n\tif num % 3 == 0 or num % 5 == 0:\n  \t\ttotal = total + num\nprint total\n", "fingerprint": [[58693, 30], [25, 35], [11843, 12], [40735, 2], [18189, 14], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [10125, 34], [26201, 8], [12104, 27], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "257": {"top_similar": [[257, 1.0], [156, 0.8235294117647058], [448, 0.8235294117647058]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(10):\n  if num % 3 == 0 or num % 5 ==0:\n\tsum = sum + num\n\tprint num\n\n", "fingerprint": [[58693, 30], [25976, 8], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [11294, 34], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89325, 10125], "class": "3"}, "258": {"top_similar": [[258, 1.0], [79, 0.6538461538461539], [134, 0.6538461538461539]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n    if num%3==0:\n\t    sum+=num\n    elif num%5==0:\n\t    sum+=num\n\t\nprint sum", "fingerprint": [[41720, 19], [6479, 13], [40735, 2], [25, 41], [18189, 14], [85010, 24], [16167, 6], [41720, 33], [12104, 21], [12104, 35], [19201, 16], [6039, 28], [85010, 38], [23495, 10], [10125, 40], [134, 27], [26201, 8], [10268, 12], [10619, 3], [10127, 26], [19291, 30]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63702, 41720, 54943, 12104, 89096, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89096, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "259": {"top_similar": [[259, 1.0], [185, 0.7142857142857143], [281, 0.47058823529411764]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "10", "%", "V", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nb = 0\nfor num in range(10):\n  a = 10 % num\n  b = b + a\n  print b", "fingerprint": [[25976, 8], [28310, 23], [40735, 2], [16167, 6], [20210, 17], [12133, 19], [11519, 12], [58693, 21], [23495, 10], [11294, 25], [58374, 15], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90397, 58374, 75374, 20210, 89369, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52605], "class": "1"}, "260": {"top_similar": [[260, 1.0], [79, 0.9130434782608695], [230, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(100):\n#  if num % 3 == 0 and num % 5 == 0:\n#\tsum += num\n#  elif num % 3 == 0:\n  if num % 3 == 0:\n\tsum += num\n  elif num % 5 == 0:\n\tsum += num\nprint sum", "fingerprint": [[11879, 35], [10127, 26], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [19291, 30], [41720, 33], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [78971, 36], [25, 41], [11879, 21], [26246, 8], [18189, 14], [6039, 28], [40735, 2], [10125, 40], [134, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "261": {"top_similar": [[261, 1.0], [171, 0.7619047619047619], [332, 0.7619047619047619]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n#\n# prints:\n#\n#     a\n#     b\n\nsuma = 0\nfor num in range(1000):\n  \n  if (num % 3) or (num % 5) == 0:\n\tsuma = suma + num\n\nprint suma\n", "fingerprint": [[24087, 19], [28310, 34], [40735, 2], [26289, 21], [25, 37], [16167, 6], [11483, 12], [23690, 25], [19271, 23], [58693, 32], [19181, 17], [10125, 36], [23495, 10], [16784, 14], [26201, 8], [11879, 29], [10619, 3], [41720, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43060, 24087, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "262": {"top_similar": [[262, 1.0], [239, 0.75], [100, 0.5454545454545454]], "tokens": ["[", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "]", "\n", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n[x for num in range(1000) if num % 3 == 0]\nprint x  \n\t", "fingerprint": [[42125, 14], [22679, 8], [26201, 6], [16167, 4], [22237, 2], [11294, 16], [18189, 9], [19201, 11]], "k_gram_hashes": [72865, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63711, 42125, 73150, 11294, 52610], "class": "4"}, "263": {"top_similar": [[263, 1.0], [222, 0.7419354838709677], [413, 0.6571428571428571]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "for n in range(10):\n  a=n%3\n  \n  if a==0 :\n\tn+=n\n \n  \n  \n\nfor k in range(9):\n  b=k%5\n  \n  if b==0 :\n\tk+=k\n \n\nprint n", "fingerprint": [[10125, 55], [11519, 8], [18211, 45], [10125, 26], [18211, 16], [58689, 40], [494, 28], [41720, 19], [10529, 44], [11519, 37], [10529, 15], [10, 27], [85010, 53], [25, 56], [78971, 22], [16167, 31], [23495, 35], [85010, 24], [26246, 33], [19175, 13], [78971, 51], [11879, 50], [19265, 42], [58689, 11], [11879, 21], [23495, 6], [41720, 48], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 10, 494, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "7"}, "264": {"top_similar": [[264, 1.0], [47, 0.75], [91, 0.75]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n#\n#    range(7) is the list [0, 1, 2, 3, 4, 5, 6]\n#    x % 7 gives the remainder when x is divided by 7. So, for example, 1 % 7 = 1, and 20 % 7 = 6.\n#    You can print the value of a variable x by typing 'print x'.\n# or num % 5 == 1 \n\nsum = 0\nfor num in range(1,1000) :\n  if ( num % 3 == 0 or num % 5 == 0) : \n\tsum = sum + num\nprint sum\n\t", "fingerprint": [[25171, 8], [16784, 16], [11483, 14], [28310, 36], [23495, 12], [42344, 22], [16167, 6], [19291, 25], [34301, 10], [25, 39], [10125, 38], [41022, 28], [19201, 19], [11879, 31], [40735, 2], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "265": {"top_similar": [[265, 1.0], [297, 0.6], [327, 0.6]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n# \n\na=0\nfor num in range(1000):\n\ta=a+num\n\t\nprint a", "fingerprint": [[10150, 19], [40735, 2], [11879, 12], [16167, 6], [28310, 17], [58693, 15], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "6"}, "266": {"top_similar": [[266, 1.0], [120, 0.88], [126, 0.88]], "tokens": ["V", "=", "[", "3", ",", "5", "]", "\n", "V", "=", "UNK", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", ":", "\n", "    ", "for", "V", "in", "V", "(", "1", ",", "10", ")", ":", "\n", "        ", "if", "V", "*", "V", "<", "V", ":", "\n", "UNK", "V", "+=", "V", "*", "V", "\n", "", "", "", "print", "V", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "1000", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "        ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnums = [3, 5]\nmax = 999\n\nresult = 0\nfor num in nums:\n    for i in range(1,10):\n        if num*i < max:\n            result += num*i\nprint result\n\n\nresult = 0\nfor i in range(0,1000):\n    if i%3 == 0 or i%5 == 0:\n        result += i\n\nprint result", "fingerprint": [[30359, 37], [58640, 9], [85010, 88], [25, 51], [12104, 42], [0, 50], [16182, 18], [23495, 31], [60732, 39], [85019, 45], [12133, 55], [42344, 77], [12133, 11], [6569, 22], [25171, 27], [16167, 25], [19291, 80], [34076, 29], [16167, 62], [10349, 85], [18194, 35], [10125, 49], [10125, 90], [12133, 7], [10121, 86], [30335, 47], [25, 91], [6479, 71], [18189, 72], [58296, 1], [10619, 59], [25216, 64], [40735, 58], [41720, 83], [10313, 33], [10270, 21], [54943, 41], [33471, 4], [10619, 15], [40735, 14], [1169, 52], [23495, 68], [34301, 66], [43268, 3], [19201, 74], [10268, 70], [8504, 34]], "k_gram_hashes": [90395, 58296, 71836, 43268, 33471, 48200, 73169, 12133, 90403, 58640, 87344, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16182, 90320, 54903, 10270, 6569, 22237, 89459, 16167, 89659, 25171, 39232, 34076, 75447, 23495, 54904, 10313, 8504, 18194, 89774, 30359, 90449, 60732, 90320, 54943, 12104, 89096, 90989, 85019, 89774, 30335, 89325, 10125, 0, 25, 1169, 52610, 89369, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41262, 34301, 85572, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54904, 10349, 10121, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "267": {"top_similar": [[267, 1.0], [240, 0.8], [427, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "(", "V", ")", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  prints(num)", "fingerprint": [[23495, 6], [11519, 8], [26201, 4], [16167, 2], [26291, 11]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62742, 89684, 26291, 89595], "class": "4"}, "268": {"top_similar": [[268, 1.0], [0, 0.0], [1, 0.0]], "tokens": ["V", "=", "[", "1", ",", "2", ",", "3", "]", "\n", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nlist = [1,2,3]\nprint list", "fingerprint": [[33381, 6], [33406, 4], [58294, 1], [39217, 3]], "k_gram_hashes": [90395, 58294, 71746, 39217, 33406, 45291, 33381, 44150, 73150, 11294], "class": "1"}, "269": {"top_similar": [[269, 1.0], [60, 0.88], [198, 0.88]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "print", "V", "\n", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "print", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num%3==0:\n\tsum+=num \n\tprint num \n\tnext\n  if num%5==0:\n\tsum+=num\n\tprint num \nprint sum  \t\n\t\n\t\n\t\n\t", "fingerprint": [[18189, 33], [11294, 26], [19291, 35], [12110, 29], [25, 49], [41720, 19], [19201, 16], [11483, 12], [10133, 31], [41720, 38], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [10125, 48], [404, 32], [26201, 8], [78971, 41], [85010, 43], [10619, 3], [11879, 21], [18189, 14], [40735, 2], [11879, 40], [11294, 45]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89350, 11294, 52610, 89369, 12110, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89350, 11294, 52610, 89325, 10125, 25, 1169, 52610], "class": "4"}, "270": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\tsum+=num\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "271": {"top_similar": [[271, 1.0], [389, 0.5128205128205128], [31, 0.45454545454545453]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "if", "V", "<", "10", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "if", "V", "<", "10", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "", "print", "V", "+", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\nb = 0\nfor num in range(10):\n\tif num % 3 == 0:\n\t  if num < 10:\n\t\ta = a + num\n\tif num % 5 == 0:\n\t  if num < 10:\n\t\tb = b + num\nprint a + b\n\t\n\t\n\t", "fingerprint": [[40735, 6], [0, 64], [18209, 27], [19291, 44], [23495, 14], [28310, 37], [8, 40], [41720, 23], [12554, 26], [60417, 29], [10125, 63], [19201, 20], [10403, 25], [11654, 32], [54933, 31], [12133, 3], [41720, 47], [12554, 50], [10619, 7], [10125, 39], [404, 41], [25, 65], [16167, 10], [25976, 12], [58693, 59], [10403, 49], [40769, 2], [60417, 53], [54933, 55], [1169, 66], [18209, 51], [18189, 18], [11654, 56], [28310, 61], [11843, 16], [18189, 42], [58693, 35]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77354, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10403, 12554, 18209, 90442, 60417, 76145, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 8, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54906, 10403, 12554, 18209, 90442, 60417, 76145, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 0, 25, 1169, 52618, 89729, 28310], "class": "7"}, "272": {"top_similar": [[272, 1.0], [240, 0.5714285714285714], [297, 0.5555555555555556]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "+=", "1", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  num += 1\nprint num", "fingerprint": [[62771, 9], [11519, 8], [26201, 4], [23495, 6], [38700, 12], [10150, 13], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62771, 90964, 83885, 38700, 10150, 1169], "class": "4"}, "273": {"top_similar": [[273, 1.0], [221, 0.7391304347826086], [361, 0.64]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(10):\n  if (( (num % 3) == 0 ) or ( (num%5) == 0 )):\n\tsum = sum + num\n\tprint sum", "fingerprint": [[23690, 31], [24884, 26], [25976, 8], [22797, 34], [40735, 2], [11294, 44], [16167, 6], [11483, 12], [28310, 42], [23690, 21], [11879, 37], [23495, 10], [19181, 19], [16752, 14], [24852, 15], [19271, 29], [24087, 24], [10619, 3], [58693, 40], [24884, 16]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24852, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41006, 22797, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52605, 89100], "class": "4"}, "274": {"top_similar": [[274, 1.0], [404, 0.7727272727272727], [45, 0.5909090909090909]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "(", "V", "%", "2", "==", "0", ")", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "print", "V", "UNK", "UNK", "UNK", "V", "%", "3", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#print letter\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(10):\n\tif (num % 2 == 0):\n\t\tsum = sum + num\n\t\tprint num &\"  \"& num % 3\n\t  \nprint sum", "fingerprint": [[58693, 26], [19246, 17], [25976, 8], [11843, 12], [40735, 2], [19175, 37], [41022, 20], [16167, 6], [11294, 30], [52648, 31], [89054, 34], [89053, 33], [23495, 21], [11654, 23], [10125, 39], [23495, 10], [28310, 28], [16784, 14], [25, 40], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77322, 16784, 26289, 89527, 19246, 45965, 63686, 41022, 23495, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89350, 11294, 52648, 91078, 89053, 89054, 89064, 89526, 19175, 42750, 10125, 25, 1169], "class": "7"}, "275": {"top_similar": [[275, 1.0], [79, 0.5], [230, 0.5]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "print", "V", "\n", "", "elif", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "print", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "print", "V", "\n", "", "UNK", ":", "print", "UNK", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 and num % 5 == 0:\n\tsum += num\n\tprint num\n  elif num % 3 == 0:\n\tsum += num\n\tprint num\n  elif num % 5 == 0:\n\tsum += num\n\tprint num\n  else: print \"no bonus\"\nprint sum", "fingerprint": [[19291, 56], [6039, 37], [11294, 32], [11879, 44], [40589, 19], [10168, 69], [52565, 73], [41720, 59], [85010, 30], [78971, 28], [78971, 62], [19291, 22], [134, 36], [11879, 61], [10150, 75], [11879, 27], [19201, 16], [11294, 66], [11483, 12], [41720, 42], [85010, 64], [23495, 10], [16167, 6], [78971, 45], [41720, 25], [11294, 49], [19201, 39], [26201, 8], [10619, 3], [18189, 14], [1962, 70], [10127, 52], [134, 53], [85010, 47], [40735, 2], [10127, 35], [4014, 20], [6039, 54]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89350, 11294, 52610, 89325, 10127, 134, 6039, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89350, 11294, 52610, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89350, 11294, 52610, 89325, 10168, 1962, 88315, 55843, 52565, 87300, 10150, 1169], "class": "4"}, "276": {"top_similar": [[276, 1.0], [371, 0.3333333333333333], [308, 0.3]], "tokens": ["for", "V", "in", "V", "(", "V", "%", "5", ")", ":", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(x%5):print x", "fingerprint": [[19271, 6], [26289, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89684, 26289, 89528, 19271, 47097, 23515, 55844], "class": "1"}, "277": {"top_similar": [[277, 1.0], [380, 1.0], [61, 0.875]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\n\nfor num in range(1000):\n  if num % 3 == 0:\n\tx = x + num\n\nprint x", "fingerprint": [[25, 29], [41720, 19], [11879, 21], [40735, 2], [18189, 14], [16167, 6], [28310, 26], [11483, 12], [58693, 24], [19201, 16], [10125, 28], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "278": {"top_similar": [[278, 1.0], [28, 0.6666666666666666], [211, 0.6153846153846154]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "(", "0", ")", "\n", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  res = int(0)\n  if (num % 3 == 0) or (num % 5 == 0):\n\tres += num\nprint res", "fingerprint": [[16784, 17], [22508, 15], [11519, 8], [25, 40], [78971, 35], [19291, 28], [23495, 6], [85010, 37], [25211, 13], [41035, 23], [10125, 39], [41022, 31], [16167, 2], [11879, 34], [26289, 26], [23495, 32], [19201, 20], [25976, 4], [24087, 24], [10497, 16], [58692, 11]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58692, 89660, 25211, 41000, 22508, 10497, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "279": {"top_similar": [[279, 1.0], [104, 0.7272727272727273], [91, 0.7142857142857143]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "and", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if (num % 3 == 0) and (num % 5 ==0):\n  \tsum = sum + num\n\t\t\t\t\t\nprint sum", "fingerprint": [[10125, 38], [23495, 29], [40735, 2], [11609, 31], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [22332, 21], [41022, 28], [2609, 22], [23495, 10], [28310, 36], [16784, 14], [26201, 8], [40996, 20], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 40996, 22332, 2609, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "280": {"top_similar": [[280, 1.0], [245, 0.45161290322580644], [67, 0.40540540540540543]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "    ", "V", "+=", "V", ";", "\n", "if", "(", "V", "==", "UNK", ")", ":", "\n", "        ", "print", "V", "\n", "UNK", "\n", "", "UNK", ":", "\n", "        ", "UNK", "", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if(num%3 == 0 or num%5 == 0):\n    sum += num;\n    if(num == 999):\n        print sum\n        break\n    else:\n        continue", "fingerprint": [[10348, 53], [19291, 23], [23495, 27], [19201, 17], [42344, 20], [10035, 54], [16784, 14], [41022, 26], [85031, 32], [16784, 36], [11483, 12], [1962, 50], [10330, 43], [9269, 44], [23495, 10], [10168, 49], [16167, 6], [12065, 47], [26201, 8], [10619, 3], [10497, 35], [64721, 39], [52883, 34], [26311, 37], [40735, 2], [8096, 30], [10304, 29], [23495, 41]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54903, 10304, 8096, 90989, 85031, 90275, 52883, 10497, 16784, 26311, 90538, 64721, 87597, 23495, 54904, 10330, 9269, 52610, 89368, 12065, 87300, 10168, 1962, 88295, 54904, 10348, 10035, 87075, 0], "class": "4"}, "281": {"top_similar": [[281, 1.0], [185, 0.6666666666666666], [265, 0.5714285714285714]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "+", "V", "\n", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\n\nfor num in range(1000):\n  remainder=num % 3 \n  sum=sum+num\nprint sum\n  ", "fingerprint": [[28310, 23], [40735, 2], [16167, 6], [58689, 15], [11519, 12], [10150, 25], [58693, 21], [23495, 10], [19175, 17], [1169, 26], [26201, 8], [12133, 19], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52610], "class": "4"}, "282": {"top_similar": [[133, 1.0], [282, 1.0], [52, 0.875]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(1000):\n  if num%3 == 0: \n\tx += num\nprint x", "fingerprint": [[41720, 19], [11879, 21], [40735, 2], [18189, 14], [85010, 24], [16167, 6], [11483, 12], [19201, 16], [25, 27], [23495, 10], [26201, 8], [10619, 3], [78971, 22], [10125, 26]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "283": {"top_similar": [[283, 1.0], [8, 0.6470588235294118], [91, 0.631578947368421]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(10):\n  if (num % 0):\n  \tsum = sum + num\n\n\n\t\nprint sum", "fingerprint": [[25, 29], [25976, 8], [40735, 2], [16167, 6], [28310, 26], [11483, 12], [58693, 24], [19136, 17], [23495, 19], [10125, 28], [23495, 10], [11609, 21], [16784, 14], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89525, 19136, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "7"}, "284": {"top_similar": [[284, 1.0], [428, 0.7647058823529411], [348, 0.7058823529411765]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal=0\n\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n  \ttotal = total + num", "fingerprint": [[58693, 30], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [11609, 27], [23495, 10], [26201, 8], [28305, 32], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28305, 89100], "class": "4"}, "285": {"top_similar": [[285, 1.0], [10, 0.75], [53, 0.75]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "print", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  a = num % 3\n  print a \n  print num", "fingerprint": [[11294, 18], [11519, 8], [23495, 6], [19175, 13], [25976, 4], [11294, 15], [58689, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42775, 11294, 52610, 89350, 11294, 52605], "class": "1"}, "286": {"top_similar": [[286, 1.0], [46, 0.7692307692307693], [113, 0.7692307692307693]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "    ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(1000):\n  if num % 3 == 0:\n    x = x + num\n  if num % 5 == 0:\n    x = x + num\n\nprint x", "fingerprint": [[19291, 32], [10133, 28], [28310, 26], [58693, 24], [404, 29], [8083, 22], [18189, 30], [41720, 19], [19201, 16], [11483, 12], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [25, 45], [26201, 8], [28310, 42], [10619, 3], [10304, 21], [8083, 38], [18189, 14], [41720, 35], [10304, 37], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54903, 10304, 8083, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "287": {"top_similar": [[287, 1.0], [202, 0.8], [358, 0.8]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntot = 0\nfor num in range(1000):\n  if (num % 3 == 0 or num % 5 == 0):\n\ttot += num\n\t\nprint tot", "fingerprint": [[78971, 30], [19291, 23], [41022, 26], [10125, 34], [40735, 2], [85010, 32], [25, 35], [23495, 27], [16167, 6], [11483, 12], [19201, 17], [42344, 20], [23495, 10], [16784, 14], [26201, 8], [11879, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "288": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum = sum + num\n\nprint sum\n", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "289": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\n\t\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "290": {"top_similar": [[290, 1.0], [378, 0.9130434782608695], [60, 0.5714285714285714]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "if", "V", "%", "3", "==", "0", ":", "\n", "  ", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "  ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(10):\n if num%3 == 0:\n  sum += num\n if num%5 == 0:\n  sum += num\nprint sum", "fingerprint": [[62771, 36], [19291, 30], [41720, 19], [19201, 16], [10619, 3], [85010, 38], [62771, 22], [41720, 33], [11519, 21], [404, 27], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [12068, 12], [11519, 35], [25, 41], [25976, 8], [18189, 14], [40735, 2], [10125, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12068, 87479, 18189, 89526, 19201, 43940, 63702, 41720, 54930, 11519, 62771, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54930, 11519, 62771, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "291": {"top_similar": [[102, 1.0], [291, 1.0], [65, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "UNK", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):.62\n  ", "fingerprint": [[23533, 6], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23533, 56615], "class": "1"}, "292": {"top_similar": [[292, 1.0], [203, 0.35714285714285715], [240, 0.3333333333333333]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "3", "/", "1000", "\n", "V", "=", "5", "/", "1000", "\n", "print", "UNK", "\n", "print", "UNK", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  x = 3 / 1000\n  y = 5 / 1000\n  print 'x'\n  print 'y'", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [36320, 13], [11293, 21], [57662, 11], [12133, 15], [43332, 12], [11293, 24], [47382, 18], [36320, 19], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90381, 57662, 43332, 36320, 85319, 12133, 90383, 57752, 47382, 36320, 85300, 11293, 52565, 87325, 11293, 52560], "class": "1"}, "293": {"top_similar": [[293, 1.0], [175, 0.5789473684210527], [40, 0.56]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  \t", "V", "=", "0", "\n", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \tresult = 0\n\tif num % 3 == 0 or num % 5 == 0:\n\t  \tresult += num\n\tprint result", "fingerprint": [[1169, 33], [85010, 30], [26201, 4], [57605, 11], [18189, 14], [10529, 13], [23495, 6], [42344, 19], [10150, 32], [41720, 25], [40733, 12], [19291, 22], [11609, 8], [12104, 27], [19201, 16], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54932, 11609, 66808, 90380, 57605, 40733, 10529, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89096, 90989, 85010, 89325, 10150, 1169, 52605], "class": "4"}, "294": {"top_similar": [[294, 1.0], [19, 0.5], [85, 0.5]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "print", "UNK", "%", "3", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10): print 8 % 3", "fingerprint": [[23515, 6], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23515, 55843, 52569, 87501], "class": "1"}, "295": {"top_similar": [[295, 1.0], [110, 0.3333333333333333], [93, 0.2222222222222222]], "tokens": ["UNK", "V", "\n", "print", "V", ".", "V", "(", "UNK", ")", "\n", "V", "=", "V", "(", "UNK", ",", "UNK", ")", "\n", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nimport os\n\nprint os.listdir('/')\n\nf = open('index.html','r')\n\nprint f", "fingerprint": [[38442, 5], [12133, 10], [22544, 9], [34346, 16], [11294, 2], [58692, 12], [26251, 14], [26246, 7], [22525, 18]], "k_gram_hashes": [89060, 89350, 11294, 52623, 89954, 38442, 89683, 26246, 87575, 22544, 12133, 90404, 58692, 89683, 26251, 87838, 34346, 87575, 22525, 11294], "class": "1"}, "296": {"top_similar": [[296, 1.0], [73, 0.38095238095238093], [139, 0.28]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "5", ":", "\n", "\t  ", "print", "V", "\n", "", "elif", "V", "%", "3", ":", "\n", "\t  ", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n   if num % 5:\n\t  print num\n   elif num % 3:\n\t  print num\n\t  \n\t  ", "fingerprint": [[19197, 23], [10420, 26], [26201, 4], [13319, 27], [23495, 6], [11888, 8], [134, 20], [6039, 21], [13319, 16], [19287, 12], [10127, 19], [10420, 15], [18189, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89528, 19287, 47795, 54906, 10420, 13319, 52610, 89325, 10127, 134, 6039, 89526, 19197, 43745, 54906, 10420, 13319, 52610, 89325, 10125], "class": "4"}, "297": {"top_similar": [[297, 1.0], [327, 1.0], [383, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  a=num + a\nprint a", "fingerprint": [[11519, 8], [26201, 4], [28310, 13], [58693, 11], [23495, 6], [10150, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "7"}, "298": {"top_similar": [[43, 1.0], [105, 1.0], [298, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num\n\t\t\t\t\t  \n", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "299": {"top_similar": [[299, 1.0], [125, 0.6231884057971014], [195, 0.5833333333333334]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "1", "\n", "if", "V", "==", "3", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "", "if", "V", "==", "5", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "V", "=", "0", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nx=0\ny=0\nt=0\na=0\nb=0\nfor num in range(9):\n  x=x+1\n  y=y+1\n  if x==3:\n\ta=num+1\n\tprint a\n\tt=t+a\n\tx=0\n  if y==5:\n\tb=num+1\n\tprint b\n\tt=t+b\n\ty=0\nprint t\n  \n", "fingerprint": [[12133, 63], [28310, 88], [27185, 33], [40725, 93], [12133, 84], [27185, 79], [10529, 41], [58693, 59], [40725, 66], [11879, 47], [23495, 26], [12133, 11], [25, 95], [10619, 19], [10133, 67], [12133, 57], [11294, 81], [12133, 15], [12133, 90], [58693, 86], [12133, 3], [11519, 28], [47795, 72], [58693, 31], [58693, 37], [27185, 39], [43745, 45], [12133, 7], [58693, 50], [27185, 52], [58693, 77], [18211, 69], [40769, 6], [11879, 74], [10125, 94], [12133, 35], [40769, 2], [40735, 18], [18211, 42], [40769, 14], [11294, 54], [28310, 61], [40769, 10], [16167, 22], [404, 68], [26246, 24]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62758, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89704, 27185, 38708, 10529, 18211, 90516, 63747, 43745, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38725, 11294, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40725, 10133, 404, 18211, 90518, 63837, 47795, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38725, 11294, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89369, 12133, 90380, 57605, 40725, 10125, 25, 1169, 52610], "class": "7"}, "300": {"top_similar": [[300, 1.0], [432, 0.8333333333333334], [43, 0.8]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "%", "7", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#priunt\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num % 7", "fingerprint": [[23495, 6], [52614, 10], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52614, 89529, 19305], "class": "1"}, "301": {"top_similar": [[301, 1.0], [171, 0.6842105263157895], [332, 0.6842105263157895]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if (num%3) == 0: \n\ttotal = total + num\n\nprint total", "fingerprint": [[19181, 13], [28310, 24], [41720, 17], [23495, 6], [10125, 26], [25976, 4], [23690, 15], [11879, 19], [25, 27], [11483, 8], [58693, 22], [16167, 2], [16784, 10]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "7"}, "302": {"top_similar": [[302, 1.0], [256, 0.8823529411764706], [61, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsumma=0\nfor num in range(1000):\n\tif num % 5 == 0 or num % 3 == 0:\n\t\tsumma=summa+num\n\t\nprint summa", "fingerprint": [[58693, 30], [41720, 25], [11843, 12], [40735, 2], [18189, 14], [16167, 6], [10125, 34], [28310, 32], [19291, 16], [42344, 19], [23495, 10], [11654, 27], [19201, 22], [26201, 8], [25, 35], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "303": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "", ""], "source": "for num in range(10):\n  print", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61875], "class": "1"}, "304": {"top_similar": [[304, 1.0], [257, 0.65], [252, 0.6363636363636364]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "print", "V", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", ":", "UNK", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0;\nfor num in range(10):\n  if num % 3 == 0 or num % 5 == 0:\n  \tprint num\n\ttotal = total + num\n\tprint total: \" + total\"", "fingerprint": [[25976, 9], [19291, 23], [52610, 30], [19201, 17], [52632, 39], [41720, 26], [11590, 28], [41675, 2], [18189, 15], [16167, 7], [11483, 13], [28310, 36], [10619, 4], [12133, 32], [23495, 11], [42344, 20], [58693, 34], [11294, 38]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11590, 65969, 52610, 89369, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52632, 90358, 56610, 87075], "class": "3"}, "305": {"top_similar": [[305, 1.0], [6, 0.375], [18, 0.375]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "        ", "print", "(", "V", "%", "3", ")", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nfor num in range(10):\n        print(num%3)", "fingerprint": [[19181, 13], [9237, 9], [23495, 6], [26289, 11], [25976, 4], [10330, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54904, 10330, 9237, 51209, 26289, 89526, 19181, 43020], "class": "1"}, "306": {"top_similar": [[306, 1.0], [9, 0.8461538461538461], [78, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx= 0\nfor num in range(10):\n  \n  if(num%3 == 0):\n\tx = x + num\t\n\n\t\nif(num%5 == 0):\n\tx = x + num\t\n\tprint x\n\t\n\t\n\t\n\t", "fingerprint": [[19201, 17], [10125, 30], [16784, 14], [23495, 40], [11879, 23], [11483, 12], [58693, 45], [11879, 42], [28310, 28], [41022, 39], [23495, 21], [23495, 10], [16167, 6], [16784, 33], [11294, 49], [58693, 26], [10619, 3], [25976, 8], [41022, 20], [28310, 47], [8, 31], [372, 32], [19291, 36], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 8, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11294, 52610, 89325], "class": "7"}, "307": {"top_similar": [[307, 1.0], [317, 0.6363636363636364], [297, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "3", "*", "V", "\n", "V", "=", "V", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  a = 3 * num\n  b = b + a\n  print b", "fingerprint": [[28310, 19], [11519, 8], [11294, 21], [26201, 4], [58693, 17], [23495, 6], [43199, 12], [12133, 15], [30335, 13], [57659, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90381, 57659, 43199, 30335, 89369, 12133, 90404, 58693, 89729, 28310, 89350, 11294, 52605], "class": "4"}, "308": {"top_similar": [[308, 1.0], [185, 0.4666666666666667], [259, 0.4666666666666667]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "(", "V", "%", "5", ")", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(10):\n  \n  x =(num % 5)\n  print x", "fingerprint": [[25976, 8], [40735, 2], [11294, 21], [16167, 6], [19271, 18], [11519, 12], [23495, 10], [26289, 16], [57284, 15], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90372, 57284, 26289, 89528, 19271, 47075, 22525, 11294, 52605], "class": "1"}, "309": {"top_similar": [[309, 1.0], [43, 0.6666666666666666], [105, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "(", "V", ")", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print sum(num)\n", "fingerprint": [[26201, 4], [23495, 6], [52617, 10], [26291, 12], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52617, 89684, 26291, 89600, 22500], "class": "1"}, "310": {"top_similar": [[310, 1.0], [67, 0.6551724137931034], [155, 0.6]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  \t", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t\t", "V", "+=", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  \tif( num % 3 == 0 ):\n\t\tsum += num\n\t\n\t\n\tif( num % 5 == 0 ):\n\t\tsum += num\t\t\t\t\t\n\t\nprint sum", "fingerprint": [[11654, 39], [10133, 28], [19201, 17], [85010, 26], [16784, 14], [11573, 12], [68846, 24], [85010, 42], [10125, 44], [23495, 21], [23495, 10], [16784, 30], [16167, 6], [25, 45], [11654, 23], [41022, 36], [26201, 8], [10619, 3], [19291, 33], [41022, 20], [372, 29], [23495, 37], [40735, 2], [68846, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54932, 11573, 65172, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54933, 11654, 68846, 90989, 85010, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54933, 11654, 68846, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "311": {"top_similar": [[21, 1.0], [311, 1.0], [26, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "10", "%", "1000", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  \n  x=10%1000\n  print  x", "fingerprint": [[11519, 8], [26201, 4], [58374, 11], [23495, 6], [20120, 13], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90397, 58374, 75372, 20120, 85300, 11294, 52605], "class": "4"}, "312": {"top_similar": [[312, 1.0], [67, 0.32653061224489793], [310, 0.27450980392156865]], "tokens": ["V", "=", "0", "\n", "V", "=", "[", "]", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "    ", "if", "(", "V", "%", "5", "==", "0", "and", "V", "not", "in", "V", ")", ":", "\n", "        ", "V", ".", "V", "(", "V", ")", "\n", "", "if", "(", "V", "%", "3", "==", "0", "and", "V", "not", "in", "V", ")", ":", "\n", "        ", "V", ".", "V", "(", "V", ")", "\n", "", "", "for", "V", "in", "V", ":", "\n", "    ", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "total = 0\nnumlist = []\n\nfor num in range(1000):\n    if(num % 5 == 0 and num not in numlist):\n        numlist.append(num)\n    if(num % 3 == 0 and num not in numlist):\n        numlist.append(num)\n\nfor num in numlist:\n    total += num\n\nprint total", "fingerprint": [[22500, 40], [19201, 46], [10098, 58], [372, 42], [58311, 5], [23495, 31], [494, 67], [40589, 49], [19291, 22], [10349, 33], [16784, 43], [26291, 38], [4039, 26], [10133, 41], [40589, 25], [38442, 60], [26201, 13], [16167, 11], [10125, 65], [12133, 3], [38442, 36], [16166, 29], [10098, 34], [16166, 53], [10, 66], [6447, 18], [10619, 8], [16784, 19], [23495, 55], [85010, 76], [40769, 2], [10268, 17], [23495, 15], [10349, 57], [4039, 50], [8096, 74], [16182, 70], [10304, 73], [22500, 64], [26291, 62], [10150, 78]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90395, 58311, 72500, 73135, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54903, 10268, 6447, 16784, 26289, 89528, 19291, 47990, 63676, 40589, 4039, 90637, 69209, 16166, 89622, 23495, 54904, 10349, 10098, 89954, 38442, 89684, 26291, 89600, 22500, 10133, 372, 16784, 26289, 89526, 19201, 43940, 63676, 40589, 4039, 90637, 69209, 16166, 89622, 23495, 54904, 10349, 10098, 89954, 38442, 89684, 26291, 89600, 22500, 10125, 10, 494, 22237, 89459, 16182, 90320, 54903, 10304, 8096, 90989, 85010, 89325, 10150, 1169], "class": "6"}, "313": {"top_similar": [[313, 1.0], [0, 0.8181818181818182], [401, 0.7692307692307693]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "for num in range (10):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint num", "fingerprint": [[11860, 23], [19201, 12], [41720, 21], [23495, 6], [25976, 4], [42344, 15], [11483, 8], [18189, 10], [19291, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "3"}, "314": {"top_similar": [[314, 1.0], [373, 0.6956521739130435], [227, 0.6]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "10", ")", ":", "\n", "\t", "V", "=", "0", "\n", "if", "(", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ")", ":", "\n", "\t\t", "V", "+=", "V", "(", "V", ")", "\n", "", "", "print", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1, 10):\n\tresult = 0\n\tif (num % 5 == 0 or num % 3 == 0):\n\t\tresult += int(num)\nprint(result)", "fingerprint": [[19291, 19], [16784, 16], [85017, 34], [19201, 25], [26291, 36], [42344, 22], [11654, 31], [25171, 4], [57605, 13], [10497, 15], [41022, 28], [10125, 39], [68846, 32], [11879, 10], [40733, 14], [25, 40], [23495, 29], [23495, 8], [34076, 6], [16167, 2], [22500, 38]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39232, 34076, 75447, 23495, 54938, 11879, 78958, 90380, 57605, 40733, 10497, 16784, 26289, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63686, 41022, 23495, 54933, 11654, 68846, 90989, 85017, 89684, 26291, 89600, 22500, 10125, 25, 1137, 51209, 26291], "class": "3"}, "315": {"top_similar": [[315, 1.0], [6, 0.6666666666666666], [18, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "\n", "V", "\n", "", ""], "source": "\nfor num in range(10):\n  print num\n  help\n  ", "fingerprint": [[23495, 6], [52610, 10], [12110, 12], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52610, 89369, 12110, 89325], "class": "1"}, "316": {"top_similar": [[316, 1.0], [7, 0.6], [261, 0.5555555555555556]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "%", "3", ")", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na = 0\nfor num in range(1000):\n  if (num%5) == 0:\n  \ta = a + num\n  if (num%3) == 0:\n  \ta = a + num\n\t\nprint a\n  \t", "fingerprint": [[23690, 37], [16784, 14], [11609, 41], [25, 49], [372, 31], [11483, 12], [16784, 32], [19271, 17], [28310, 28], [58693, 44], [23495, 10], [16167, 6], [23690, 19], [10125, 48], [28310, 46], [10133, 30], [58693, 26], [26201, 8], [41720, 21], [10619, 3], [11609, 23], [41720, 39], [19181, 35], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26289, 89526, 19181, 43051, 23690, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "317": {"top_similar": [[317, 1.0], [297, 0.75], [327, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  sum = range + range\n  print sum", "fingerprint": [[11519, 8], [26201, 4], [28310, 13], [58693, 11], [23495, 6], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28310, 89350, 11294, 52605], "class": "4"}, "318": {"top_similar": [[318, 1.0], [427, 0.8333333333333334], [240, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "%", "3", "\n", "print", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  a % 3\n  print \n  ", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [19175, 11], [11255, 13], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62739, 89526, 19175, 42775, 11255, 50850], "class": "4"}, "319": {"top_similar": [[319, 1.0], [85, 0.6], [65, 0.4]], "tokens": ["print", "1000", "%", "5", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "print", "5", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     5\n#     3\nprint 1000%5\n\n\nfor num in range(1000): print 5", "fingerprint": [[19265, 2], [10619, 4], [16167, 7], [23515, 11], [26201, 9]], "k_gram_hashes": [52524, 85478, 19265, 46810, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23515, 55823], "class": "1"}, "320": {"top_similar": [[320, 1.0], [106, 0.625], [386, 0.625]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "UNK", "%", "UNK", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \n  70 % 70\n  print x", "fingerprint": [[26201, 4], [20165, 11], [23495, 6], [11518, 8], [16167, 2], [11294, 13]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11518, 62694, 87523, 20165, 87325, 11294, 52605], "class": "4"}, "321": {"top_similar": [[43, 1.0], [105, 1.0], [298, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nfor num in range(1000):\n  print num", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52605], "class": "4"}, "322": {"top_similar": [[322, 1.0], [427, 0.7142857142857143], [285, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  remainder = num % 3\n  print remainder", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [19175, 13], [11294, 15], [58689, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42775, 11294, 52605], "class": "4"}, "323": {"top_similar": [[323, 1.0], [136, 0.65], [47, 0.5714285714285714]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "V", "=", "V", "+", "V", ";", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nresult = 0\nfor num in range(1000):\n  if (num % 3 == 0 or num % 5 == 0) : result = result + num;\n  \n\t\nprint result", "fingerprint": [[58693, 30], [19291, 23], [41022, 26], [10150, 35], [40735, 2], [56683, 28], [16167, 6], [28331, 32], [11483, 12], [19201, 17], [42344, 20], [23534, 27], [23495, 10], [16784, 14], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23534, 56683, 90404, 58693, 89729, 28331, 90275, 52875, 10150, 1169], "class": "6"}, "324": {"top_similar": [[324, 1.0], [109, 0.6923076923076923], [100, 0.6153846153846154]], "tokens": ["V", "=", "V", "(", "V", "for", "V", "in", "V", "(", "1000", ")", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", "\n", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#  \n# prints:\n#\n#     a\n#     b\n  \nx = sum(i for i in range(1000) if i % 3 == 0 or i % 5 == 0)\nprint x", "fingerprint": [[18189, 12], [26290, 3], [41000, 23], [22679, 11], [19201, 14], [16167, 7], [22237, 5], [22525, 24], [42344, 17], [19291, 20], [58692, 1], [26201, 9]], "k_gram_hashes": [90404, 58692, 89684, 26290, 89594, 22237, 89459, 16167, 89682, 26201, 85553, 22679, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41000, 22525, 11294], "class": "6"}, "325": {"top_similar": [[229, 1.0], [325, 1.0], [450, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "3", "==", "0", "UNK", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx=0\nfor num in range(1000):\n   if num % 3 == 0 ^ num % 5 == 0:\t\n\tx = x + num\nprint x", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [23495, 10], [42479, 19], [26201, 8], [25, 35], [10619, 3], [19291, 22], [11888, 12]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89526, 19201, 43940, 63718, 42479, 89064, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "326": {"top_similar": [[326, 1.0], [191, 0.2], [92, 0.17142857142857143]], "tokens": ["V", "=", "1", "\n", "V", "=", "0", "\n", "V", "=", "[", "]", "\n", "UNK", "V", "<", "10", ":", "\n", "    ", "V", ".", "V", "(", "V", ")", "\n", "V", "=", "V", "*", "3", "\n", "V", "=", "V", "+", "1", "\n", "", "print", "V", ",", "\n", ""], "source": "# First, we declare variables\ncounter=1\nans=0\n \n# then a list so we can put them all there\nansList=[]\n \n# and finally the loop\nwhile ans < 10:\n    ansList.append(ans)\n    ans=counter*3\n    counter=counter+1\nprint ansList,\n\n", "fingerprint": [[8073, 19], [12104, 12], [29300, 30], [58694, 28], [12133, 7], [10150, 38], [10304, 18], [27185, 36], [60417, 15], [38442, 21], [40769, 6], [38744, 2], [12133, 32], [1169, 39], [22544, 25], [26291, 23], [58693, 34], [12133, 3], [54903, 17], [12133, 26], [58311, 9]], "k_gram_hashes": [90379, 57560, 38744, 12133, 90380, 57605, 40769, 12133, 90395, 58311, 72500, 73168, 12104, 89084, 90442, 60417, 76145, 54903, 10304, 8073, 89954, 38442, 89684, 26291, 89600, 22544, 12133, 90404, 58694, 89751, 29300, 42794, 12133, 90404, 58693, 89704, 27185, 38700, 10150, 1169, 52621, 89825], "class": "1"}, "327": {"top_similar": [[297, 1.0], [327, 1.0], [383, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  s=s+num\nprint s", "fingerprint": [[11519, 8], [26201, 4], [28310, 13], [58693, 11], [23495, 6], [10150, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "7"}, "328": {"top_similar": [[328, 1.0], [79, 0.9130434782608695], [230, 0.9130434782608695]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nres = 0\nfor num in range(10):\n  if num % 3 == 0:\n\tres+=num\n  elif num % 5 == 0:\n\tres+=num\n\t\nprint res", "fingerprint": [[11879, 35], [10127, 26], [19291, 30], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [11879, 21], [78971, 36], [25, 41], [25976, 8], [18189, 14], [6039, 28], [40735, 2], [134, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "329": {"top_similar": [[329, 1.0], [34, 0.85], [104, 0.8095238095238095]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nresult = 0\nfor num in range(1000):\n  if (num % 3 == 0) or (num % 5 == 0):\n  \tresult += num\nprint result\n", "fingerprint": [[10125, 36], [40735, 2], [11609, 31], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [85010, 34], [41022, 28], [24087, 21], [41035, 20], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [10619, 3], [66821, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "330": {"top_similar": [[330, 1.0], [6, 0.5], [18, 0.5]], "tokens": ["for", "V", "in", "V", "(", "3", ",", "1000", ")", ":", "\n", "  ", "print", "V", ";", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(3,1000):\n  print num;", "fingerprint": [[34301, 6], [11500, 10], [25261, 4], [23495, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89661, 25261, 43287, 34301, 85572, 23495, 54930, 11500, 61919, 52631, 90270], "class": "4"}, "331": {"top_similar": [[331, 1.0], [178, 0.7], [339, 0.3076923076923077]], "tokens": ["V", "=", "0", "\n", "V", "=", "[", "3", ",", "5", "]", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "not", "V", "%", "3", "or", "not", "V", "%", "5", ":", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nn = [3,5]\nfor num in range(1000):\n  if not num%3 or not num%5: sum+= num\n\t\nprint sum", "fingerprint": [[40769, 2], [10150, 36], [43268, 7], [56696, 32], [33471, 8], [44359, 26], [85010, 34], [26201, 16], [19210, 25], [19287, 30], [58296, 5], [16167, 14], [23495, 18], [47834, 31], [70839, 28], [10619, 11], [11483, 20], [17774, 22], [12133, 3]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90395, 58296, 71836, 43268, 33471, 48200, 73135, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61144, 17774, 70839, 89526, 19210, 44359, 82574, 70839, 89528, 19287, 47834, 56696, 90989, 85010, 89325, 10150, 1169], "class": "6"}, "332": {"top_similar": [[171, 1.0], [332, 1.0], [261, 0.7619047619047619]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntally=0\nfor num in range(10):\n  if (num % 3)==0 or (num % 5)==0:\n\ttally=tally+num\nprint tally", "fingerprint": [[25976, 8], [41720, 29], [40735, 2], [28310, 36], [23690, 19], [16167, 6], [25, 39], [11483, 12], [42312, 21], [10125, 38], [19181, 17], [23690, 27], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [19271, 25], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "3"}, "333": {"top_similar": [[333, 1.0], [46, 0.75], [56, 0.7391304347826086]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "print", "V", ";", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0:\n  \tresult = result + num\n  if num % 5 == 0:\n\tresult = result + numi\n\t\n  print result;\n\t\t\t\t\t\t\t\t\t", "fingerprint": [[10150, 40], [58693, 36], [404, 25], [26201, 4], [19201, 12], [28310, 22], [19291, 28], [23495, 6], [11879, 33], [18189, 26], [41720, 15], [1169, 41], [58693, 20], [10133, 24], [28310, 38], [11483, 8], [41720, 31], [18189, 10], [16167, 2], [11609, 17]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10150, 1169, 52631, 90275, 52875], "class": "4"}, "334": {"top_similar": [[334, 1.0], [114, 0.6666666666666666], [254, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "3", "%", "1000", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(3%1000):\n  print num\n  \n", "fingerprint": [[11500, 10], [25254, 4], [23495, 8], [16167, 2], [20126, 6]], "k_gram_hashes": [22237, 89459, 16167, 89661, 25254, 42972, 20126, 85572, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "335": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ns=0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\ts+=num\nprint s", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "336": {"top_similar": [[336, 1.0], [287, 0.75], [47, 0.6666666666666666]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n# prints:\n#\n#     a\n#     b\n\nsum = 0;\nfor num in range(1000):\n  if(num%3 == 0 or num%5 == 0):\n\tsum += num;\nprint sum;", "fingerprint": [[41022, 27], [52875, 35], [10125, 36], [85031, 33], [19291, 24], [25, 37], [41675, 2], [42344, 21], [16167, 7], [11483, 13], [19201, 18], [11879, 30], [10619, 4], [16784, 15], [78971, 31], [23495, 28], [23495, 11], [26201, 9]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85031, 90275, 52875, 10125, 25, 1169, 52631], "class": "6"}, "337": {"top_similar": [[337, 1.0], [78, 0.7777777777777778], [119, 0.7777777777777778]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", ";", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0;\nfor num in range(1000):\n  #print \"---\";\n  #print num;\n  if (num%3 == 0):\n\tsum = sum + num;\n  if (num%5 == 0):\n\tsum = sum + num;\n  #print sum;\n  \nprint sum;", "fingerprint": [[28331, 48], [41022, 21], [372, 33], [11483, 13], [58693, 46], [11879, 43], [23495, 22], [16167, 7], [10619, 4], [16784, 15], [58693, 27], [26201, 9], [11879, 24], [41675, 2], [41022, 40], [25, 52], [19291, 37], [23495, 11], [28331, 29], [10133, 32], [16784, 34], [19201, 18], [10125, 51], [23495, 41]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28331, 90275, 52875, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28331, 90275, 52875, 10125, 25, 1169, 52631], "class": "4"}, "338": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "=", "UNK", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\n\nprint sum = \" + str(sum)\"", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52633, 90403], "class": "6"}, "339": {"top_similar": [[339, 1.0], [133, 0.7058823529411765], [282, 0.7058823529411765]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "or", "V", "%", "5", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\nfor num in range(1000):\n  if num % 3 or num %5:\n\ttotal += num\nprint total\n", "fingerprint": [[25, 29], [40735, 2], [18189, 14], [19210, 16], [16167, 6], [11483, 12], [44369, 17], [19287, 20], [78971, 24], [10125, 28], [11879, 23], [23495, 10], [26201, 8], [85010, 26], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19210, 44369, 82989, 89528, 19287, 47795, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "4"}, "340": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum = sum + num\n\nprint sum", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "341": {"top_similar": [[341, 1.0], [160, 0.8636363636363636], [445, 0.7391304347826086]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", ";", "\n", "", "", "print", "V", ";", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nd = 0;\nfor num in range(10):\n  if ((num%3)==0 or (num%5)==0):\n  \td = d+num;\n\t\nprint d;", "fingerprint": [[25976, 9], [28331, 39], [25, 43], [23495, 32], [58693, 37], [42312, 23], [19271, 27], [41675, 2], [16167, 7], [11483, 13], [23690, 21], [10619, 4], [26289, 25], [16752, 15], [19181, 19], [11609, 34], [23495, 11], [23690, 29], [10125, 42], [24884, 16]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28331, 90275, 52875, 10125, 25, 1169, 52631], "class": "3"}, "342": {"top_similar": [[342, 1.0], [100, 0.5384615384615384], [163, 0.5384615384615384]], "tokens": ["print", "V", "(", "(", "V", "for", "V", "in", "V", "(", "1", ",", "1000", ")", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ")", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print x\n#\n# prints:\n#\n#     a\n#     b\n\nprint sum((\n    i for i in xrange(1,1000)\n        if i % 3 == 0 or i % 5 == 0))\n", "fingerprint": [[25171, 9], [18189, 14], [24884, 2], [19201, 16], [16167, 7], [34301, 11], [42344, 19], [41006, 25], [22679, 13], [22237, 5], [19291, 22]], "k_gram_hashes": [52617, 89652, 24884, 26290, 89594, 22237, 89459, 16167, 89659, 25171, 39237, 34301, 85553, 22679, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63686, 41006, 22775], "class": "6"}, "343": {"top_similar": [[343, 1.0], [241, 0.8333333333333334], [430, 0.8333333333333334]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "+=", "V", ";", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(1000):\n  if num%3 == 0 or num%5 == 0:\n  \tx += num;\n\t\nprint x\n", "fingerprint": [[52875, 32], [40735, 2], [10125, 33], [18189, 14], [16167, 6], [11483, 12], [85031, 30], [19201, 16], [41720, 25], [25, 34], [42344, 19], [11609, 27], [23495, 10], [66821, 28], [26201, 8], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66821, 90989, 85031, 90275, 52875, 10125, 25, 1169, 52610], "class": "6"}, "344": {"top_similar": [[344, 1.0], [110, 0.25], [362, 0.25]], "tokens": ["UNK", "V", "\n", "print", "V", ".", "V", "(", "/", "V", "UNK", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nimport os\nprint os.listdir(/lib\")", "fingerprint": [[38442, 5], [11294, 2], [25109, 7]], "k_gram_hashes": [89060, 89350, 11294, 52623, 89954, 38442, 89657, 25109, 36448, 91046], "class": "1"}, "345": {"top_similar": [[345, 1.0], [6, 0.6], [18, 0.6]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "   ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n   print num", "fingerprint": [[23495, 6], [11905, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54939, 11905, 80144, 52605], "class": "1"}, "346": {"top_similar": [[346, 1.0], [149, 0.5555555555555556], [189, 0.5555555555555556]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "(", "1", ")", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx=0\nfor num in range(10):\n  print num(1)\n ", "fingerprint": [[25976, 8], [52617, 14], [40735, 2], [16167, 6], [11500, 12], [23495, 10], [10619, 3], [25166, 16]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52617, 89659, 25166, 38975, 22500], "class": "1"}, "347": {"top_similar": [[347, 1.0], [32, 0.2571428571428571], [70, 0.25]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "2", ")", ":", "\n", "   ", "V", "+=", "5", "*", "V", "\n", "", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "V", "+=", "3", "*", "V", "\n", "", "print", "(", "V", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\n\nfor num in range(2):\n   sum += 5*num\n  \n\nfor num in range(4):\n  sum += 3*num\n\nprint(sum)\n", "fingerprint": [[10135, 19], [11924, 12], [40735, 2], [16167, 23], [10150, 36], [1137, 37], [23495, 27], [16167, 6], [25301, 8], [30335, 17], [80996, 13], [26246, 25], [11519, 29], [30335, 34], [23495, 10], [494, 20], [47249, 16], [10619, 3], [62771, 30], [43199, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89662, 25301, 45072, 23495, 54939, 11924, 80996, 90968, 84074, 47249, 30335, 89325, 10135, 494, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11519, 62771, 90966, 83984, 43199, 30335, 89325, 10150, 1137, 51209, 26291, 89600], "class": "7"}, "348": {"top_similar": [[348, 1.0], [241, 0.8235294117647058], [428, 0.8235294117647058]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nans = 0\nfor num in range(1000):\n  if num % 5 == 0 or num % 3 == 0:\n  \tans = num\n\t\nprint ans ", "fingerprint": [[41720, 25], [19201, 22], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [19291, 16], [58685, 30], [42344, 19], [11609, 27], [25, 33], [23495, 10], [26201, 8], [10619, 3], [10125, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58685, 89325, 10125, 25, 1169], "class": "6"}, "349": {"top_similar": [[349, 1.0], [207, 0.6129032258064516], [399, 0.45714285714285713]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n\nfor num in range(1000):\n  x = num % 3\n  y = num % 5\n  if x == 0:\n  \tsum = sum + num\n  if y == 0:\n  \tsum = sum + num\n\nprint sum", "fingerprint": [[11519, 8], [18211, 22], [19265, 19], [11609, 41], [10529, 21], [404, 35], [10133, 34], [12133, 15], [18211, 36], [16167, 2], [25, 49], [58693, 44], [19175, 13], [58689, 17], [10125, 48], [28310, 46], [41720, 25], [11609, 27], [58689, 11], [58693, 30], [26201, 4], [41720, 39], [23495, 6], [28310, 32]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18211, 90515, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "350": {"top_similar": [[350, 1.0], [441, 0.45], [382, 0.42857142857142855]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "not", "(", "V", "%", "3", ")", ":", "\n", "\t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na=0\nfor num in range(1000):\n  if not(num % 3):\n\tprint num", "fingerprint": [[23495, 20], [40735, 2], [16167, 6], [11483, 12], [26289, 16], [19181, 18], [23495, 10], [17742, 14], [26201, 8], [10619, 3], [11860, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61144, 17742, 69434, 26289, 89526, 19181, 43047, 23495, 54938, 11860, 78119, 52605, 89100], "class": "4"}, "351": {"top_similar": [[351, 1.0], [299, 0.47058823529411764], [92, 0.32432432432432434]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "+", "1", "\n", "V", "=", "V", "+", "1", "\n", "if", "V", "==", "3", ":", "\n", "\t", "print", "V", "+", "1", "\n", "V", "=", "0", "\n", "", "if", "V", "==", "5", ":", "\n", "\t", "print", "V", "+", "1", "\n", "V", "=", "0", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\nx=0\ny=0\nfor num in range(10):\n  x=x+1\n  y=y+1\n  if x==3:\n\tprint num+1\n\tx=0\n  if y==5:\n\tprint num+1\n\ty=0", "fingerprint": [[12133, 41], [40735, 6], [23495, 14], [27185, 21], [12133, 58], [47795, 50], [10529, 29], [10133, 45], [12133, 3], [18211, 47], [27185, 39], [11519, 16], [58693, 19], [10619, 7], [16167, 10], [25976, 12], [40725, 44], [52618, 54], [52618, 37], [40769, 2], [12133, 23], [11860, 35], [11860, 52], [18211, 30], [43745, 33], [58693, 25], [27185, 56], [27185, 27], [404, 46]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58693, 89704, 27185, 38744, 12133, 90404, 58693, 89704, 27185, 38708, 10529, 18211, 90516, 63747, 43745, 54938, 11860, 78119, 52618, 89704, 27185, 38744, 12133, 90380, 57605, 40725, 10133, 404, 18211, 90518, 63837, 47795, 54938, 11860, 78119, 52618, 89704, 27185, 38744, 12133, 90380, 57600, 40500], "class": "7"}, "352": {"top_similar": [[352, 1.0], [91, 0.5833333333333334], [45, 0.5652173913043478]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "    ", "if", "(", "V", "%", "3", "==", "0", ")", "UNK", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "        ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "total = 0\nfor num in range(1001):\n    if (num % 3 == 0) | (num % 5 == 0):\n        total = total + num\nprint total\n\n\t", "fingerprint": [[10125, 38], [6447, 13], [40735, 2], [24222, 21], [28310, 36], [10349, 31], [16167, 6], [26289, 23], [19201, 17], [25, 39], [10108, 32], [41022, 28], [23495, 29], [19291, 25], [23495, 10], [41038, 20], [16784, 14], [10268, 12], [58693, 34], [10619, 3], [26246, 8]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54903, 10268, 6447, 16784, 26289, 89526, 19201, 43940, 63686, 41038, 24222, 87659, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54904, 10349, 10108, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "353": {"top_similar": [[353, 1.0], [155, 0.4418604651162791], [7, 0.4090909090909091]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "if", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "    ", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "UNK", "V", "UNK", "V", "\n", "", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nresult = 0\n\nfor num in range(10):\n  if( num % 3 == 0 ):\n  \tresult += num\n  if( num % 5 == 0 ):\n  \tresult += num\n  if( num % 3 == 0):\n    if(num % 5 == 0):\n      result -= num\nprint result", "fingerprint": [[372, 45], [41022, 52], [10133, 28], [19201, 17], [85010, 26], [16784, 57], [16784, 14], [0, 72], [12104, 66], [23495, 53], [6447, 56], [11483, 12], [10125, 71], [10268, 55], [85010, 42], [23495, 21], [23495, 10], [16784, 30], [16167, 6], [66821, 24], [19291, 33], [41022, 63], [41022, 36], [10133, 44], [19291, 60], [10619, 3], [11609, 23], [25976, 8], [23495, 64], [89060, 69], [41022, 20], [19201, 49], [11609, 39], [372, 29], [23495, 37], [40735, 2], [16784, 46], [66821, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89325, 10133, 372, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11609, 66821, 90989, 85010, 89325, 10133, 372, 16784, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54903, 10268, 6447, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54943, 12104, 89098, 91079, 89060, 89325, 10125, 0, 25, 1169], "class": "3"}, "354": {"top_similar": [[354, 1.0], [55, 0.6666666666666666], [285, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "5", "\n", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#range(7) is the list [0, 1, 2, 3, 4, 5, 6]\n#x % 7 gives the remainder when x is divided by 7. So, for example, 1 % 7 = 1, and 20 % 7 = 6.\n#You can print the value of a variable x by typing 'print x'.\n\nfor num in range(10):\n  eb = num % 5\n  print es\n\t\t\n", "fingerprint": [[11519, 8], [19265, 13], [23495, 6], [25976, 4], [11294, 15], [58689, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89528, 19265, 46825, 11294, 52610, 89325], "class": "1"}, "355": {"top_similar": [[355, 1.0], [252, 0.5], [46, 0.4857142857142857]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "print", "V", "\n", "print", "V", "\n", "V", "=", "V", "+", "3", "\n", "print", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "\n", "print", "V", "\n", "V", "=", "V", "+", "5", "\n", "print", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(10):\n  if num % 3 == 0:\n\tprint num\n\tprint x\n\tx = x + 3\n\tprint x\n  if num % 5 == 0:\n\tprint num\n\tprint x\n\tx = x + 5\n\tprint x\nprint x", "fingerprint": [[11294, 59], [404, 38], [52610, 48], [41720, 19], [19201, 16], [11483, 12], [52610, 23], [27365, 57], [10125, 62], [12133, 28], [58693, 55], [11860, 46], [23495, 10], [16167, 6], [11294, 34], [18189, 39], [10133, 37], [11294, 25], [10619, 3], [58693, 30], [25976, 8], [25, 63], [18189, 14], [11294, 50], [27275, 32], [11860, 21], [40735, 2], [41720, 44], [19291, 41], [12133, 53]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11860, 78119, 52610, 89350, 11294, 52610, 89369, 12133, 90404, 58693, 89706, 27275, 42775, 11294, 52610, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52610, 89350, 11294, 52610, 89369, 12133, 90404, 58693, 89708, 27365, 46825, 11294, 52610, 89325, 10125, 25, 1169], "class": "7"}, "356": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", "or", "(", "V", "%", "3", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\nfor num in range(1000):\n  if (num%5==0) or (num%3==0):\n\ta = a + num\nprint a", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [11483, 12], [11879, 31], [25, 39], [10125, 38], [41022, 28], [19291, 17], [41035, 20], [24087, 21], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3], [19201, 25]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41035, 24087, 81584, 26289, 89526, 19201, 43940, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "357": {"top_similar": [[357, 1.0], [408, 0.8333333333333334], [228, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "==", "0", ":", "\n", "\t", "UNK", "\n", "", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "print", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num == 0:\n\tcontinue\n  if num  % 3 == 0:\n  \tprint num\n  elif num % 5 == 0:\n\tprint num", "fingerprint": [[52610, 29], [19291, 35], [19201, 22], [26201, 4], [10133, 18], [23495, 6], [11860, 40], [10127, 31], [134, 32], [41720, 25], [11590, 27], [41720, 38], [41720, 13], [404, 19], [6039, 33], [11483, 8], [18189, 20], [11878, 15], [18211, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18211, 90515, 63702, 41720, 54938, 11878, 78890, 87300, 10133, 404, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11590, 65969, 52610, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "4"}, "358": {"top_similar": [[202, 1.0], [358, 1.0], [438, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n  if (num % 3 == 0) or (num % 5 == 0):\n\tsum += num\n\t\nprint sum", "fingerprint": [[78971, 32], [10125, 36], [40735, 2], [85010, 34], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "359": {"top_similar": [[359, 1.0], [133, 0.5238095238095238], [282, 0.5238095238095238]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "3", "*", "V", "UNK", "10", "and", "5", "*", "V", "UNK", "10", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\nfor num in range(1000):\n  if 3*num<=10 and 5*num<=10:\n\tsum+=num\n\t\nprint sum\n", "fingerprint": [[17159, 14], [74993, 19], [40735, 2], [30373, 16], [54938, 26], [11879, 27], [16167, 6], [11483, 12], [3074, 20], [76145, 25], [23495, 10], [30373, 22], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [10125, 32], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61131, 17159, 43199, 30373, 91072, 88741, 74993, 3074, 47249, 30373, 91072, 88767, 76145, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "360": {"top_similar": [[360, 1.0], [214, 0.3023255813953488], [220, 0.27906976744186046]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "V", "=", "V", "(", ")", "\n", "if", "V", "%", "3", ":", "\n", "UNK", "V", ".", "V", "(", "V", ")", "\n", "", "if", "V", "%", "5", ":", "\n", "UNK", "V", ".", "V", "(", "V", ")", "\n", "", "", "print", "V", ".", "V", "(", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n   nums = Set()\n   if num % 3:\n       nums.add(num)\n   if num % 5:\n       nums.add(num)\n\nprint nums.lenght()", "fingerprint": [[19197, 18], [38442, 49], [12104, 21], [11924, 8], [1169, 46], [58692, 11], [22500, 28], [22508, 14], [38442, 39], [26291, 26], [404, 30], [18189, 16], [10529, 15], [19287, 33], [16167, 2], [10125, 44], [24800, 13], [25, 45], [22500, 43], [12104, 36], [26291, 41], [26201, 4], [23495, 6], [10133, 29], [38442, 24], [18189, 31]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11924, 80983, 90404, 58692, 89651, 24800, 22508, 10529, 18189, 89526, 19197, 43745, 54943, 12104, 89073, 89954, 38442, 89684, 26291, 89600, 22500, 10133, 404, 18189, 89528, 19287, 47795, 54943, 12104, 89073, 89954, 38442, 89684, 26291, 89600, 22500, 10125, 25, 1169, 52623, 89954, 38442, 89651], "class": "7"}, "361": {"top_similar": [[361, 1.0], [221, 0.8636363636363636], [23, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "2", ",", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nttl = 0\nfor num in range(2, 1000):\n  if ((num % 3) == 0) or ((num % 5) == 0):\n\tttl = ttl + num\n\nprint num\n", "fingerprint": [[23495, 35], [10125, 44], [16752, 16], [28310, 42], [11483, 14], [25, 45], [23495, 12], [16167, 6], [34301, 10], [25306, 8], [19271, 30], [11879, 37], [58693, 40], [40735, 2], [23690, 32], [19181, 20], [23690, 22], [24884, 17], [10619, 3], [24884, 27], [24087, 25]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89662, 25306, 45312, 34301, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81552, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "362": {"top_similar": [[362, 1.0], [344, 0.25], [10, 0.14285714285714285]], "tokens": ["V", "=", "0", "\n", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nprint sum\n\n#for num in range(1000):\n#  if num % 3 = 0 \n#    sum = sum + num\n\t\n#print sum", "fingerprint": [[11294, 3], [40750, 2]], "k_gram_hashes": [90380, 57605, 40750, 11294, 52610], "class": "1"}, "363": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx=0\nfor num in range(1000):\n  if num%3==0 or num%5==0:\n\tx=x+num\nprint x", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "364": {"top_similar": [[364, 1.0], [238, 0.5714285714285714], [6, 0.42857142857142855]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "print", "3", "*", "V", "%", "UNK", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  \t\t print 3 * num % 4", "fingerprint": [[43199, 11], [30339, 12], [23495, 6], [12085, 8], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12085, 88221, 51584, 43199, 30339, 89548, 20160], "class": "1"}, "365": {"top_similar": [[365, 1.0], [110, 0.08888888888888889], [444, 0.07017543859649122]], "tokens": ["print", "1", "\n", "(", "UNK", "V", "=", "(", "UNK", "V", ":", "[", "V", "for", "V", "in", "(", ")", ".", "V", ".", "V", "[", "0", "]", ".", "V", "(", ")", "if", "V", ".", "V", "==", "V", "]", "[", "0", "]", ")", ":", "V", "(", "UNK", ")", "(", "V", "(", "UNK", ")", "(", "0", ",", "0", ",", "0", ",", "0", ",", "UNK", ",", "(", ")", ",", "(", ")", ",", "(", ")", ",", "UNK", ",", "UNK", ",", "0", ",", "UNK", ")", ",", "UNK", "UNK", ")", "(", ")", ")", "(", ")", ""], "source": "print 1\n(lambda fc=(\n   lambda n: [\n       c for c in\n           ().__class__.__bases__[0].__subclasses__()\n           if c.__name__ == n\n       ][0]\n   ):\n   fc(\"function\")(\n       fc(\"code\")(\n           0,0,0,0,\"KABOOM\",(),(),(),\"\",\"\",0,\"\"\n       ),{}\n   )()\n)()", "fingerprint": [[25216, 50], [33316, 73], [42138, 23], [56294, 10], [38442, 25], [42131, 37], [33316, 56], [33316, 52], [26246, 47], [24803, 27], [23007, 65], [26279, 3], [23129, 17], [10708, 2], [26279, 7], [24811, 61], [34351, 58], [23038, 68], [23007, 62], [22859, 44], [23038, 77], [34351, 71], [26246, 42], [38461, 31], [22237, 13], [18198, 29], [22782, 83], [71811, 36], [38448, 18], [38465, 20], [34346, 75], [22826, 81], [22679, 28], [14726, 15], [22835, 49], [23534, 39], [32951, 60], [34378, 78], [57283, 6], [64791, 33], [34351, 69], [33316, 54]], "k_gram_hashes": [51485, 38712, 10708, 26279, 89083, 90372, 57283, 26279, 89082, 90350, 56294, 72865, 89594, 22237, 89427, 14726, 24813, 23129, 38448, 89954, 38465, 90695, 71811, 42138, 73754, 38442, 89651, 24803, 22679, 18198, 89954, 38461, 90539, 64791, 90755, 74495, 71811, 42131, 73422, 23534, 56667, 89683, 26246, 87582, 22859, 26292, 89683, 26246, 87582, 22835, 25216, 41240, 33316, 41240, 33316, 41240, 33316, 41263, 34351, 87807, 32951, 24811, 23007, 32951, 24811, 23007, 32951, 24811, 23038, 34351, 87838, 34351, 87815, 33316, 41263, 34346, 87586, 23038, 34378, 89021, 87582, 22826, 24806, 22782, 22826], "class": "1"}, "366": {"top_similar": [[366, 1.0], [207, 0.4444444444444444], [92, 0.4375]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", "or", "V", "==", "0", ":", "\n", "    ", "V", "=", "V", "\n", "V", "=", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "k=0\ni=0\nfor num in range(0,10):\n  c=num%3\n  d=num%5\n  \n  if c==0 or d==0 :\n    k=num\n    k=+k\n\t\n\t\n   \n\t\n  \nprint k\n ", "fingerprint": [[40735, 6], [25, 52], [11519, 18], [12133, 25], [10304, 41], [19175, 23], [42344, 35], [58689, 27], [12133, 3], [58689, 21], [18211, 32], [10125, 51], [25216, 12], [10619, 7], [23495, 16], [34076, 14], [16167, 10], [19265, 29], [8083, 42], [40769, 2], [41720, 39], [28310, 49], [12133, 46], [58685, 44], [63702, 38], [10529, 31]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41257, 34076, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42794, 12133, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63715, 42344, 83011, 90515, 63702, 41720, 54903, 10304, 8083, 90404, 58685, 89369, 12133, 90373, 57329, 28310, 89325, 10125, 25, 1169, 52610], "class": "7"}, "367": {"top_similar": [[367, 1.0], [412, 0.6666666666666666], [6, 0.6]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  \t", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#print \n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  \tprint num\n  ", "fingerprint": [[23495, 6], [11590, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54932, 11590, 65969, 52610, 89325], "class": "1"}, "368": {"top_similar": [[368, 1.0], [52, 0.7777777777777778], [62, 0.7777777777777778]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsums = 0\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsums += num\n  print sums", "fingerprint": [[1169, 33], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [10150, 32], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10150, 1169, 52605], "class": "6"}, "369": {"top_similar": [[79, 1.0], [230, 1.0], [369, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(1000):\n  if num % 3 == 0:\n\tx += num\n  elif num % 5 == 0:\n\tx += num\n\nprint x\n", "fingerprint": [[11879, 35], [10127, 26], [19291, 30], [41720, 19], [19201, 16], [11483, 12], [10619, 3], [85010, 38], [10125, 40], [41720, 33], [78971, 22], [23495, 10], [85010, 24], [16167, 6], [78971, 36], [26201, 8], [25, 41], [11879, 21], [18189, 14], [6039, 28], [40735, 2], [134, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "3"}, "370": {"top_similar": [[370, 1.0], [434, 0.7142857142857143], [437, 0.7142857142857143]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "3", "+", "V", "%", "5", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num % 3 + num %5", "fingerprint": [[19183, 12], [28314, 14], [23495, 6], [52614, 10], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89526, 19183, 43154, 28314, 89528, 19260], "class": "7"}, "371": {"top_similar": [[371, 1.0], [238, 0.42857142857142855], [364, 0.375]], "tokens": ["for", "V", "in", "V", "(", "10", "%", "5", ")", ":", "\n", "UNK", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10%5):\n print num \n\t\n\n", "fingerprint": [[25974, 4], [19271, 6], [12085, 10], [23495, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25974, 75353, 19271, 47097, 23495, 54943, 12085, 88244, 52610, 89325], "class": "1"}, "372": {"top_similar": [[372, 1.0], [25, 0.6666666666666666], [3, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "    ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nfor num in range(1000):\n    print num", "fingerprint": [[23495, 6], [7244, 9], [26201, 4], [16167, 2], [10285, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54903, 10285, 7244, 52605], "class": "4"}, "373": {"top_similar": [[373, 1.0], [314, 0.6956521739130435], [227, 0.5416666666666666]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "10", ")", ":", "\n", "\t", "V", "=", "1000", "\n", "if", "(", "V", "%", "5", "==", "0", "or", "V", "%", "3", "==", "0", ")", ":", "\n", "\t\t", "V", "+=", "V", "\n", "", "", "print", "(", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1, 10):\n\tresult = 1000\n\tif (num % 5 == 0 or num % 3 == 0):\n\t\tresult += num\nprint(result)", "fingerprint": [[16784, 16], [19201, 25], [58595, 13], [42344, 22], [11654, 31], [85010, 34], [25171, 4], [19291, 19], [10497, 15], [41022, 28], [10125, 36], [68846, 32], [11879, 10], [25, 37], [23495, 29], [23495, 8], [34076, 6], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39232, 34076, 75447, 23495, 54938, 11879, 78958, 90402, 58595, 85283, 10497, 16784, 26289, 89528, 19291, 47990, 63715, 42344, 82989, 89526, 19201, 43940, 63686, 41022, 23495, 54933, 11654, 68846, 90989, 85010, 89325, 10125, 25, 1137, 51209, 26291], "class": "3"}, "374": {"top_similar": [[374, 1.0], [98, 0.5882352941176471], [152, 0.225]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "10", "UNK", "3", "\n", "V", "=", "10", "UNK", "5", "\n", "V", "=", "10", "UNK", "UNK", "\n", "V", "=", "(", "3", "+", "UNK", ")", "*", "V", "/", "2", "+", "(", "5", ")", "*", "V", "/", "2", "-", "(", "UNK", "+", "UNK", ")", "*", "V", "/", "2", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  x = 10//3\n  y = 10//5\n  z = 10//15\n  a = (3+9)*x/2+(5)*y/2-(15+990)*z/2\n  print a", "fingerprint": [[11519, 8], [76903, 24], [30347, 35], [42794, 14], [22949, 42], [30347, 43], [58408, 23], [28271, 32], [12133, 15], [22949, 52], [46844, 20], [12133, 21], [28271, 50], [11294, 57], [22949, 34], [16167, 2], [25258, 30], [35430, 45], [35428, 37], [35420, 55], [30958, 47], [12133, 27], [26248, 48], [26201, 4], [25346, 40], [58408, 11], [26888, 39], [30347, 53], [58408, 17], [23495, 6]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90397, 58408, 76881, 88025, 42794, 12133, 90397, 58408, 76883, 88115, 46844, 12133, 90397, 58408, 76903, 89015, 87344, 12133, 90372, 57261, 25258, 43153, 28271, 87584, 22949, 30347, 89887, 35428, 45147, 26888, 25346, 47084, 22949, 30347, 89887, 35430, 45237, 30958, 26248, 87703, 28271, 87584, 22949, 30347, 89887, 35420, 44800, 11294, 52605], "class": "1"}, "375": {"top_similar": [[375, 1.0], [322, 0.45454545454545453], [433, 0.45454545454545453]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "+", "V", "%", "3", "\n", "print", "V", "+", "V", "%", "5", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num + num % 3\n  print num + num % 5", "fingerprint": [[19175, 14], [26201, 4], [52618, 10], [23495, 6], [11294, 16], [28314, 19], [28314, 12], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52618, 89729, 28314, 89526, 19175, 42775, 11294, 52618, 89729, 28314, 89528, 19260], "class": "1"}, "376": {"top_similar": [[376, 1.0], [52, 0.8823529411764706], [62, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "7", "==", "0", "or", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ns=0\nfor num in range(1000):\n  if x%7==0 or x%3==0:\n\ts+=num\n  \nprint num", "fingerprint": [[85010, 30], [19201, 22], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [41720, 25], [42344, 19], [25, 33], [23495, 10], [26201, 8], [19336, 16], [78971, 28], [10619, 3], [10125, 32]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89529, 19336, 50015, 63715, 42344, 82989, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "377": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ni=0\nfor num in range(1000):\n  if num%3 == 0 or num%5 ==0:\n\ti= i + num\n\t\nprint i", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "378": {"top_similar": [[378, 1.0], [290, 0.9130434782608695], [60, 0.6296296296296297]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "UNK", "if", "V", "%", "3", "==", "0", ":", "\n", "  ", "V", "+=", "V", "\n", "", "if", "V", "%", "5", "==", "0", ":", "\n", "  ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\nfor num in range(1000):\n if num%3 == 0:\n  sum += num\n if num%5 == 0:\n  sum += num\nprint sum", "fingerprint": [[62771, 36], [19291, 30], [41720, 19], [19201, 16], [10619, 3], [85010, 38], [62771, 22], [41720, 33], [11519, 21], [404, 27], [10133, 26], [23495, 10], [85010, 24], [16167, 6], [18189, 28], [12068, 12], [11519, 35], [26201, 8], [25, 41], [18189, 14], [40735, 2], [10125, 40]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54943, 12068, 87479, 18189, 89526, 19201, 43940, 63702, 41720, 54930, 11519, 62771, 90989, 85010, 89325, 10133, 404, 18189, 89528, 19291, 47990, 63702, 41720, 54930, 11519, 62771, 90989, 85010, 89325, 10125, 25, 1169], "class": "4"}, "379": {"top_similar": [[379, 1.0], [108, 0.8461538461538461], [30, 0.7142857142857143]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "(", "V", ")", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1,1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint (num)\n  ", "fingerprint": [[34301, 6], [18189, 12], [19291, 20], [19201, 14], [25171, 4], [11483, 10], [41720, 23], [26291, 28], [42344, 17], [11860, 25], [23495, 8], [22500, 30], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78087, 51209, 26291, 89600, 22500, 10125], "class": "4"}, "380": {"top_similar": [[277, 1.0], [380, 1.0], [61, 0.875]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if num % 3 == 0:\n\tsum = sum + num\n\t\nprint sum", "fingerprint": [[25, 29], [41720, 19], [11879, 21], [40735, 2], [18189, 14], [16167, 6], [28310, 26], [11483, 12], [58693, 24], [19201, 16], [10125, 28], [23495, 10], [26201, 8], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "381": {"top_similar": [[43, 1.0], [105, 1.0], [298, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n# \n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num", "fingerprint": [[23495, 6], [26201, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52605], "class": "4"}, "382": {"top_similar": [[382, 1.0], [350, 0.42857142857142855], [36, 0.4166666666666667]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", ":", "\n", "  \t", "print", "V", ";", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if(x % 3):\n  \tprint x;", "fingerprint": [[52631, 19], [19181, 13], [26201, 4], [23495, 6], [23495, 15], [11483, 8], [11590, 17], [16167, 2], [16784, 10]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43047, 23495, 54932, 11590, 65969, 52631, 90270, 52650], "class": "4"}, "383": {"top_similar": [[297, 1.0], [327, 1.0], [383, 1.0]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  x = x + num\n\nprint x", "fingerprint": [[11519, 8], [26201, 4], [28310, 13], [58693, 11], [23495, 6], [10150, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "4"}, "384": {"top_similar": [[384, 1.0], [8, 0.875], [96, 0.65]], "tokens": ["V", "=", "0", "\n", "print", "V", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nnum = 0\nprint num\nfor num in range(10):\n  if (num % 5 == 0):\n\tnum = num + num\n\t\n\t\nprint num \n  ", "fingerprint": [[16784, 17], [10125, 33], [19291, 20], [11879, 26], [11294, 3], [11483, 15], [23495, 13], [41022, 23], [10619, 6], [25, 34], [23495, 24], [25976, 11], [40750, 2], [28310, 31], [58693, 29], [16167, 9]], "k_gram_hashes": [90380, 57605, 40750, 11294, 52610, 89335, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "7"}, "385": {"top_similar": [[385, 1.0], [172, 0.6774193548387096], [237, 0.6206896551724138]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "0", "\n", "if", "V", "%", "3", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "UNK", ":", "\n", "\t", "V", "=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  y = 0\n  if num % 3 == 0:\n\tx = x + num\n  elif num % 5 == 0:\n\tx = x + num\n  else:\n\tx = x\nprint x\n  ", "fingerprint": [[19291, 32], [11519, 8], [28310, 26], [58693, 24], [11879, 48], [25, 54], [41720, 19], [134, 29], [19201, 16], [58685, 51], [40733, 12], [10168, 44], [10125, 53], [58693, 40], [57605, 11], [1962, 45], [6039, 30], [11879, 37], [28310, 42], [11879, 21], [18189, 14], [10529, 13], [23495, 6], [25976, 4], [10127, 28], [41720, 35], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90380, 57605, 40733, 10529, 18189, 89526, 19201, 43940, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10168, 1962, 88295, 54938, 11879, 78958, 90404, 58685, 89325, 10125, 25, 1169, 52610], "class": "3"}, "386": {"top_similar": [[106, 1.0], [386, 1.0], [26, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "%", "UNK", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  \n  x = 20 % 111\n  print x", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [20165, 13], [58644, 11], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58644, 87523, 20165, 87325, 11294, 52605], "class": "1"}, "387": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum += num\n\nprint sum", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "388": {"top_similar": [[388, 1.0], [46, 0.6923076923076923], [113, 0.6296296296296297]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "if", "V", "%", "5", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nx = 0\nfor num in range(1000):\n  if num % 3 == 0:\n  \tx=x+num\n\tif num % 5 == 0:\n\t  x=x+num\n\nprint x\n\t", "fingerprint": [[58693, 39], [58693, 24], [10439, 36], [11609, 21], [19291, 31], [41720, 19], [19201, 16], [11483, 12], [0, 44], [28310, 41], [18189, 29], [28310, 26], [23495, 10], [14158, 37], [16167, 6], [41720, 34], [10529, 28], [26201, 8], [10619, 3], [10125, 43], [18189, 14], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89333, 10529, 18189, 89528, 19291, 47990, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 0, 25, 1169, 52610], "class": "4"}, "389": {"top_similar": [[389, 1.0], [17, 0.76], [46, 0.76]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "V", "%", "5", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "if", "V", "%", "3", "==", "0", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\na = 0\n\nfor num in range(1000):\n\tif num % 5 == 0:\n\t\ta = a + num\n\tif num % 3 == 0:\n\t\ta = a + num\n\t\nprint a", "fingerprint": [[10133, 28], [28310, 26], [11654, 21], [404, 29], [18189, 30], [41720, 19], [11843, 12], [19201, 32], [58693, 40], [10125, 44], [23495, 10], [16167, 6], [25, 45], [58693, 24], [26201, 8], [28310, 42], [10619, 3], [18189, 14], [19291, 16], [41720, 35], [11654, 37], [40735, 2]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77354, 18189, 89528, 19291, 47990, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10133, 404, 18189, 89526, 19201, 43940, 63702, 41720, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "390": {"top_similar": [[390, 1.0], [150, 0.6829268292682927], [388, 0.5714285714285714]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "if", "V", "%", "5", "==", "0", ":", "\n", "UNK", "V", "=", "V", "+", "V", "\n", "", "", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor i in range(0, 1000):\n  if i % 3 == 0 and i % 5 == 0:\n\tsum = sum + i\n\tif i % 3 == 0:\n\t  sum = sum + i\n\t  if i % 5 == 0:\n\t\t  sum = sum + i\n\t\t  \nprint sum", "fingerprint": [[10125, 66], [19291, 24], [41720, 27], [18189, 37], [10529, 36], [10529, 51], [0, 67], [18189, 16], [40589, 21], [41720, 57], [10439, 44], [14158, 45], [28310, 64], [41720, 42], [4014, 22], [58693, 62], [28310, 34], [23495, 12], [16167, 6], [34301, 10], [58693, 32], [19201, 39], [18189, 52], [25216, 8], [10619, 3], [11483, 14], [28310, 49], [19201, 18], [58693, 47], [40735, 2], [12104, 59], [11879, 29], [19291, 54]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41262, 34301, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89333, 10529, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89333, 10529, 18189, 89528, 19291, 47990, 63702, 41720, 54943, 12104, 89083, 90404, 58693, 89729, 28310, 89325, 10125, 0, 0, 25, 1169], "class": "4"}, "391": {"top_similar": [[391, 1.0], [10, 0.625], [53, 0.625]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "5", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n\n  num = 5\n  print x", "fingerprint": [[11519, 8], [23495, 6], [25976, 4], [16167, 2], [57740, 11], [11294, 13], [46825, 12]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90383, 57740, 46825, 11294, 52605], "class": "1"}, "392": {"top_similar": [[52, 1.0], [62, 1.0], [63, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsumma = 0\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsumma += num\n\t\nprint summa", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [10125, 32], [23495, 10], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "393": {"top_similar": [[393, 1.0], [173, 0.18333333333333332], [111, 0.15384615384615385]], "tokens": ["UNK", "V", "(", "V", ",", "V", ")", ":", "\n", "    ", "UNK", "V", "(", "(", "V", "for", "V", "in", "V", "(", "V", ")", "if", "0", "in", "(", "V", "%", "V", "for", "V", "in", "V", ")", ")", ")", "\n", "", "V", "=", "1000", "\n", "V", "=", "[", "3", ",", "5", "]", "\n", "print", "V", "(", "V", ",", "V", ")", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef sum_of_divisors(below, divisors):\n    return sum((n for n in xrange(below) if 0 in (n % d for d in divisors)))\n\nmax = 1000\nnums = [3, 5]\n\nprint sum_of_divisors(max, nums)", "fingerprint": [[12133, 41], [16166, 31], [43268, 45], [16167, 17], [58595, 39], [58296, 43], [22237, 15], [26296, 52], [26291, 19], [33471, 46], [22655, 21], [34391, 4], [24884, 12], [10303, 8], [2008, 37], [14759, 24], [11294, 49], [17107, 22], [20215, 27], [22237, 29], [10169, 36], [23495, 6], [22775, 34], [8054, 9], [26296, 2], [22500, 35]], "k_gram_hashes": [89067, 89684, 26296, 89864, 34391, 89622, 23495, 54903, 10303, 8054, 89067, 89652, 24884, 26290, 89594, 22237, 89459, 16167, 89684, 26291, 89603, 22655, 17107, 40827, 14759, 26289, 89549, 20215, 89594, 22237, 89459, 16166, 89606, 22781, 22775, 22500, 10169, 2008, 90402, 58595, 85319, 12133, 90395, 58296, 71836, 43268, 33471, 48200, 73150, 11294, 52617, 89684, 26296, 89864, 34391], "class": "6"}, "394": {"top_similar": [[394, 1.0], [99, 0.9047619047619048], [8, 0.6190476190476191]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "    ", "UNK", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "", "print", "(", "V", "(", "V", ")", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\n\nfor num in range(10):\n  if (num%5 == 0):\n    global sum\n    sum = sum + num\nprint(str(sum))\n\t", "fingerprint": [[10125, 33], [25976, 8], [1137, 35], [40735, 2], [41022, 20], [16167, 6], [11483, 12], [23495, 21], [58693, 29], [26292, 37], [26291, 39], [19291, 17], [10303, 23], [23495, 10], [12133, 27], [25, 34], [16784, 14], [28310, 31], [10619, 3], [8054, 24]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54903, 10303, 8054, 89060, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1137, 51209, 26292, 89684, 26291, 89606, 22775], "class": "7"}, "395": {"top_similar": [[395, 1.0], [221, 0.45454545454545453], [255, 0.42857142857142855]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "5", ")", "==", "0", ")", ":", "\n", "  \t", "print", "V", "+", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\t\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if((num % 5) == 0 ):\n  \tprint num + num\n  ", "fingerprint": [[19271, 14], [16752, 10], [23690, 16], [23495, 6], [28310, 25], [24884, 11], [25976, 4], [23495, 19], [11590, 21], [11483, 8], [52618, 23], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89528, 19271, 47101, 23690, 63686, 41022, 23495, 54932, 11590, 65969, 52618, 89729, 28310, 89325, 10125], "class": "7"}, "396": {"top_similar": [[396, 1.0], [240, 0.4444444444444444], [267, 0.4]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "(", "7", ")", "\n", "UNK", "%", "7", "\n", "print", "UNK", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  range(7)\n  20 % 7\n  print 20\n  ", "fingerprint": [[22543, 13], [11519, 8], [19310, 16], [26201, 4], [23495, 6], [12069, 14], [25391, 11], [11293, 18], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62742, 89664, 25391, 49100, 22543, 12069, 87504, 19310, 48850, 11293, 52565, 87300], "class": "4"}, "397": {"top_similar": [[397, 1.0], [14, 0.6521739130434783], [104, 0.6521739130434783]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "if", "(", "V", "%", "3", "==", "1", ")", "or", "(", "V", "%", "5", "==", "1", ")", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n\tif (num % 3 == 1) or (num % 5 == 1):\n\t\tsum = sum + num\n  \nprint sum", "fingerprint": [[25, 39], [38997, 28], [11843, 12], [40735, 2], [16167, 6], [19291, 25], [11654, 31], [19201, 17], [39010, 20], [10125, 38], [28310, 36], [24087, 21], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11843, 77322, 16784, 26289, 89526, 19201, 43939, 63641, 39010, 24087, 81584, 26289, 89528, 19291, 47989, 63641, 38997, 23495, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "398": {"top_similar": [[398, 1.0], [15, 0.5833333333333334], [74, 0.47058823529411764]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "%", "5", "UNK", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", ":", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(100):\n  if num%3 == 0 and num%5 != 0: \n\tsum += num\n\nfor num in range(100):\n  if num%5 == 0: sum += num\nprint sum", "fingerprint": [[26246, 39], [41759, 50], [85010, 53], [16167, 37], [10150, 55], [85010, 30], [78971, 28], [10125, 32], [18189, 45], [11879, 27], [19201, 16], [11483, 12], [11483, 43], [19303, 22], [56696, 51], [10, 33], [16167, 6], [23495, 10], [41720, 25], [40589, 19], [494, 34], [10619, 3], [26246, 8], [18189, 14], [40735, 2], [19291, 47], [4014, 20], [23495, 41]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4014, 89528, 19303, 48530, 88002, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 10, 494, 22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63702, 41759, 56696, 90989, 85010, 89325, 10150, 1169], "class": "3"}, "399": {"top_similar": [[399, 1.0], [207, 0.5588235294117647], [349, 0.45714285714285713]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "V", "=", "V", "%", "7", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "V", "\n", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum=0\nfor num in range(10):\n  rem=num%3\n  if rem==0:\n\tsum=sum+rem\n\t\n  rem1=num%7  \n  if rem1==0:\n\tsum=sum+rem\n\nend \n\nprint sum\n", "fingerprint": [[1985, 54], [58693, 48], [11519, 12], [28310, 50], [41720, 23], [58693, 28], [10125, 52], [58689, 35], [19310, 37], [18211, 40], [10529, 39], [44, 53], [23495, 10], [16167, 6], [18211, 20], [58689, 15], [19175, 17], [2008, 33], [41720, 43], [10619, 3], [25976, 8], [11879, 45], [11879, 25], [10169, 32], [10529, 19], [40735, 2], [28310, 30]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10169, 2008, 90404, 58689, 89529, 19310, 48833, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 44, 1985, 89350, 11294, 52610], "class": "1"}, "400": {"top_similar": [[400, 1.0], [52, 0.8823529411764706], [62, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "UNK", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\nfor num in range(1000):\n  if x % 3 == 0 | x % 5 == 0:\n\tsum += x\n\n  \nprint sum\n  ", "fingerprint": [[40735, 2], [18189, 14], [11879, 27], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [10125, 32], [23495, 10], [42479, 19], [26201, 8], [85010, 30], [78971, 28], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63718, 42479, 89064, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "401": {"top_similar": [[401, 1.0], [89, 0.8461538461538461], [313, 0.7692307692307693]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(10):\n  if num%3 == 0 or num%5 == 0:\n\tprint num\n#print sum", "fingerprint": [[52610, 29], [25976, 8], [40735, 2], [18189, 14], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [11860, 27], [23495, 10], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52610, 89325, 10125], "class": "3"}, "402": {"top_similar": [[402, 1.0], [10, 0.6], [53, 0.6]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "10", "%", "3", "\n", "V", "=", "10", "%", "5", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  num = 10 % 3\n  num = 10 % 5\n  print x", "fingerprint": [[19265, 19], [11519, 8], [11294, 21], [58374, 11], [23495, 6], [19175, 13], [25976, 4], [12133, 15], [58374, 17], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90397, 58374, 75351, 19175, 42794, 12133, 90397, 58374, 75353, 19265, 46825, 11294, 52605], "class": "1"}, "403": {"top_similar": [[403, 1.0], [98, 0.03571428571428571], [131, 0.03125]], "tokens": ["3", "*", "UNK", "*", "UNK", "/", "2", "+", "5", "*", "UNK", "*", "UNK", "/", "2", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n3 * 333 * 334 / 2 + 5 * 200 * 201 / 2", "fingerprint": [[30302, 3], [35428, 5], [30299, 1], [27374, 7], [30299, 9]], "k_gram_hashes": [43198, 30299, 87748, 30302, 87862, 35428, 45158, 27374, 47248, 30299, 87748, 30302, 87862], "class": "4"}, "404": {"top_similar": [[404, 1.0], [274, 0.7727272727272727], [45, 0.6190476190476191]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "\t", "if", "(", "V", "%", "2", "==", "0", ")", ":", "\n", "\t\t", "V", "=", "V", "+", "V", "\n", "print", "V", "+", "UNK", "+", "V", "%", "3", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#print letter\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(10):\n\tif (num % 2 == 0):\n\t\tsum = sum + num\n\t\tprint num +\"  \"+ num % 3\n\t  \nprint sum", "fingerprint": [[58693, 26], [19246, 17], [25976, 8], [11843, 12], [40735, 2], [19175, 37], [41022, 20], [16167, 6], [11294, 30], [28314, 35], [28273, 33], [23495, 21], [11654, 23], [10125, 39], [23495, 10], [28310, 28], [16784, 14], [25, 40], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54938, 11843, 77322, 16784, 26289, 89527, 19246, 45965, 63686, 41022, 23495, 54933, 11654, 68833, 90404, 58693, 89729, 28310, 89350, 11294, 52618, 89728, 28273, 87704, 28314, 89526, 19175, 42750, 10125, 25, 1169], "class": "7"}, "405": {"top_similar": [[405, 1.0], [379, 0.7058823529411765], [108, 0.5882352941176471]], "tokens": ["for", "V", "in", "V", "(", "1", ",", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "print", "(", "V", ")", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1,1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tsum = sum + num\n\tprint (sum)\n  ", "fingerprint": [[34301, 6], [18189, 12], [19291, 20], [11262, 32], [19201, 14], [22500, 36], [25171, 4], [26291, 34], [11879, 25], [11483, 10], [41720, 23], [42344, 17], [58693, 28], [23495, 8], [16167, 2], [28310, 30]], "k_gram_hashes": [22237, 89459, 16167, 89659, 25171, 39237, 34301, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89350, 11262, 51209, 26291, 89600, 22500, 10125], "class": "4"}, "406": {"top_similar": [[406, 1.0], [6, 0.6], [18, 0.6]], "tokens": ["for", "V", "in", "V", "(", "UNK", ")", ":", "\n", "  ", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(30):\n  print num\n  ", "fingerprint": [[26246, 4], [23495, 6], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89683, 26246, 87597, 23495, 54930, 11500, 61919, 52610, 89325], "class": "1"}, "407": {"top_similar": [[407, 1.0], [34, 0.3333333333333333], [211, 0.3111111111111111]], "tokens": ["UNK", "\n", "V", "=", "1000", "\n", "UNK", "V", "(", ")", ":", "\n", "    ", "UNK", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "3", ",", "V", ")", ":", "\n", "        ", "if", "V", "(", "V", ")", ":", "\n", "UNK", "V", "+=", "V", "\n", "", "", "print", "(", "V", ")", "\n", "", "UNK", "V", "(", "V", ")", ":", "\n", "    ", "UNK", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", "", ""], "source": "'''\nIf we list all the natural numbers below 10 that are multiples of 3 or 5, \nwe get 3, 5, 6 and 9. The sum of these multiples is 23.\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n'''\n\nend = 1000\n\ndef Solution01():\n    '''\n        Solved by brute force\n        #OPTIMIZE\n    '''\n    sum = 0\n    for i in range(3, end):\n        if isMultiple(i):\n            sum += i \n    print(sum)\n\ndef isMultiple(i):\n    return (i % 3 == 0) or (i % 5 == 0)", "fingerprint": [[25261, 23], [58595, 3], [23495, 27], [19291, 70], [23495, 9], [8504, 30], [16167, 21], [19201, 62], [1979, 50], [26291, 46], [41035, 65], [26289, 68], [26291, 53], [23495, 35], [10168, 49], [10619, 18], [40735, 17], [12133, 14], [10313, 29], [25, 43], [24822, 8], [12133, 1], [22500, 48], [12104, 5], [23495, 55], [8015, 12], [10303, 11], [26289, 60], [18192, 31], [12104, 37], [8022, 58], [24087, 66], [1137, 44], [10303, 57], [85010, 40], [26291, 33], [10125, 42], [34391, 25]], "k_gram_hashes": [87344, 12133, 90402, 58595, 85318, 12104, 89067, 89651, 24822, 23495, 54903, 10303, 8015, 87344, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89661, 25261, 43289, 34391, 89622, 23495, 54904, 10313, 8504, 18192, 89684, 26291, 89622, 23495, 54943, 12104, 89096, 90989, 85010, 89325, 10125, 25, 1137, 51209, 26291, 89600, 22500, 10168, 1979, 89067, 89684, 26291, 89622, 23495, 54903, 10303, 8022, 87659, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 40995], "class": "5"}, "408": {"top_similar": [[408, 1.0], [357, 0.8333333333333334], [228, 0.56]], "tokens": ["print", "1", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "==", "0", ":", "\n", "\t", "UNK", "\n", "", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "print", "V", "\n", "", "elif", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "\n", "", "", "print", "1000", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nprint 1\nfor num in range(1000):\n  if num == 0:\n\tcontinue\n  if num  % 3 == 0:\n  \tprint num\n  elif num % 5 == 0:\n\tprint num\nprint 1000", "fingerprint": [[10133, 21], [11590, 30], [134, 35], [52610, 45], [23495, 9], [6039, 36], [11878, 18], [19201, 25], [41720, 28], [19291, 38], [41720, 41], [404, 22], [10127, 34], [41720, 16], [11860, 43], [52610, 32], [11483, 11], [26201, 7], [25, 48], [18189, 23], [18211, 13], [10125, 47], [16167, 5], [10619, 2]], "k_gram_hashes": [51485, 38710, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18211, 90515, 63702, 41720, 54938, 11878, 78890, 87300, 10133, 404, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11590, 65969, 52610, 89325, 10127, 134, 6039, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52610, 89325, 10125, 25, 1167], "class": "4"}, "409": {"top_similar": [[409, 1.0], [213, 0.6538461538461539], [447, 0.6153846153846154]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "\n", "if", "(", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\ntotal = 0\nfor num in range(10):\n  print num\n  if ((num%3 == 0) or (num%5 == 0)):\n\ttotal = total + num\nprint num\n    ", "fingerprint": [[16752, 17], [19201, 21], [22797, 33], [58693, 39], [10497, 16], [28310, 41], [19291, 29], [24087, 25], [23495, 10], [16167, 6], [41006, 32], [41035, 24], [24884, 18], [52610, 14], [10619, 3], [10125, 43], [25976, 8], [11500, 12], [25, 44], [11879, 36], [40735, 2], [26289, 27]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52610, 89333, 10497, 16752, 24884, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41006, 22797, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "3"}, "410": {"top_similar": [[410, 1.0], [4, 0.4166666666666667], [354, 0.4166666666666667]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "UNK", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "  ", "print", "V", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n x = num % 5\n if x == 0:\n  print x", "fingerprint": [[11500, 21], [41720, 19], [19265, 13], [23495, 6], [10529, 15], [25976, 4], [12104, 8], [18211, 16], [58689, 11], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54943, 12104, 89083, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54930, 11500, 61919, 52605, 89100], "class": "7"}, "411": {"top_similar": [[411, 1.0], [81, 0.7857142857142857], [0, 0.6428571428571429]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "UNK", "0", "and", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "print", "V", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  if num > 0 and num%3 == 0 or num%5 == 0:\n  \tprint num\n", "fingerprint": [[52610, 29], [40589, 13], [23495, 6], [18223, 10], [25976, 4], [41720, 25], [11590, 27], [42344, 19], [19291, 22], [4014, 14], [11483, 8], [19201, 16], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18223, 91055, 87976, 40589, 4014, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11590, 65969, 52610, 89325, 10125], "class": "7"}, "412": {"top_similar": [[412, 1.0], [367, 0.6666666666666666], [71, 0.5714285714285714]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  \t", "print", "10", "%", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10): \n  \tprint 10%3\n  ", "fingerprint": [[52299, 10], [11590, 8], [19175, 12], [23495, 6], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54932, 11590, 65962, 52299, 75351, 19175, 42750], "class": "1"}, "413": {"top_similar": [[413, 1.0], [222, 0.7419354838709677], [263, 0.6571428571428571]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "V", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "V", "=", "V", "%", "5", "\n", "", "if", "V", "==", "0", ":", "\n", "  ", "V", "+=", "V", "\n", "", "print", "V", ""], "source": "for n in range(10):\n  a=n%3\n  \n  if a==0 :\n\tn+=n\n \n  \n  \n\nfor k in range(10):\n  b=k%5\n  \nif b==0 :\n  k+=k\n \n\nprint k", "fingerprint": [[11519, 8], [41720, 49], [11519, 51], [10125, 26], [18211, 16], [58689, 40], [494, 28], [41720, 19], [11519, 37], [10529, 15], [10, 27], [25976, 33], [78971, 22], [16167, 31], [23495, 35], [85010, 24], [19175, 13], [85010, 54], [10150, 56], [19265, 42], [10133, 44], [58689, 11], [62771, 52], [18211, 46], [404, 45], [11879, 21], [23495, 6], [25976, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10529, 18211, 90515, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 10, 494, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11519, 62758, 90404, 58689, 89528, 19265, 46800, 10133, 404, 18211, 90515, 63702, 41720, 54930, 11519, 62771, 90989, 85010, 89325, 10150, 1169], "class": "7"}, "414": {"top_similar": [[6, 1.0], [18, 1.0], [87, 1.0]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor x in range(10):\n  print x", "fingerprint": [[23495, 6], [11500, 8], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52605], "class": "1"}, "415": {"top_similar": [[415, 1.0], [146, 0.875], [30, 0.6666666666666666]], "tokens": ["V", "=", "V", "\n", "V", "=", "V", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "print", "V", "", "", ""], "source": "x = int\nnum = int\n\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n\tprint num", "fingerprint": [[23495, 14], [41720, 29], [42344, 23], [10619, 7], [11860, 31], [19291, 26], [26201, 12], [11483, 16], [58685, 1], [18189, 18], [16167, 10], [58685, 5], [19201, 20], [12133, 3]], "k_gram_hashes": [90404, 58685, 89369, 12133, 90404, 58685, 89335, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11860, 78119, 52605, 89100], "class": "4"}, "416": {"top_similar": [[416, 1.0], [167, 0.4375], [0, 0.42857142857142855]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "1", "or", "V", "%", "5", "==", "1", ")", ":", "print", "V", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#for num in range(1000):\n#  range = 1\n#while (range < 1000):\n#  if ( range % 7 == 1 ) : print range\n#\trange = range + 1\n\nfor num in range(10):\n  if ( num % 3 == 1 or num % 5 == 1 ) : print num\n\t", "fingerprint": [[23515, 23], [16784, 10], [38997, 22], [19201, 13], [23495, 6], [40319, 16], [19291, 19], [25976, 4], [11483, 8], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43939, 63670, 40319, 82989, 89528, 19291, 47989, 63641, 38997, 23515, 55844, 52610, 89325], "class": "7"}, "417": {"top_similar": [[417, 1.0], [367, 0.4444444444444444], [168, 0.4]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "==", "UNK", ":", "\n", "  \t", "print", "V", "\n", "", "", ""], "source": "for x in range(10):\n  if x == 6:\n  \tprint x\n  ", "fingerprint": [[64737, 12], [23495, 6], [25976, 4], [52610, 17], [11483, 8], [54932, 14], [11590, 15], [18211, 10], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18211, 90538, 64737, 88295, 54932, 11590, 65969, 52610, 89325, 10125], "class": "1"}, "418": {"top_similar": [[418, 1.0], [135, 0.8421052631578947], [171, 0.7272727272727273]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", ")", "==", "0", "or", "(", "V", "%", "5", ")", "==", "0", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if (num % 3) == 0 or (num % 5) == 0:\n\tsum += num\n\nprint sum\n", "fingerprint": [[78971, 32], [10125, 36], [41720, 29], [40735, 2], [85010, 34], [23690, 19], [16167, 6], [11483, 12], [42312, 21], [19181, 17], [23690, 27], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [19271, 25], [25, 37], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19181, 43051, 23690, 63715, 42312, 81584, 26289, 89528, 19271, 47101, 23690, 63702, 41720, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169, 52610], "class": "6"}, "419": {"top_similar": [[419, 1.0], [216, 0.8], [3, 0.5]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "\t", "V", "%", "V", "(", "3", ")", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n\t\n\tx % range(3) ", "fingerprint": [[23495, 6], [20217, 11], [11879, 8], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54938, 11879, 78939, 89549, 20217, 89661, 25256, 43020], "class": "4"}, "420": {"top_similar": [[26, 1.0], [420, 1.0], [21, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "UNK", "%", "1000", "\n", "print", "V", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000): \n  \n  x=11%1000\n  print x", "fingerprint": [[11519, 8], [26201, 4], [23495, 6], [58644, 11], [20120, 13], [11294, 15], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90403, 58644, 87522, 20120, 85300, 11294, 52605], "class": "4"}, "421": {"top_similar": [[421, 1.0], [399, 0.3684210526315789], [207, 0.3508771929824561]], "tokens": ["V", "=", "0", "\n", "V", "=", "0", "\n", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "V", "%", "3", "\n", "if", "V", "==", "0", ":", "\n", "\t", "if", "V", "not", "in", "V", ":", "\n", "\t  ", "print", "V", "\n", "V", "[", "V", "]", "=", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "V", "%", "5", "\n", "if", "V", "==", "0", ":", "\n", "\t", "if", "V", "not", "in", "V", ":", "\n", "\t  ", "print", "V", "\n", "V", "[", "V", "]", "=", "V", "\n", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "V", "+", "1", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nans = 0\nnumlist = 0\ncount = 0\n#print ans\nfor num in range(1000):\n  a = num % 3\n  if a == 0:\n\tif a not in numlist:\n\t  print a\n\t  numlist[count] = num\n  \t  ans = ans + num\n  b = num % 5\n  if b == 0:\n\tif b not in numlist:\n\t  print b\n\t  numlist[count] = num\n\t  ans = ans + num\n  count = count + 1\t  \nprint ans\t", "fingerprint": [[10529, 66], [10150, 105], [18211, 67], [44, 59], [58689, 23], [10529, 27], [18214, 74], [23495, 18], [58693, 54], [12133, 91], [12140, 84], [13319, 42], [16182, 38], [58689, 62], [58693, 101], [11843, 72], [27185, 103], [10125, 58], [10420, 41], [13319, 81], [18211, 28], [58693, 93], [72891, 86], [12133, 3], [10125, 97], [26201, 16], [11843, 33], [72891, 47], [12133, 7], [2008, 99], [40769, 6], [58685, 89], [11519, 20], [19265, 64], [28310, 95], [40735, 10], [10420, 80], [40769, 2], [44, 98], [16167, 14], [58685, 50], [28310, 56], [16182, 77], [2008, 60], [12140, 45], [41720, 70], [19175, 25], [18214, 35], [12133, 52], [10619, 11], [41720, 31]], "k_gram_hashes": [90380, 57605, 40769, 12133, 90380, 57605, 40769, 12133, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90404, 58689, 89526, 19175, 42758, 10529, 18211, 90515, 63702, 41720, 54938, 11843, 77354, 18214, 90637, 69209, 16182, 90320, 54906, 10420, 13319, 52610, 89369, 12140, 90719, 72891, 90748, 74204, 58685, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90404, 58689, 89528, 19265, 46808, 10529, 18211, 90515, 63702, 41720, 54938, 11843, 77354, 18214, 90637, 69209, 16182, 90320, 54906, 10420, 13319, 52610, 89369, 12140, 90719, 72891, 90748, 74204, 58685, 89369, 12133, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90404, 58693, 89704, 27185, 38700, 10150, 1169], "class": "4"}, "422": {"top_similar": [[422, 1.0], [212, 0.5789473684210527], [336, 0.5714285714285714]], "tokens": ["V", "=", "0", ";", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "1", "or", "V", "%", "5", "==", "1", ":", "\n", "\t", "V", "+=", "V", ";", "\n", "", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\na = 0;\nfor num in range(1000):\n  if num%3==1 or num%5==1:\n\ta += num;\n\t\n\t\t\t\t\t\t\t", "fingerprint": [[19291, 23], [19201, 17], [41675, 2], [18189, 15], [16167, 7], [11483, 13], [11879, 28], [52875, 33], [10619, 4], [85031, 31], [40319, 20], [23495, 11], [26201, 9], [39695, 26], [78971, 29]], "k_gram_hashes": [90380, 57626, 41675, 52885, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43939, 63670, 40319, 82989, 89528, 19291, 47989, 63657, 39695, 54938, 11879, 78971, 90989, 85031, 90275, 52875, 10125], "class": "4"}, "423": {"top_similar": [[61, 1.0], [288, 1.0], [340, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ns = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0 : \n\ts=s+num \nprint s", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "424": {"top_similar": [[424, 1.0], [34, 0.625], [14, 0.6]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1", ",", "10", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "  \t", "print", "V", "\n", "V", "+=", "1", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nto = 0\nfor num in range(1,10):\n  if (num % 3 == 0) or (num % 5 == 0 ):\n  \tprint num\n\tto+=1\nprint to\n\t", "fingerprint": [[25171, 8], [25, 42], [12146, 37], [16784, 16], [19291, 27], [11483, 14], [23495, 12], [34076, 10], [16167, 6], [24087, 23], [41035, 22], [19201, 19], [52610, 35], [26289, 25], [40735, 2], [41022, 30], [11590, 33], [10125, 41], [38700, 40], [10619, 3], [23495, 31]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89659, 25171, 39232, 34076, 75447, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54932, 11590, 65969, 52610, 89369, 12146, 90964, 83885, 38700, 10125, 25, 1169, 52610], "class": "3"}, "425": {"top_similar": [[425, 1.0], [64, 0.8571428571428571], [428, 0.75]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  if num % 3 == 0:\n  \tsum = sum + num\n  #elif num % 5 == 0:\n  \t#sum = sum + num\n\nprint sum\n  ", "fingerprint": [[26201, 4], [19201, 12], [28310, 22], [23495, 6], [10125, 24], [25, 25], [41720, 15], [58693, 20], [11483, 8], [18189, 10], [16167, 2], [11609, 17]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "4"}, "426": {"top_similar": [[426, 1.0], [14, 0.9], [141, 0.9]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "1", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(1000):\n  if (num % 3 == 0) or (num % 5 == 0):\n\tx = x + 1\n\t\nprint x", "fingerprint": [[40735, 2], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3], [27185, 36]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89704, 27185, 38700, 10125, 25, 1169], "class": "4"}, "427": {"top_similar": [[427, 1.0], [318, 0.8333333333333334], [240, 0.8]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "%", "3", "\n", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  x % 3\n  ", "fingerprint": [[19175, 11], [23495, 6], [11519, 8], [26201, 4], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62739, 89526, 19175, 42750], "class": "1"}, "428": {"top_similar": [[428, 1.0], [61, 0.8823529411764706], [219, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\ntotal = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n  \ttotal = total + num\n\nprint num", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [11609, 27], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}, "429": {"top_similar": [[429, 1.0], [27, 0.3333333333333333], [144, 0.3333333333333333]], "tokens": ["V", "=", "0", "\n", "UNK", "V", "(", "V", ")", ":", "\n", "  ", "V", "=", "0", "\n", "for", "V", "in", "V", "(", "0", ",", "10", ",", "V", ")", ":", "\n", "  \t", "V", "+=", "V", "\n", "UNK", "V", "\n", "", "", "print", "V", "(", "3", ")", "+", "V", "(", "5", ")", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nanswer = 0\ndef schleife(mul):\n  answer = 0\n  for num in range(0,10,mul):\n  \tanswer+= num\n  \treturn num\n  \nprint schleife(3) + schleife(5)\n", "fingerprint": [[34081, 22], [25216, 20], [12104, 33], [57605, 13], [25256, 41], [1169, 38], [34391, 24], [11609, 28], [12104, 3], [23495, 26], [10125, 36], [85010, 31], [25346, 46], [23495, 8], [66821, 29], [11519, 10], [22904, 43], [26291, 6], [10619, 15], [40735, 14], [16167, 18], [40768, 2], [25, 37]], "k_gram_hashes": [90380, 57605, 40768, 12104, 89067, 89684, 26291, 89622, 23495, 54930, 11519, 62758, 90380, 57605, 40735, 10619, 22237, 89459, 16167, 89660, 25216, 41257, 34081, 75689, 34391, 89622, 23495, 54932, 11609, 66821, 90989, 85010, 89368, 12104, 89060, 89325, 10125, 25, 1169, 52617, 89661, 25256, 43033, 22904, 28317, 89663, 25346, 47075], "class": "7"}, "430": {"top_similar": [[241, 1.0], [430, 1.0], [49, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "  \t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsoma = 0\nfor num in range(1000):\n  if num % 3 == 0 or num % 5 == 0:\n  \tsoma += num\n\n\t\nprint soma", "fingerprint": [[40735, 2], [18189, 14], [16167, 6], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [11609, 27], [10125, 32], [23495, 10], [66821, 28], [26201, 8], [85010, 30], [10619, 3], [19291, 22], [25, 33]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54932, 11609, 66821, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "431": {"top_similar": [[431, 1.0], [15, 0.48717948717948717], [31, 0.47368421052631576]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "and", "V", "UNK", "0", ":", "V", "=", "V", "+", "V", "\n", "", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "5", "==", "0", "and", "V", "UNK", "0", ":", "V", "=", "V", "+", "V", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(10):\n  if num%3 == 0 and num != 0: sum = sum+num\nfor num in range(10):\n  if num%5 == 0 and num != 0: sum = sum+num\nprint sum", "fingerprint": [[494, 31], [19291, 44], [25976, 36], [41759, 23], [11483, 40], [10150, 58], [10135, 30], [4048, 48], [19201, 16], [11483, 12], [56683, 52], [4048, 20], [28310, 28], [23495, 38], [23495, 10], [16167, 6], [58693, 26], [40589, 19], [58693, 54], [10619, 3], [16167, 34], [25976, 8], [28310, 56], [18189, 14], [41759, 51], [40589, 47], [40735, 2], [56683, 24], [18189, 42]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63676, 40589, 4048, 91055, 88002, 41759, 56683, 90404, 58693, 89729, 28310, 89325, 10135, 494, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89528, 19291, 47990, 63676, 40589, 4048, 91055, 88002, 41759, 56683, 90404, 58693, 89729, 28310, 89325, 10150, 1169], "class": "7"}, "432": {"top_similar": [[432, 1.0], [300, 0.8333333333333334], [43, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "print", "V", "%", "5", "%", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(1000):\n  print num%5%3", "fingerprint": [[26201, 4], [19269, 12], [52614, 10], [23495, 6], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11500, 61919, 52614, 89528, 19269, 47001, 19170], "class": "1"}, "433": {"top_similar": [[433, 1.0], [436, 1.0], [4, 0.75]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "3", "\n", "print", "V", "%", "7", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num % 3\n  print num % 7", "fingerprint": [[11294, 14], [19175, 12], [23495, 6], [52614, 10], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89526, 19175, 42775, 11294, 52614, 89529, 19305], "class": "1"}, "434": {"top_similar": [[434, 1.0], [437, 1.0], [6, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "3", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num % 3", "fingerprint": [[23495, 6], [11500, 8], [52614, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89526, 19170], "class": "1"}, "435": {"top_similar": [[435, 1.0], [42, 0.5], [221, 0.5]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "(", "(", "V", "UNK", "3", "and", "(", "V", "%", "3", ")", "==", "0", ")", "or", "(", "V", "UNK", "5", "and", "(", "V", "%", "5", ")", "==", "0", ")", ")", ":", "\n", "    ", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum=0\nfor num in range(10):\n\n  if ((num>=3 and (num % 3)==0) or (num>=5 and (num % 5)==0)):\n    sum+=num\n\n\t\nprint sum", "fingerprint": [[25, 51], [10304, 45], [85010, 48], [10125, 50], [24884, 15], [26323, 16], [11483, 12], [2609, 20], [26323, 30], [19181, 23], [23495, 10], [23690, 39], [8096, 46], [16167, 6], [42582, 19], [10619, 3], [25976, 8], [24087, 28], [23690, 25], [2609, 34], [46632, 33], [19271, 37], [40735, 2], [16752, 14], [22797, 42]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61122, 16752, 24884, 26323, 91056, 88021, 42582, 2609, 26289, 89526, 19181, 43051, 23690, 63686, 41035, 24087, 81584, 26323, 91058, 88111, 46632, 2609, 26289, 89528, 19271, 47101, 23690, 63686, 41006, 22797, 23495, 54903, 10304, 8096, 90989, 85010, 89325, 10125, 25, 1169], "class": "3"}, "436": {"top_similar": [[433, 1.0], [436, 1.0], [4, 0.75]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "3", "\n", "print", "V", "%", "5", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num % 3\n  print num % 5", "fingerprint": [[11294, 14], [19175, 12], [23495, 6], [52614, 10], [25976, 4], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89526, 19175, 42775, 11294, 52614, 89528, 19260], "class": "1"}, "437": {"top_similar": [[434, 1.0], [437, 1.0], [6, 0.8]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "V", "%", "7", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print num % 7", "fingerprint": [[23495, 6], [11500, 8], [52614, 10], [16167, 2], [25976, 4]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61919, 52614, 89529, 19305], "class": "1"}, "438": {"top_similar": [[202, 1.0], [358, 1.0], [438, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsum = 0\nfor num in range(1000):\n  if (num%3 ==0) or (num%5==0):\n\tsum +=num\nprint sum", "fingerprint": [[78971, 32], [10125, 36], [40735, 2], [85010, 34], [25, 37], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "439": {"top_similar": [[14, 1.0], [141, 1.0], [174, 1.0]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n# prints:\n#\n#     a\n#     b\n\ns=0\nfor x in range(1000):\n  if (x%3==0) or (x%5==0):\n\ts=s+x\n\nprint s", "fingerprint": [[40735, 2], [28310, 36], [16167, 6], [19291, 25], [11483, 12], [19201, 17], [25, 39], [10125, 38], [41022, 28], [24087, 21], [41035, 20], [11879, 31], [23495, 10], [26289, 23], [16784, 14], [26201, 8], [23495, 29], [58693, 34], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16784, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41022, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "440": {"top_similar": [[440, 1.0], [6, 0.6666666666666666], [18, 0.6666666666666666]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "print", "1", "%", "3", "UNK", "", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n  print 1 % 3\"\"", "fingerprint": [[19213, 12], [23495, 6], [25976, 4], [38901, 11], [16167, 2], [11500, 8]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11500, 61894, 51489, 38901, 19213, 44460], "class": "1"}, "441": {"top_similar": [[441, 1.0], [446, 0.6818181818181818], [261, 0.6363636363636364]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "0", "==", "(", "V", "%", "3", ")", "*", "(", "V", "%", "5", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx = 0\nfor num in range(1000):\n  if 0 == (num % 3)*(num % 5):\n\tx = x + num\nprint x", "fingerprint": [[11879, 29], [40735, 2], [17131, 14], [16167, 6], [26289, 23], [11483, 12], [26289, 17], [58693, 32], [10125, 36], [28310, 34], [23495, 27], [22917, 21], [23495, 10], [19181, 19], [26201, 8], [19271, 25], [25, 37], [10619, 3]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61130, 17131, 41907, 63359, 26289, 89526, 19181, 43034, 22917, 28934, 26289, 89528, 19271, 47097, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "442": {"top_similar": [[442, 1.0], [186, 0.8333333333333334], [78, 0.3902439024390244]], "tokens": ["for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "V", "=", "3", "*", "V", "\n", "V", "=", "5", "*", "V", "\n", "if", "(", "V", "<", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "if", "(", "V", "<", "1000", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "V", "=", "V", "+", "V", "\n", "print", "UNK", ",", "V", ""], "source": "for num in range(1000):\n  x = 3*num\n  y = 5*mun\n  \n  if (x<1000):\n\txs = xs+x\n\t\n  if (y<1000):\n\tys = ys+y\n\t\n\t\nerg = xs+ys\n\nprint 'ergebis: ', erg", "fingerprint": [[10497, 21], [11519, 8], [60626, 41], [58693, 48], [23495, 27], [26309, 39], [28310, 50], [372, 37], [60626, 25], [28310, 58], [16784, 22], [12133, 15], [57659, 11], [23495, 43], [16167, 2], [44, 53], [28310, 34], [43199, 12], [58693, 32], [2008, 54], [10125, 52], [26309, 23], [47249, 18], [16784, 38], [11293, 60], [26201, 4], [30335, 19], [23495, 6], [11879, 45], [58693, 56], [10133, 36], [30335, 13], [11879, 29]], "k_gram_hashes": [22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11519, 62758, 90381, 57659, 43199, 30335, 89369, 12133, 90383, 57749, 47249, 30335, 89333, 10497, 16784, 26309, 90447, 60626, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10133, 372, 16784, 26309, 90447, 60626, 85572, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 44, 2008, 90404, 58693, 89729, 28310, 89350, 11293, 52576, 87839], "class": "4"}, "443": {"top_similar": [[443, 1.0], [158, 0.4], [6, 0.3333333333333333]], "tokens": ["for", "V", "in", "V", "(", "10", ")", ":", "\n", "    ", "V", "=", "V", "/", "3", "\n", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#  \n# prints:\n#\n#     a\n#     b\n\nfor num in range(10):\n    x = num/3\nprint x", "fingerprint": [[8083, 9], [23495, 6], [25976, 4], [58697, 11], [10304, 8], [10150, 15], [35375, 13], [16167, 2]], "k_gram_hashes": [22237, 89459, 16167, 89677, 25976, 75447, 23495, 54903, 10304, 8083, 90404, 58697, 89886, 35375, 42750, 10150, 1169], "class": "1"}, "444": {"top_similar": [[444, 1.0], [93, 0.19444444444444445], [295, 0.12]], "tokens": ["V", "=", "V", "(", "V", "(", "1", ",", "UNK", ",", "3", ")", ")", "+", "V", "(", "V", "(", "1", ",", "UNK", ",", "5", ")", ")", "-", "V", "(", "V", "(", "1", ",", "UNK", ",", "UNK", ")", ")", "\n", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsummm = sum(range (1, 1001, 3)) + sum(range (1, 1001, 5)) - sum(range (1, 1001, 15))\nprint summm", "fingerprint": [[22783, 11], [26292, 3], [22785, 23], [58692, 1], [25171, 17], [34351, 31], [33446, 21], [25171, 5], [22775, 35], [34351, 7], [34346, 33], [22904, 12], [22994, 24], [34351, 19], [26292, 15], [25171, 29], [33356, 9], [22525, 36], [26292, 27]], "k_gram_hashes": [90404, 58692, 89684, 26292, 89659, 25171, 39238, 34351, 87816, 33356, 43031, 22783, 22904, 28317, 89684, 26292, 89659, 25171, 39238, 34351, 87818, 33446, 47081, 22785, 22994, 32367, 89684, 26292, 89659, 25171, 39238, 34351, 87838, 34346, 87581, 22775, 22525, 11294], "class": "3"}, "445": {"top_similar": [[445, 1.0], [341, 0.7391304347826086], [221, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "5", ")", "==", "0", "or", "(", "V", "%", "3", ")", "==", "0", ")", ":", "\n", "  \t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", "\n", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\t\n# prints:\n#\n#     a\n#     b\n\na = 0\nfor num in range(1000):\n  if((num % 5) == 0 or (num % 3) == 0):\n  \ta = a + num\nprint a\n  ", "fingerprint": [[19181, 26], [24884, 15], [40735, 2], [25, 41], [42312, 22], [16167, 6], [11483, 12], [58693, 36], [19271, 18], [23690, 28], [26289, 24], [23690, 20], [23495, 10], [28310, 38], [16752, 14], [26201, 8], [10125, 40], [10619, 3], [11609, 33], [23495, 31]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89528, 19271, 47101, 23690, 63715, 42312, 81584, 26289, 89526, 19181, 43051, 23690, 63686, 41022, 23495, 54932, 11609, 66808, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169, 52610], "class": "6"}, "446": {"top_similar": [[446, 1.0], [441, 0.6818181818181818], [261, 0.6086956521739131]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "not", "(", "V", "%", "3", ")", "or", "not", "(", "V", "%", "5", ")", ")", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0\n\nfor num in range(1000):\n  if (not(num%3) or not(num%5)):\n\tsum = sum + num\n\t\nprint sum", "fingerprint": [[24109, 21], [40735, 2], [19271, 26], [25842, 15], [16167, 6], [11483, 12], [22797, 28], [26289, 17], [10125, 38], [28310, 36], [26289, 24], [11879, 31], [23495, 10], [19181, 19], [26201, 8], [25, 39], [58693, 34], [10619, 3], [16774, 14]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16774, 25842, 69434, 26289, 89526, 19181, 43060, 24109, 82542, 69434, 26289, 89528, 19271, 47081, 22797, 23495, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "447": {"top_similar": [[447, 1.0], [213, 0.7083333333333334], [202, 0.6956521739130435]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "  ", "if", "(", "(", "V", "%", "3", "==", "0", ")", "or", "(", "V", "%", "5", "==", "0", ")", ")", ":", "\n", "\t", "V", "+=", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsumm=0\nfor num in range(1000):\n  if ((num%3==0) or (num%5==0)):\n\tsumm+=num\nprint summ", "fingerprint": [[78971, 34], [10125, 38], [19291, 26], [24884, 15], [40735, 2], [24087, 22], [16167, 6], [11879, 33], [11483, 12], [85010, 36], [25, 39], [19201, 18], [26289, 24], [23495, 10], [41035, 21], [22797, 30], [16752, 14], [26201, 8], [10619, 3], [41006, 29]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54930, 11483, 61122, 16752, 24884, 26289, 89526, 19201, 43940, 63686, 41035, 24087, 81584, 26289, 89528, 19291, 47990, 63686, 41006, 22797, 23495, 54938, 11879, 78971, 90989, 85010, 89325, 10125, 25, 1169], "class": "6"}, "448": {"top_similar": [[156, 1.0], [448, 1.0], [61, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "10", ")", ":", "\n", "  ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\nsuma = 0\nfor num in range(10):\n  if num%3 == 0 or num%5 == 0:\n\tsuma = num +suma\n\t\nprint suma", "fingerprint": [[58693, 30], [25976, 8], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [11483, 12], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [25, 35], [10619, 3], [19291, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89677, 25976, 75447, 23495, 54930, 11483, 61154, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "449": {"top_similar": [[0, 0.0], [1, 0.0], [2, 0.0]], "tokens": ["print", "UNK", ""], "source": "print 233168", "fingerprint": [], "k_gram_hashes": [], "class": "6"}, "450": {"top_similar": [[450, 1.0], [61, 0.8823529411764706], [229, 0.8823529411764706]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "   ", "if", "V", "%", "3", "==", "0", "or", "V", "%", "5", "==", "0", ":", "\n", "\t", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nx=0\nfor num in range(1000):\n   if num % 3 == 0 or num % 5 == 0:\t\n\tx = x + num\nprint x", "fingerprint": [[58693, 30], [10125, 34], [40735, 2], [18189, 14], [11879, 27], [16167, 6], [28310, 32], [19201, 16], [41720, 25], [42344, 19], [23495, 10], [26201, 8], [25, 35], [10619, 3], [19291, 22], [11888, 12]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54939, 11888, 79379, 18189, 89526, 19201, 43940, 63715, 42344, 82989, 89528, 19291, 47990, 63702, 41720, 54938, 11879, 78958, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "6"}, "451": {"top_similar": [[451, 1.0], [29, 0.7222222222222222], [69, 0.6666666666666666]], "tokens": ["V", "=", "0", "\n", "for", "V", "in", "V", "(", "1000", ")", ":", "\n", "    ", "if", "V", "%", "3", "==", "0", ":", "\n", "\t  ", "V", "=", "V", "+", "V", "\n", "", "", "print", "V", ""], "source": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nsum = 0  \nfor num in range(1000):\n    if num % 3 == 0:\n\t  sum = sum + num\nprint sum", "fingerprint": [[25, 29], [41720, 19], [6479, 13], [40735, 2], [18189, 14], [16167, 6], [28310, 26], [58693, 24], [19201, 16], [10125, 28], [10439, 21], [23495, 10], [26201, 8], [10268, 12], [10619, 3], [14158, 22]], "k_gram_hashes": [90380, 57605, 40735, 10619, 22237, 89459, 16167, 89682, 26201, 85572, 23495, 54903, 10268, 6479, 18189, 89526, 19201, 43940, 63702, 41720, 54906, 10439, 14158, 90404, 58693, 89729, 28310, 89325, 10125, 25, 1169], "class": "4"}}