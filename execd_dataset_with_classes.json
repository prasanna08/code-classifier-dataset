{"30": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print lette\n#\n# prints:\n#\n#     a\n#     b\n\ndef sum_of_multiples_of_3_and_5(number):\n    sum = 0\n    for i in xrange(number):\n        if i % 3 == 0 or i % 5 == 0:\n            sum += i\n    return sum", "feedback_class": "5"}, "28": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints: x\n#\n#     a\n#     b\n\n# for num in range(1000):\n\n  \n", "feedback_class": "1"}, "29": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n201*100*5+333*167*3-15*33*67", "feedback_class": "1"}, "60": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#\tfor num in range(1000):\n#\t\tprint x", "feedback_class": "1"}, "61": {"source_program": "# In Python, the code\n#\n#     for letter in ['3', '5']:\n#         print x\n#\n# prints:\n# for num in range(1000):\n  \n \n  ", "feedback_class": "1"}, "62": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n", "feedback_class": "1"}, "35": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nend = 1000\n\ndef Solution01():\n    '''\n        Solved by brute force\n        #OPTIMIZE\n    '''\n    sum = 0\n    for i in range(3, end):\n        if isMultiple(i):\n            sum += i \n    print(sum)\n\ndef isMultiple(i):\n    return (i % 3 == 0) or (i % 5 == 0)", "feedback_class": "6"}, "34": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef euler():\n\tthree = 3\n\tfive = 5\n\tkeep = []\n\twhile three < 1000:\n\t\tkeep.append(three)\n\t\tthree = three + 3\n\twhile five < 1000:\n\t\tif five not in keep:\n\t\t\tkeep.append(five)\n\t\tfive = five + 5\n\tfor e in keep:\n\t  print e", "feedback_class": "4"}, "23": {"source_program": "# \n#\n#     for num in range(1000):\n# print number\n# \n\n\n  ", "feedback_class": "1"}, "24": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnumber = 10\ndef multiplesOfThreeOrFiveBelow(number):\n\t  print number", "feedback_class": "5"}, "25": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n", "feedback_class": "1"}, "26": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n#", "feedback_class": "1"}, "27": {"source_program": "\nend = 1000\n\ndef Solution01():\n    '''\n        Solved by brute force\n        #OPTIMIZE\n    '''\n    sum = 0\n    for i in range(3, end):\n        if isMultiple(i):\n            sum += i \n    print(sum)\n\ndef isMultiple(i):\n    return (i % 3 == 0) or (i % 5 == 0)\n  \n  ", "feedback_class": "1"}, "20": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\ndef sum_factors_of_n_below_k(k, n):\n    m = (k-1) // n\n    return n * m * (m+1) // 2\n\ndef solution_01():\n    return (sum_factors_of_n_below_k(1000, 3) + \n            sum_factors_of_n_below_k(1000, 5) - \n            sum_factors_of_n_below_k(1000, 15))", "feedback_class": "6"}, "21": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#\tfor num in range(1000):\n#\t\tprint number", "feedback_class": "1"}, "48": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     3\n#     5\n# for num in range(1000):\n  \n \n  ", "feedback_class": "1"}, "49": {"source_program": "# print x=range(1000)", "feedback_class": "1"}, "46": {"source_program": "# In Python, the code\n#\n#     for numbers in ['x % 3', 'x % 5']:\n#         print x\n#\n# prints:\n# for num in range(1000):5 list[3,4,5]\n  \n \n  ", "feedback_class": "1"}, "47": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000):", "feedback_class": "1"}, "44": {"source_program": "# print range(1000)", "feedback_class": "1"}, "45": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n1000 % 7\n  ", "feedback_class": "1"}, "42": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n3*333*334/2 + 5*200*201/2 - 15*66*67/2", "feedback_class": "1"}, "43": {"source_program": "      ", "feedback_class": "1"}, "40": {"source_program": "'print x'", "feedback_class": "1"}, "41": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000): x\n\n  \n", "feedback_class": "1"}, "1": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n#\tfor num in range(1000):\n#\t\tprint x", "feedback_class": "1"}, "0": {"source_program": "", "feedback_class": "1"}, "3": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#\tfor num in range(1000):\n#\t\tprint range", "feedback_class": "1"}, "2": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n2+2", "feedback_class": "1"}, "5": {"source_program": "import os", "feedback_class": "1"}, "4": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef susu():\n  for num in range(1000):\n\tif not number % 3 or not number % 5:\n\t  print sum(susu())", "feedback_class": "2"}, "7": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n3 * 333 * 334 / 2 + 5 * 200 * 201 / 2", "feedback_class": "1"}, "6": {"source_program": "# In Python, the code\n#\n#     for letter in ['x % 3', 'x % 5']:\n#         print x\n#\n# prints:\n# for num in range(1000):\n  \n \n  ", "feedback_class": "1"}, "9": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnumber = 10\ndef multiplesOfThreeOrFiveBelow(number):\n\t  threes = 3 * (number % 3)\n\t  fives = 5 * (number % 5)\n\t  print threes + fives", "feedback_class": "5"}, "8": {"source_program": "'''\nIf we list all the natural numbers below 10 that are multiples of 3 or 5, \nwe get 3, 5, 6 and 9. The sum of these multiples is 23.\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n'''\n\nend = 1000\n\ndef Solution01():\n    '''\n        Solved by brute force\n        #OPTIMIZE\n    '''\n    sum = 0\n    for i in range(3, end):\n        if isMultiple(i):\n            sum += i \n    print(sum)\n\ndef isMultiple(i):\n    return (i % 3 == 0) or (i % 5 == 0)", "feedback_class": "6"}, "13": {"source_program": "help('modules')", "feedback_class": "1"}, "12": {"source_program": "# \n#\n#     for num in range(1000):\n# print x\n# \n\n\n  ", "feedback_class": "1"}, "17": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nlist = [1,2,3]\nlist", "feedback_class": "1"}, "15": {"source_program": "# In Python, the code\n#\n#     for numbers in ['x % 3', 'x % 5']:\n#         print x\n#\n# prints:\n# for num in range(1000):\n  \n \n  ", "feedback_class": "1"}, "32": {"source_program": " \n\n  \n", "feedback_class": "1"}, "58": {"source_program": "# \n#\n#     for num in range(1000):\n# print num\n# \n\n\n  ", "feedback_class": "1"}, "11": {"source_program": "1000/3\n  ", "feedback_class": "1"}, "10": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#for num in range(1000):\n1001*500*3\n  ", "feedback_class": "1"}, "39": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#for num in range(1000):", "feedback_class": "1"}, "38": {"source_program": "\nend = 1000\n\ndef Solution01():\n\n    sum = 0\n    for i in range(3, end):\n        if isMultiple(i):\n            sum += i \n    print sum\n\ndef isMultiple(i):\n    return (i % 3 == 0) or (i % 5 == 0)\n  \n  ", "feedback_class": "5"}, "59": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n#\tfor num in range(1000):", "feedback_class": "1"}, "22": {"source_program": "# x = sum(set(list(range(0, 1000, 3)) + list(range(0, 1000, 5))))\n# print x", "feedback_class": "1"}, "14": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef susu():\n  for num in range(1000):\n\tif not num % 3 or not num % 5:\n\t  print sum(susu())", "feedback_class": "2"}, "16": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n\n# prints:\n#\n#     a\n#     b\n\nx = 3*333*167 + 5*100*201 - 15 * 33*67", "feedback_class": "1"}, "19": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000):\n#  x % 5 = 0\n#    print x", "feedback_class": "1"}, "54": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef multiples(m, count):\n    for i in range(0,count*m,m):\n        print(i)", "feedback_class": "5"}, "31": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n  ", "feedback_class": "1"}, "56": {"source_program": "# print sum(set(list(range(0, 1000, 3)) + list(range(0, 1000, 5))))\n", "feedback_class": "1"}, "51": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000):\n# x%5\n# print x", "feedback_class": "1"}, "36": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']: ['3', '5']\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000): print x\n\n  \n", "feedback_class": "1"}, "53": {"source_program": "# In Python, the code\n#\n#     for letter in ['3', '5']:\n#         print x\n#\n# prints:\n#\n#     3\n#     5\n# for num in range(1000):\n  \n \n  ", "feedback_class": "1"}, "52": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\nnumber = 10\ndef multiplesOfThreeOrFiveBelow(number):\n\t  threes = 3 * (number % 3)\n\t  fives = 5 * (number % 5)\n\t  print number", "feedback_class": "5"}, "33": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000):\n#  print num \n  \n#  prints: \n#\t3 % 1000\n#\t5 % 1000\n\t\n#\tprint x", "feedback_class": "1"}, "55": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\ndef Solution01():\n  sum = 0\n  for num in range(10):\n  \tif isMultiple(num):\n  \t\tsum += num \n  print sum\n\ndef isMultiple(num):\n  return (num % 3 == 0) or (num % 5 == 0)", "feedback_class": "5"}, "37": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000): print x\n\n  \n", "feedback_class": "1"}, "18": {"source_program": "# \n#\n#     for num in range(1000):\n# print 5\n# \n\n\n  ", "feedback_class": "1"}, "57": {"source_program": "# sum(set(list(range(0, 1000, 3)) + list(range(0, 1000, 5))))", "feedback_class": "1"}, "50": {"source_program": "# In Python, the code\n#\n#     for letter in ['a', 'b']:\n#         print letter\n#\n# prints:\n#\n#     a\n#     b\n\n# for num in range(1000):\n# x % 5\n# print x", "feedback_class": "1"}}